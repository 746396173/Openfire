{
  final String filePrefix="jive.audit-" + dateFormat.format(auditDate) + "-";
  if (currentDateLimit == null || auditDate.after(currentDateLimit)) {
    Calendar calendar=Calendar.getInstance();
    calendar.setTime(auditDate);
    calendar.set(Calendar.HOUR_OF_DAY,23);
    calendar.set(Calendar.MINUTE,59);
    calendar.set(Calendar.SECOND,59);
    calendar.set(Calendar.MILLISECOND,999);
    currentDateLimit=calendar.getTime();
    filesIndex=0;
  }
  FilenameFilter filter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.startsWith(filePrefix) && name.endsWith(".log");
    }
  }
;
  File[] files=baseFolder.listFiles(filter);
  filesIndex=Math.max(files.length,filesIndex);
  if (filesIndex >= maxTotalFilesDay) {
    return;
  }
  File tmpAuditFile=new File(logDir,filePrefix + StringUtils.zeroPadString(Integer.toString(filesIndex),3) + ".log");
  if ((filesIndex == maxTotalFilesDay - 1) && !tmpAuditFile.exists()) {
    Log.warn("Creating last audit file for this date: " + dateFormat.format(auditDate));
  }
  while ((filesIndex < (maxTotalFilesDay - 1)) && (tmpAuditFile.exists())) {
    Log.debug("Audit file '" + tmpAuditFile.getName() + "' does already exist.");
    filesIndex++;
    tmpAuditFile=new File(logDir,filePrefix + StringUtils.zeroPadString(Integer.toString(filesIndex),3) + ".log");
  }
  currentAuditFile=tmpAuditFile;
  close();
  writer=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(currentAuditFile,true),StandardCharsets.UTF_8));
  writer.write("<jive xmlns=\"http://www.jivesoftware.org\">");
  xmlWriter=new org.jivesoftware.util.XMLWriter(writer);
}
