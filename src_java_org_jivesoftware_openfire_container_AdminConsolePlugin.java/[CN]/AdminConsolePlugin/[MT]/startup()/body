{
  restartNeeded=false;
  certificateListener=new CertificateListener();
  CertificateManager.addListener(certificateListener);
  adminPort=JiveGlobals.getXMLProperty("adminConsole.port",9090);
  adminSecurePort=JiveGlobals.getXMLProperty("adminConsole.securePort",9091);
  adminServer=new Server();
  adminServer.setSendServerVersion(false);
  if (adminPort > 0) {
    Connector httpConnector=new SelectChannelConnector();
    String bindInterface=getBindInterface();
    httpConnector.setHost(bindInterface);
    httpConnector.setPort(adminPort);
    adminServer.addConnector(httpConnector);
  }
  sslEnabled=false;
  try {
    if (adminSecurePort > 0 && CertificateManager.isRSACertificate(SSLConfig.getKeyStore(),"*")) {
      if (!CertificateManager.isRSACertificate(SSLConfig.getKeyStore(),XMPPServer.getInstance().getServerInfo().getXMPPDomain())) {
        Log.warn("Admin console: Using RSA certificates but they are not valid for the hosted domain");
      }
      JiveSslConnector httpsConnector=new JiveSslConnector();
      String bindInterface=getBindInterface();
      httpsConnector.setHost(bindInterface);
      httpsConnector.setPort(adminSecurePort);
      httpsConnector.setTrustPassword(SSLConfig.gets2sTrustPassword());
      httpsConnector.setTruststoreType(SSLConfig.getStoreType());
      httpsConnector.setTruststore(SSLConfig.gets2sTruststoreLocation());
      httpsConnector.setNeedClientAuth(false);
      httpsConnector.setWantClientAuth(false);
      httpsConnector.setKeyPassword(SSLConfig.getKeyPassword());
      httpsConnector.setKeystoreType(SSLConfig.getStoreType());
      httpsConnector.setKeystore(SSLConfig.getKeystoreLocation());
      adminServer.addConnector(httpsConnector);
      sslEnabled=true;
    }
  }
 catch (  Exception e) {
    Log.error(e.getMessage(),e);
  }
  if (adminServer.getConnectors() == null || adminServer.getConnectors().length == 0) {
    adminServer=null;
    log(LocaleUtils.getLocalizedString("admin.console.warning"));
    return;
  }
  adminServer.setHandlers(new Handler[]{contexts,new DefaultHandler()});
  try {
    adminServer.start();
  }
 catch (  Exception e) {
    Log.error("Could not start admin conosle server",e);
  }
  logAdminConsolePorts();
}
