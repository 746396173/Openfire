{
  TreeMap<String,Group> groups=new TreeMap<String,Group>();
  boolean debug=Log.isDebugEnabled();
  if (debug) {
    Log.debug("Trying to find all groups in the system.");
  }
  DirContext ctx=null;
  NamingEnumeration answer=null;
  try {
    ctx=manager.getContext();
    if (manager.isDebugEnabled()) {
      Log.debug("Starting LDAP search...");
      Log.debug("Using groupSearchFilter: " + searchFilter);
    }
    SearchControls searchControls=new SearchControls();
    String returnedAtts[]={manager.getGroupNameField(),manager.getGroupDescriptionField(),manager.getGroupMemberField()};
    searchControls.setReturningAttributes(returnedAtts);
    searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);
    answer=ctx.search("",searchFilter,searchControls);
    if (manager.isDebugEnabled()) {
      Log.debug("... search finished");
      Log.debug("Starting to populate groups with users.");
    }
  }
 catch (  Exception e) {
    if (manager.isDebugEnabled())     Log.debug("Error while searching for groups.",e);
    return groups.values();
  }
  SearchControls ctrls=new SearchControls();
  ctrls.setReturningAttributes(new String[]{manager.getUsernameField()});
  ctrls.setSearchScope(SearchControls.SUBTREE_SCOPE);
  while (answer.hasMoreElements()) {
    String name="";
    try {
      Attributes a=(((SearchResult)answer.next()).getAttributes());
      String description;
      try {
        name=((String)((a.get(manager.getGroupNameField())).get()));
        description=((String)((a.get(manager.getGroupDescriptionField())).get()));
      }
 catch (      Exception e) {
        description="";
      }
      TreeSet<String> members=new TreeSet<String>();
      Attribute member=a.get(manager.getGroupMemberField());
      NamingEnumeration ne=member.getAll();
      while (ne.hasMore()) {
        String userName=(String)ne.next();
        if (!manager.getPosixEnabled()) {
          try {
            Name ldapname=new LdapName(userName);
            String ldapcn=ldapname.get(ldapname.size() - 1);
            NamingEnumeration usrAnswer=ctx.search("",ldapcn,ctrls);
            if (usrAnswer.hasMoreElements()) {
              userName=(String)((SearchResult)usrAnswer.next()).getAttributes().get(manager.getUsernameField()).get();
            }
          }
 catch (          Exception e) {
            if (manager.isDebugEnabled())             Log.debug("Error populating user with DN: " + userName,e);
          }
        }
        try {
          User user=userManager.getUser(JID.escapeNode(userName));
          members.add(user.getUsername());
        }
 catch (        UserNotFoundException e) {
          if (manager.isDebugEnabled())           Log.debug("User not found: " + userName);
        }
      }
      if (manager.isDebugEnabled())       Log.debug("Adding group \"" + name + "\" with "+ members.size()+ " members.");
      Group g=new Group(this,name,description,members,new ArrayList<String>());
      groups.put(name,g);
    }
 catch (    Exception e) {
      if (manager.isDebugEnabled())       Log.debug("Error while populating group, " + name + ".",e);
    }
  }
  if (manager.isDebugEnabled())   Log.debug("Finished populating group(s) with users.");
  try {
    ctx.close();
  }
 catch (  Exception e) {
  }
  return groups.values();
}
