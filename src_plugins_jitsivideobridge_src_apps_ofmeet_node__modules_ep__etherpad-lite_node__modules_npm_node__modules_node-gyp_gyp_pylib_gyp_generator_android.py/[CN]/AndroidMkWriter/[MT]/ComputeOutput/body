def ComputeOutput(self, spec):
    "Return the 'output' (full output path) of a gyp spec.\n\n    E.g., the loadable module 'foobar' in directory 'baz' will produce\n      '$(obj)/baz/libfoobar.so'\n    "
    if ((self.type == 'executable') and (self.toolset == 'host')):
        path = '$(gyp_shared_intermediate_dir)'
    elif (self.type == 'shared_library'):
        if (self.toolset == 'host'):
            path = '$(HOST_OUT_INTERMEDIATE_LIBRARIES)'
        else:
            path = '$(TARGET_OUT_INTERMEDIATE_LIBRARIES)'
    elif (self.toolset == 'host'):
        path = ('$(call intermediates-dir-for,%s,%s,true)' % (self.android_class, self.android_module))
    else:
        path = ('$(call intermediates-dir-for,%s,%s)' % (self.android_class, self.android_module))
    assert (spec.get('product_dir') is None)
    return os.path.join(path, self.ComputeOutputBasename(spec))
