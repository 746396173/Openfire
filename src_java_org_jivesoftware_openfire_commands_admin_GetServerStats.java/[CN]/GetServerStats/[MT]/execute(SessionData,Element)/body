{
  DataForm form=new DataForm(DataForm.Type.result);
  FormField field=form.addField();
  field.setType(FormField.Type.hidden);
  field.setVariable("FORM_TYPE");
  field.addValue("http://jabber.org/protocol/admin");
  field=form.addField();
  field.setLabel(LocaleUtils.getLocalizedString("index.server_name"));
  field.setVariable("name");
  field.addValue(AdminConsole.getAppName());
  field=form.addField();
  field.setLabel(LocaleUtils.getLocalizedString("index.version"));
  field.setVariable("version");
  field.addValue(AdminConsole.getVersionString());
  field=form.addField();
  field.setLabel(LocaleUtils.getLocalizedString("index.domain_name"));
  field.setVariable("domain");
  field.addValue(XMPPServer.getInstance().getServerInfo().getXMPPDomain());
  field=form.addField();
  field.setLabel(LocaleUtils.getLocalizedString("index.jvm"));
  field.setVariable("os");
  String vmName=System.getProperty("java.vm.name");
  if (vmName == null) {
    vmName="";
  }
 else {
    vmName=" -- " + vmName;
  }
  field.addValue(System.getProperty("java.version") + " " + System.getProperty("java.vendor")+ vmName);
  field=form.addField();
  field.setLabel(LocaleUtils.getLocalizedString("index.uptime"));
  field.setVariable("uptime");
  field.addValue(XMPPDateTimeFormat.format(XMPPServer.getInstance().getServerInfo().getLastStarted()));
  DecimalFormat mbFormat=new DecimalFormat("#0.00");
  DecimalFormat percentFormat=new DecimalFormat("#0.0");
  Runtime runtime=Runtime.getRuntime();
  double freeMemory=(double)runtime.freeMemory() / (1024 * 1024);
  double maxMemory=(double)runtime.maxMemory() / (1024 * 1024);
  double totalMemory=(double)runtime.totalMemory() / (1024 * 1024);
  double usedMemory=totalMemory - freeMemory;
  double percentFree=((maxMemory - usedMemory) / maxMemory) * 100.0;
  double percentUsed=100 - percentFree;
  field=form.addField();
  field.setLabel(LocaleUtils.getLocalizedString("index.memory"));
  field.setVariable("memory");
  field.addValue(mbFormat.format(usedMemory) + " MB of " + mbFormat.format(maxMemory)+ " MB ("+ percentFormat.format(percentUsed)+ "%) used");
  Collection<ClientSession> sessions=SessionManager.getInstance().getSessions();
  Set<String> users=new HashSet<>(sessions.size());
  int availableSessions=0;
  for (  ClientSession session : sessions) {
    if (session.getPresence().isAvailable()) {
      users.add(session.getAddress().toBareJID());
      availableSessions++;
    }
  }
  field=form.addField();
  field.setLabel("Available Users");
  field.setVariable("activeusersnum");
  field.addValue(users.size());
  field=form.addField();
  field.setLabel("Available Users Sessions");
  field.setVariable("sessionsnum");
  field.addValue(availableSessions);
  command.add(form.getElement());
}
