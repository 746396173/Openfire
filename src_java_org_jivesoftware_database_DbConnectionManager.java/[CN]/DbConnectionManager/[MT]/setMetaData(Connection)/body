{
  DatabaseMetaData metaData=con.getMetaData();
  transactionsSupported=metaData.supportsTransactions();
  subqueriesSupported=metaData.supportsCorrelatedSubqueries();
  scrollResultsSupported=metaData.supportsResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE);
  batchUpdatesSupported=metaData.supportsBatchUpdates();
  streamTextRequired=false;
  maxRowsSupported=true;
  fetchSizeSupported=true;
  String dbName=metaData.getDatabaseProductName().toLowerCase();
  String driverName=metaData.getDriverName().toLowerCase();
  if (dbName.indexOf("oracle") != -1) {
    databaseType=DatabaseType.oracle;
    streamTextRequired=true;
    if (driverName.indexOf("auguro") != -1) {
      streamTextRequired=false;
      fetchSizeSupported=true;
      maxRowsSupported=false;
    }
  }
 else   if (dbName.indexOf("postgres") != -1) {
    databaseType=DatabaseType.postgres;
    scrollResultsSupported=false;
    fetchSizeSupported=false;
  }
 else   if (dbName.indexOf("interbase") != -1) {
    databaseType=DatabaseType.interbase;
    fetchSizeSupported=false;
    maxRowsSupported=false;
  }
 else   if (dbName.indexOf("sql server") != -1 && driverName.indexOf("una") != -1) {
    databaseType=DatabaseType.sqlserver;
    fetchSizeSupported=true;
    maxRowsSupported=false;
  }
 else   if (dbName.indexOf("mysql") != -1) {
    databaseType=DatabaseType.mysql;
    transactionsSupported=false;
  }
 else   if (dbName.indexOf("hsql") != -1) {
    databaseType=DatabaseType.hsqldb;
    scrollResultsSupported=false;
  }
 else   if (dbName.indexOf("db2") != 1) {
    databaseType=DatabaseType.db2;
  }
}
