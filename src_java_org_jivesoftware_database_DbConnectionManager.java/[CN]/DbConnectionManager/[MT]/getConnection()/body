{
  if (connectionProvider == null) {
synchronized (providerLock) {
      if (connectionProvider == null) {
        String className=JiveGlobals.getXMLProperty("connectionProvider.className");
        if (className != null) {
          try {
            Class conClass=ClassUtils.forName(className);
            setConnectionProvider((ConnectionProvider)conClass.newInstance());
          }
 catch (          Exception e) {
            Log.warn("Failed to create the " + "connection provider specified by connection" + "Provider.className. Using the default pool.",e);
            setConnectionProvider(new DefaultConnectionProvider());
          }
        }
 else {
          setConnectionProvider(new DefaultConnectionProvider());
        }
      }
    }
  }
  Integer retryCnt=0;
  Integer retryMax=10;
  Integer retryWait=250;
  Connection con=null;
  SQLException lastException=null;
  do {
    retryCnt++;
    try {
      con=connectionProvider.getConnection();
    }
 catch (    SQLException e) {
      lastException=e;
      Log.info("Unable to get a connection from the database pool " + "(attempt " + retryCnt + " out of "+ retryMax+ ").",e);
    }
    if (con != null) {
      break;
    }
    try {
      Thread.sleep(retryWait);
    }
 catch (    Exception e) {
    }
  }
 while (retryCnt <= retryMax);
  if (con == null) {
    throw new SQLException("ConnectionManager.getConnection() " + "failed to obtain a connection after " + retryCnt + " retries. "+ "The exception from the last attempt is as follows: "+ lastException);
  }
  if (profilingEnabled) {
    return new ProfiledConnection(con);
  }
 else {
    return con;
  }
}
