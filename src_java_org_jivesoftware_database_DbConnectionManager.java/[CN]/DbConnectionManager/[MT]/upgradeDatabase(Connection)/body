{
  int majorVersion;
  int minorVersion;
  PreparedStatement pstmt=null;
  try {
    pstmt=con.prepareStatement(CHECK_VERSION);
    ResultSet rs=pstmt.executeQuery();
    if (!rs.next()) {
      majorVersion=2;
      minorVersion=0;
    }
    majorVersion=rs.getInt(1);
    minorVersion=rs.getInt(2);
    rs.close();
  }
 catch (  SQLException sqle) {
    majorVersion=2;
    minorVersion=0;
  }
 finally {
    try {
      if (pstmt != null) {
        pstmt.close();
      }
    }
 catch (    Exception e) {
      Log.error(e);
    }
  }
  if (minorVersion == CURRENT_MINOR_VERSION) {
    return false;
  }
  Log.info("Found old database schema (" + majorVersion + "."+ minorVersion+ "). "+ "Upgrading to latest schema.");
  if (databaseType == DatabaseType.unknown) {
    Log.info("Warning: database type unknown. You must manually upgrade your database.");
    return false;
  }
 else   if (databaseType == DatabaseType.interbase) {
    Log.info("Warning: automatic upgrades of Interbase are not supported. You " + "must manually upgrade your database.");
    return false;
  }
  for (int i=minorVersion; i < CURRENT_MINOR_VERSION; i++) {
    BufferedReader in=null;
    Statement stmt=null;
    try {
      String resourceName="/database/upgrade/" + CURRENT_MAJOR_VERSION + "."+ i+ "_to_"+ CURRENT_MAJOR_VERSION+ "."+ (i + 1)+ "/messenger_"+ databaseType+ ".sql";
      in=new BufferedReader(new InputStreamReader(new DbConnectionManager().getClass().getResourceAsStream(resourceName)));
      boolean done=false;
      while (!done) {
        StringBuilder command=new StringBuilder();
        while (true) {
          String line=in.readLine();
          if (line == null) {
            done=true;
            break;
          }
          if (isSQLCommandPart(line)) {
            command.append(line);
          }
          if (line.endsWith(";")) {
            break;
          }
        }
        if (!done && command != null) {
          stmt=con.createStatement();
          stmt.execute(command.toString());
          stmt.close();
        }
      }
    }
  finally {
      try {
        if (pstmt != null) {
          pstmt.close();
        }
      }
 catch (      Exception e) {
        Log.error(e);
      }
      if (in != null) {
        try {
          in.close();
        }
 catch (        Exception e) {
        }
      }
    }
  }
  return true;
}
