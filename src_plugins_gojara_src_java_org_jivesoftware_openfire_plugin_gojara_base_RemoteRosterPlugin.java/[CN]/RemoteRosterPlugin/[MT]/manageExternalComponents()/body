{
  InternalComponentManager compManager=InternalComponentManager.getInstance();
  compManager.addListener(new ComponentEventListener(){
    @Override public void componentUnregistered(    JID componentJID){
      ComponentSession session=_sessionManager.getComponentSession(componentJID.getDomain());
      if (session != null && _interceptors.containsKey(session.getExternalComponent().getInitialSubdomain())) {
        String initialSubdomain=session.getExternalComponent().getInitialSubdomain();
        removeInterceptor(initialSubdomain);
      }
    }
    @Override public void componentRegistered(    JID componentJID){
      _waitingForIQResponse.add(componentJID.getDomain());
    }
    @Override public void componentInfoReceived(    IQ iq){
      String from=iq.getFrom().getDomain();
      if (_waitingForIQResponse.contains(from)) {
        Element packet=iq.getChildElement();
        Document doc=packet.getDocument();
        List<Node> nodes=XpathHelper.findNodesInDocument(doc,"//disco:identity[@category='gateway']");
        if (nodes.size() > 0 && !_interceptors.containsKey(from)) {
          updateInterceptors(from);
        }
        _waitingForIQResponse.remove(from);
      }
    }
  }
);
}
