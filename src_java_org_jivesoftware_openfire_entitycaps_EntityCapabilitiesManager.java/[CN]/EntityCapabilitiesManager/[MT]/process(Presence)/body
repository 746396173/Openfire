{
  if (Presence.Type.unavailable == packet.getType()) {
    return;
  }
  Element capsElement=packet.getChildElement("c","http://jabber.org/protocol/caps");
  if (capsElement == null) {
    return;
  }
  final String hashAttribute=capsElement.attributeValue("hash");
  if (hashAttribute == null || hashAttribute.trim().length() == 0) {
    return;
  }
  final String newVerAttribute=capsElement.attributeValue("ver");
  if (newVerAttribute == null || newVerAttribute.trim().length() == 0) {
    return;
  }
  if (isInCapsCache(newVerAttribute)) {
    entityCapabilitiesUserMap.put(packet.getFrom(),newVerAttribute);
  }
 else {
    IQ iq=new IQ(IQ.Type.get);
    iq.setTo(packet.getFrom());
    String serverName=XMPPServer.getInstance().getServerInfo().getXMPPDomain();
    iq.setFrom(serverName);
    iq.setChildElement("query","http://jabber.org/protocol/disco#info");
    String packetId=iq.getID();
    final EntityCapabilities caps=new EntityCapabilities();
    caps.setHashAttribute(hashAttribute);
    caps.setVerAttribute(newVerAttribute);
    verAttributes.put(packetId,caps);
    final IQRouter iqRouter=XMPPServer.getInstance().getIQRouter();
    iqRouter.addIQResultListener(packetId,this);
    iqRouter.route(iq);
  }
}
