{
  BufferedReader reader=null;
  try {
    reader=new BufferedReader(new StringReader(stompMessage));
    String messageType=reader.readLine();
    StompMessageType type=StompMessageType.valueOf(messageType);
    List<String> headers=new ArrayList<String>();
    String hdr=reader.readLine();
    while (StringUtils.isNotEmpty(hdr)) {
      headers.add(hdr);
      hdr=reader.readLine();
    }
    String body=reader.readLine();
    body=body == null || body.equals(EOM) ? null : fillBody(body,reader);
    MSG msg=createStampyMessage(type,headers);
    if (!StringUtils.isEmpty(body) && msg instanceof AbstractBodyMessage<?>) {
      AbstractBodyMessage<?> abm=(AbstractBodyMessage<?>)msg;
      abm.setBody(isText(headers) ? body : convertToObject(body,abm.getHeader().getContentType()));
    }
    return msg;
  }
 catch (  Exception e) {
    throw new UnparseableException("The message supplied cannot be parsed as a STOMP message",stompMessage,e);
  }
 finally {
    if (reader != null) {
      try {
        reader.close();
      }
 catch (      IOException e) {
        log.warn("Could not close reader",e);
      }
    }
  }
}
