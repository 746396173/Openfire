{
  String namespace=parser.getNamespace();
  if (!ConferenceIq.NAMESPACE.equals(namespace)) {
    return null;
  }
  String rootElement=parser.getName();
  ConferenceIq iq;
  if (ConferenceIq.ELEMENT_NAME.equals(rootElement)) {
    iq=new ConferenceIq();
    String room=parser.getAttributeValue("",ConferenceIq.ROOM_ATTR_NAME);
    iq.setRoom(room);
    String ready=parser.getAttributeValue("",ConferenceIq.READY_ATTR_NAME);
    if (!StringUtils.isNullOrEmpty(ready)) {
      iq.setReady(Boolean.valueOf(ready));
    }
    String focusJid=parser.getAttributeValue("",ConferenceIq.FOCUS_JID_ATTR_NAME);
    if (!StringUtils.isNullOrEmpty(focusJid)) {
      iq.setFocusJid(focusJid);
    }
  }
 else {
    return null;
  }
  ConferenceIq.Property property=null;
  boolean done=false;
  while (!done) {
switch (parser.next()) {
case XmlPullParser.END_TAG:
{
        String name=parser.getName();
        if (rootElement.equals(name)) {
          done=true;
        }
 else         if (ConferenceIq.Property.ELEMENT_NAME.equals(name)) {
          if (property != null) {
            iq.addProperty(property);
            property=null;
          }
        }
        break;
      }
case XmlPullParser.START_TAG:
{
      String name=parser.getName();
      if (ConferenceIq.Property.ELEMENT_NAME.equals(name)) {
        property=new ConferenceIq.Property();
        String propName=parser.getAttributeValue("",ConferenceIq.Property.NAME_ATTR_NAME);
        if (!StringUtils.isNullOrEmpty(propName)) {
          property.setName(propName);
        }
        String propValue=parser.getAttributeValue("",ConferenceIq.Property.VALUE_ATTR_NAME);
        if (!StringUtils.isNullOrEmpty(propValue)) {
          property.setValue(propValue);
        }
      }
    }
}
}
return iq;
}
