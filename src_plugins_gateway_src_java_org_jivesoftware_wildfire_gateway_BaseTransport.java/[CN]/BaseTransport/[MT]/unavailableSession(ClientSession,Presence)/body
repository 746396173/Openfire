{
  Log.debug("unavailableSession " + clSession + ":"+ packet);
  JID from=packet.getFrom();
  Collection<Registration> registrations=registrationManager.getRegistrations(from,this.transportType);
  if (registrations.isEmpty()) {
    return;
  }
  TransportSession session;
  try {
    session=sessionManager.getSession(from);
    if (session.getResourceCount() > 1) {
      String resource=from.getResource();
      if (session.isHighestPriority(resource)) {
        Log.debug("A high priority resource (of multiple) has gone offline: " + from);
        session.removeResource(resource);
        Presence p=new Presence(Presence.Type.probe);
        p.setTo(session.getJIDWithHighestPriority());
        p.setFrom(this.getJID());
        sendPacket(p);
      }
 else {
        Log.debug("A low priority resource (of multiple) has gone offline: " + from);
        session.removeResource(resource);
      }
    }
 else {
      Log.debug("A final resource has gone offline: " + from);
      if (session.isLoggedIn()) {
        this.registrationLoggedOut(session);
      }
      sessionManager.removeSession(from);
    }
  }
 catch (  NotFoundException e) {
    Log.debug("Ignoring unavailable presence for inactive seession.");
  }
}
