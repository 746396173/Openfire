{
  Log.debug("Received presence packet: " + packet.toXML());
  List<Packet> reply=new ArrayList<Packet>();
  JID from=packet.getFrom();
  JID to=packet.getTo();
  if (packet.getType() == Presence.Type.error) {
    return reply;
  }
  try {
    if (to.getNode() == null) {
      Collection<Registration> registrations=registrationManager.getRegistrations(from,this.transportType);
      if (registrations.isEmpty()) {
        Log.debug("Unable to find registration.");
        return reply;
      }
      if (packet.getType() == Presence.Type.probe) {
        TransportSession session;
        try {
          session=sessionManager.getSession(from);
          if (session.isLoggedIn()) {
            Presence p=new Presence();
            p.setTo(from);
            p.setFrom(to);
            this.sendPacket(p);
          }
        }
 catch (        NotFoundException e) {
          Log.debug("Ignoring probe presence for inactive session.");
        }
      }
 else {
        Log.debug("Ignoring this packet:" + packet.toString());
      }
    }
 else {
      try {
        TransportSession session=sessionManager.getSession(from);
        if (packet.getType() == Presence.Type.probe) {
          session.retrieveContactStatus(to);
        }
 else {
        }
      }
 catch (      NotFoundException e) {
      }
    }
  }
 catch (  Exception e) {
    Log.error("Exception while processing packet: ",e);
  }
  return reply;
}
