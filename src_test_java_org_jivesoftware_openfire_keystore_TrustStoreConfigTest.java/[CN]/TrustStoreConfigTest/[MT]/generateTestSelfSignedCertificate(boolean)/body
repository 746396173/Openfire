{
  KeyPairGenerator keyPairGenerator=KeyPairGenerator.getInstance("RSA");
  keyPairGenerator.initialize(1024);
  KeyPair KPair=keyPairGenerator.generateKeyPair();
  X509V3CertificateGenerator v3CertGen=new X509V3CertificateGenerator();
  v3CertGen.setSerialNumber(BigInteger.valueOf(Math.abs(new SecureRandom().nextInt())));
  X509Principal principal;
  if (isValid) {
    principal=new X509Principal("CN=valid.example.org, OU=None, O=None L=None, C=None");
    v3CertGen.setNotBefore(new Date(System.currentTimeMillis() - 1000L * 60 * 60* 24* 30));
    v3CertGen.setNotAfter(new Date(System.currentTimeMillis() + (1000L * 60 * 60* 24* 365* 10)));
  }
 else {
    principal=new X509Principal("CN=invalid.example.org, OU=None, O=None L=None, C=None");
    v3CertGen.setNotBefore(new Date(System.currentTimeMillis() - 1000L * 60 * 60* 24* 30));
    v3CertGen.setNotAfter(new Date(System.currentTimeMillis() - 1000L * 60 * 60* 24* 30));
  }
  v3CertGen.setIssuerDN(principal);
  v3CertGen.setSubjectDN(principal);
  v3CertGen.setPublicKey(KPair.getPublic());
  v3CertGen.setSignatureAlgorithm("MD5WithRSAEncryption");
  return v3CertGen.generateX509Certificate(KPair.getPrivate());
}
