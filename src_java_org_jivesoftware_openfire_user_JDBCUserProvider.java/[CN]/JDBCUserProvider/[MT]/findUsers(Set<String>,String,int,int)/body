{
  if (searchSQL == null) {
    throw new UnsupportedOperationException();
  }
  if (fields.isEmpty()) {
    return Collections.emptyList();
  }
  if (!getSearchFields().containsAll(fields)) {
    throw new IllegalArgumentException("Search fields " + fields + " are not valid.");
  }
  if (query == null || "".equals(query)) {
    return Collections.emptyList();
  }
  query="%" + query.replace('*','%') + "%";
  if (query.endsWith("%%")) {
    query=query.substring(0,query.length() - 1);
  }
  List<String> usernames=new ArrayList<String>(50);
  Connection con=null;
  Statement stmt=null;
  ResultSet rs=null;
  try {
    con=getConnection();
    stmt=con.createStatement();
    StringBuilder sql=new StringBuilder();
    sql.append(searchSQL);
    boolean first=true;
    if (fields.contains("Username")) {
      sql.append(" ").append(usernameField).append(" LIKE '").append(StringUtils.escapeForSQL(query)).append("'");
      first=false;
    }
    if (fields.contains("Name")) {
      if (!first) {
        sql.append(" AND ");
      }
      sql.append(" ").append(nameField).append("LIKE '").append(StringUtils.escapeForSQL(query)).append("'");
      first=false;
    }
    if (fields.contains("Email")) {
      if (!first) {
        sql.append(" AND ");
      }
      sql.append(" ").append(emailField).append(" LIKE '").append(StringUtils.escapeForSQL(query)).append("'");
    }
    Log.debug("JDBCUserProvider: " + sql.toString());
    rs=stmt.executeQuery(sql.toString());
    DbConnectionManager.scrollResultSet(rs,startIndex);
    while (rs.next()) {
      usernames.add(rs.getString(1));
    }
  }
 catch (  SQLException e) {
    Log.error(e);
  }
 finally {
    DbConnectionManager.closeConnection(rs,stmt,con);
  }
  return new UserCollection(usernames.toArray(new String[usernames.size()]));
}
