{
  if (!isStarted || isSocketStarted || auditManager == null || sessionManager == null || deliverer == null || router == null || serverName == null || packetFactory == null) {
    return;
  }
  isSocketStarted=true;
  String localIPAddress=null;
  try {
    localIPAddress=InetAddress.getLocalHost().getHostAddress();
  }
 catch (  UnknownHostException e) {
    if (localIPAddress == null) {
      localIPAddress="Unknown";
    }
  }
  if ("true".equals(JiveGlobals.getProperty("xmpp.socket.ssl.active"))) {
    try {
      sslSocketThread=new SSLSocketAcceptThread(this);
      String algorithm=JiveGlobals.getProperty("xmpp.socket.ssl.algorithm");
      if ("".equals(algorithm) || algorithm == null) {
        algorithm="TLS";
      }
      ports.add(new ServerPortImpl(sslSocketThread.getPort(),serverName,localIPAddress,true,algorithm));
      sslSocketThread.setDaemon(true);
      sslSocketThread.start();
      List params=new ArrayList();
      params.add(Integer.toString(sslSocketThread.getPort()));
      Log.info(LocaleUtils.getLocalizedString("startup.ssl",params));
    }
 catch (    Exception e) {
      Log.error(LocaleUtils.getLocalizedString("admin.error.ssl"),e);
    }
  }
 else {
    socketThread=new SocketAcceptThread(this);
    ports.add(new ServerPortImpl(socketThread.getPort(),serverName,localIPAddress,false,null));
    socketThread.setDaemon(true);
    socketThread.start();
    List params=new ArrayList();
    params.add(Integer.toString(socketThread.getPort()));
    Log.info(LocaleUtils.getLocalizedString("startup.plain",params));
  }
}
