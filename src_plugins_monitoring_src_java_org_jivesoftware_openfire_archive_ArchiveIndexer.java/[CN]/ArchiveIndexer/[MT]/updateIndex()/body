{
  if (stopped) {
    return;
  }
  if (!conversationManager.isArchivingEnabled()) {
    return;
  }
  if (rebuildInProgress) {
    return;
  }
  writerLock.lock();
  IndexModifier writer=null;
  try {
    writer=new IndexModifier(directory,new StandardAnalyzer(),false);
    List<Long> conversationIDs=new ArrayList<Long>();
    Connection con=null;
    PreparedStatement pstmt=null;
    ResultSet rs=null;
    try {
      con=DbConnectionManager.getConnection();
      pstmt=con.prepareStatement(NEW_CONVERSATIONS);
      pstmt.setLong(1,lastModified);
      rs=pstmt.executeQuery();
      while (rs.next()) {
        conversationIDs.add(rs.getLong(1));
      }
    }
 catch (    SQLException sqle) {
      Log.error(sqle);
    }
 finally {
      DbConnectionManager.closeConnection(rs,pstmt,con);
    }
    for (    long conversationID : conversationIDs) {
      writer.deleteDocuments(new Term("conversationID",Long.toString(conversationID)));
    }
    Map<Long,Boolean> externalMetaData=new HashMap<Long,Boolean>();
    for (    long conversationID : conversationIDs) {
      try {
        con=DbConnectionManager.getConnection();
        pstmt=con.prepareStatement(CONVERSATION_METADATA);
        pstmt.setLong(1,conversationID);
        rs=pstmt.executeQuery();
        while (rs.next()) {
          externalMetaData.put(conversationID,rs.getInt(1) == 1);
        }
      }
 catch (      SQLException sqle) {
        Log.error(sqle);
      }
 finally {
        DbConnectionManager.closeConnection(rs,pstmt,con);
      }
    }
    long newestDate=indexConversations(conversationIDs,externalMetaData,writer,false);
    writer.optimize();
    if (newestDate != -1) {
      lastModified=newestDate;
      indexProperties.setProperty("lastModified",Long.toString(lastModified));
    }
  }
 catch (  IOException ioe) {
    Log.error(ioe);
  }
 finally {
    if (writer != null) {
      try {
        writer.close();
      }
 catch (      Exception e) {
        Log.error(e);
      }
    }
    writerLock.unlock();
  }
}
