{
  if (stopped) {
    return null;
  }
  if (rebuildInProgress) {
    return null;
  }
  rebuildInProgress=true;
  if (!conversationManager.isArchivingEnabled()) {
    return null;
  }
  rebuildFuture=new RebuildFuture();
  Runnable rebuildTask=new Runnable(){
    public void run(){
      List<Long> conversationIDs=new ArrayList<Long>();
      Map<Long,Boolean> externalMetaData=new HashMap<Long,Boolean>();
      Connection con=null;
      PreparedStatement pstmt=null;
      ResultSet rs=null;
      try {
        con=DbConnectionManager.getConnection();
        pstmt=con.prepareStatement(ALL_CONVERSATIONS);
        rs=pstmt.executeQuery();
        while (rs.next()) {
          long conversationID=rs.getLong(1);
          conversationIDs.add(conversationID);
          externalMetaData.put(conversationID,rs.getInt(2) == 1);
        }
      }
 catch (      SQLException sqle) {
        Log.error(sqle.getMessage(),sqle);
      }
 finally {
        DbConnectionManager.closeConnection(rs,pstmt,con);
      }
      if (!conversationIDs.isEmpty()) {
        writerLock.lock();
        IndexModifier writer=null;
        try {
          writer=new IndexModifier(directory,new StandardAnalyzer(),true);
          long newestDate=indexConversations(conversationIDs,externalMetaData,writer,true);
          writer.optimize();
          if (newestDate != -1) {
            lastModified=newestDate;
            indexProperties.setProperty("lastModified",Long.toString(lastModified));
          }
        }
 catch (        IOException ioe) {
          Log.error(ioe.getMessage(),ioe);
        }
 finally {
          if (writer != null) {
            try {
              writer.close();
            }
 catch (            Exception e) {
              Log.error(e.getMessage(),e);
            }
          }
          writerLock.unlock();
        }
      }
      rebuildFuture=null;
      rebuildInProgress=false;
    }
  }
;
  taskEngine.submit(rebuildTask);
  return rebuildFuture;
}
