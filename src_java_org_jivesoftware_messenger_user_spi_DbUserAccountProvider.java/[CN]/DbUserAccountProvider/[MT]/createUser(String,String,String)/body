{
  if (email == null || email.length() == 0) {
    email=" ";
  }
  long id=-1;
  Connection con=null;
  PreparedStatement pstmt=null;
  boolean abortTransaction=false;
  try {
    id=SequenceManager.nextID(JiveConstants.USER);
    con=DbConnectionManager.getTransactionConnection();
    pstmt=con.prepareStatement(INSERT_USERID);
    pstmt.setString(1,username);
    pstmt.setLong(2,DbUserIDProvider.DEFAULT_DOMAIN);
    pstmt.setLong(3,DbUserIDProvider.USER_TYPE);
    pstmt.setLong(4,id);
    pstmt.execute();
    pstmt=con.prepareStatement(INSERT_USER);
    pstmt.setLong(1,id);
    pstmt.setString(2,password);
    pstmt.setString(3,"");
    pstmt.setInt(4,1);
    pstmt.setString(5,email);
    pstmt.setInt(6,0);
    Date now=new Date();
    pstmt.setString(7,StringUtils.dateToMillis(now));
    pstmt.setString(8,StringUtils.dateToMillis(now));
    pstmt.execute();
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
    abortTransaction=true;
  }
 finally {
    try {
      if (pstmt != null) {
        pstmt.close();
      }
    }
 catch (    Exception e) {
      Log.error(e);
    }
    DbConnectionManager.closeTransactionConnection(con,abortTransaction);
  }
  if (id == -1) {
    throw new UnauthorizedException("Failed to create user, please " + "check Jive error logs for details");
  }
  return id;
}
