{
  try {
    File classesDir=new File(directory,"classes");
    if (classesDir.exists()) {
      addURL(classesDir.toURL());
    }
    File databaseDir=new File(directory,"database");
    if (databaseDir.exists()) {
      addURL(databaseDir.toURL());
    }
    File i18nDir=new File(directory,"i18n");
    if (i18nDir.exists()) {
      addURL(i18nDir.toURL());
    }
    File webDir=new File(directory,"web");
    if (webDir.exists()) {
      addURL(webDir.toURL());
    }
    File libDir=new File(directory,"lib");
    File[] jars=libDir.listFiles(new FilenameFilter(){
      public boolean accept(      File dir,      String name){
        return name.endsWith(".jar") || name.endsWith(".zip");
      }
    }
);
    if (jars != null) {
      for (int i=0; i < jars.length; i++) {
        if (jars[i] != null && jars[i].isFile()) {
          String jarFileUri=jars[i].toURI().toString() + "!/";
          if (developmentMode) {
            if (!jars[i].getName().equals("plugin-" + directory.getName() + ".jar")) {
              addURLFile(new URL("jar","",-1,jarFileUri));
            }
          }
 else {
            addURLFile(new URL("jar","",-1,jarFileUri));
          }
        }
      }
    }
  }
 catch (  MalformedURLException mue) {
    Log.error(mue.getMessage(),mue);
  }
}
