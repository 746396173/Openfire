{
  ContextHandlerCollection contexts=HttpBindManager.getInstance().getContexts();
  this.manager=manager;
  this.pluginDirectory=pluginDirectory;
  try {
    Log.info("OfMeet Plugin - Initialize jitsi videobridge ");
    jitsiPlugin=new PluginImpl();
    jitsiPlugin.initializePlugin(manager,pluginDirectory);
    Log.info("OfMeet Plugin - Initialize SIP gateway ");
    jigasiPlugin=new JigasiPlugin();
    jigasiPlugin.initializePlugin(manager,pluginDirectory);
    Log.info("OfMeet Plugin - Initialize jitsi conference focus");
    UserManager userManager=XMPPServer.getInstance().getUserManager();
    String domain=XMPPServer.getInstance().getServerInfo().getXMPPDomain();
    String userName="focus";
    String focusUserJid=userName + "@" + domain;
    try {
      userManager.getUser(userName);
    }
 catch (    UserNotFoundException e) {
      Log.info("OfMeet Plugin - Setup focus user " + focusUserJid);
      String focusUserPassword="focus-password-" + System.currentTimeMillis();
      try {
        userManager.createUser(userName,focusUserPassword,"Openfire Meetings Focus User",focusUserJid);
        JiveGlobals.setProperty("org.jitsi.videobridge.ofmeet.focus.user.jid",focusUserJid);
        JiveGlobals.setProperty("org.jitsi.videobridge.ofmeet.focus.user.password",focusUserPassword);
        MultiUserChatService mucService=XMPPServer.getInstance().getMultiUserChatManager().getMultiUserChatService("conference");
        List<JID> allowedJIDs=new ArrayList<JID>();
        allowedJIDs.add(new JID(focusUserJid));
        mucService.addSysadmins(allowedJIDs);
      }
 catch (      Exception e1) {
        Log.error("Could NOT create focus user",e1);
      }
    }
    new Timer().schedule(new TimerTask(){
      @Override public void run(){
        jicofoPlugin=new JicofoPlugin();
        jicofoPlugin.initializePlugin(manager,pluginDirectory);
      }
    }
,5000);
    ClusterManager.addListener(this);
    Log.info("OfMeet Plugin - Initialize websockets ");
    ServletContextHandler context=new ServletContextHandler(contexts,"/ofmeetws",ServletContextHandler.SESSIONS);
    context.addServlet(new ServletHolder(new XMPPServlet()),"/server");
    WebAppContext context2=new WebAppContext(contexts,pluginDirectory.getPath(),"/ofmeet");
    context2.setWelcomeFiles(new String[]{"index.html"});
    String securityEnabled=JiveGlobals.getProperty("ofmeet.security.enabled","true");
    if ("true".equals(securityEnabled)) {
      Log.info("OfMeet Plugin - Initialize security");
      context2.setSecurityHandler(basicAuth("ofmeet"));
    }
  }
 catch (  Exception e) {
    Log.error("Could NOT start open fire meetings");
  }
}
