{
  Log.info("OfMeet Plugin - processMeetingPlanner");
  final Collection<Bookmark> bookmarks=BookmarkManager.getBookmarks();
  for (  Bookmark bookmark : bookmarks) {
    String json=bookmark.getProperty("calendar");
    if (json != null) {
      bookmark.setProperty("lock","true");
      JSONArray calendar=new JSONArray(json);
      boolean done=false;
      for (int i=0; i < calendar.length(); i++) {
        JSONObject meeting=calendar.getJSONObject(i);
        boolean processed=meeting.getBoolean("processed");
        long startLong=meeting.getLong("startTime");
        Date rightNow=new Date(System.currentTimeMillis());
        Date actionDate=new Date(startLong + 300000);
        Date warnDate=new Date(startLong - 960000);
        Log.debug("OfMeet Plugin - scanning meeting now " + rightNow + " action "+ actionDate+ " warn "+ warnDate+ "\n"+ meeting);
        if (rightNow.after(warnDate) && rightNow.before(actionDate)) {
          for (          String user : bookmark.getUsers()) {
            processMeeting(meeting,user);
          }
          for (          String groupName : bookmark.getGroups()) {
            try {
              Group group=GroupManager.getInstance().getGroup(groupName);
              for (              JID memberJID : group.getMembers()) {
                processMeeting(meeting,memberJID.getNode());
              }
            }
 catch (            GroupNotFoundException e) {
            }
          }
          meeting.put("processed",true);
          done=true;
        }
      }
      if (done) {
        json=calendar.toString();
        bookmark.setProperty("calendar",json);
        Log.debug("OfMeet Plugin - processed meeting\n" + json);
      }
      bookmark.setProperty("lock","false");
    }
  }
}
