def _GetMSBuildAttributes(spec, config, build_file):
    if ('msbuild_configuration_attributes' not in config):
        msbuild_attributes = _ConvertMSVSBuildAttributes(spec, config, build_file)
    else:
        config_type = _GetMSVSConfigurationType(spec, build_file)
        config_type = _ConvertMSVSConfigurationType(config_type)
        msbuild_attributes = config.get('msbuild_configuration_attributes', {})
        msbuild_attributes.setdefault('ConfigurationType', config_type)
        output_dir = msbuild_attributes.get('OutputDirectory', '$(SolutionDir)$(Configuration)')
        msbuild_attributes['OutputDirectory'] = (_FixPath(output_dir) + '\\')
        if ('IntermediateDirectory' not in msbuild_attributes):
            intermediate = (_FixPath('$(Configuration)') + '\\')
            msbuild_attributes['IntermediateDirectory'] = intermediate
        if ('CharacterSet' in msbuild_attributes):
            msbuild_attributes['CharacterSet'] = _ConvertMSVSCharacterSet(msbuild_attributes['CharacterSet'])
    if ('TargetName' not in msbuild_attributes):
        prefix = spec.get('product_prefix', '')
        product_name = spec.get('product_name', '$(ProjectName)')
        target_name = (prefix + product_name)
        msbuild_attributes['TargetName'] = target_name
    if (('TargetExt' not in msbuild_attributes) and ('product_extension' in spec)):
        ext = spec.get('product_extension')
        msbuild_attributes['TargetExt'] = ('.' + ext)
    if spec.get('msvs_external_builder'):
        external_out_dir = spec.get('msvs_external_builder_out_dir', '.')
        msbuild_attributes['OutputDirectory'] = (_FixPath(external_out_dir) + '\\')
    msbuild_tool_map = {'executable': 'Link', 'shared_library': 'Link', 'loadable_module': 'Link', 'static_library': 'Lib', }
    msbuild_tool = msbuild_tool_map.get(spec['type'])
    if msbuild_tool:
        msbuild_settings = config['finalized_msbuild_settings']
        out_file = msbuild_settings[msbuild_tool].get('OutputFile')
        if out_file:
            msbuild_attributes['TargetPath'] = _FixPath(out_file)
        target_ext = msbuild_settings[msbuild_tool].get('TargetExt')
        if target_ext:
            msbuild_attributes['TargetExt'] = target_ext
    return msbuild_attributes
