{
  if (username.contains("@")) {
    int index=username.indexOf("@");
    String domain=username.substring(index + 1);
    if (domain.equals(XMPPServer.getInstance().getServerInfo().getName())) {
      username=username.substring(0,index);
    }
 else {
      throw new UnauthorizedException();
    }
  }
  try {
synchronized (this) {
      if (!Shaj.checkPassword(domain,username,password)) {
        throw new UnauthorizedException();
      }
    }
  }
 catch (  UnauthorizedException ue) {
    throw ue;
  }
catch (  Exception e) {
    throw new UnauthorizedException(e);
  }
  UserManager userManager=UserManager.getInstance();
  try {
    userManager.getUser(username);
  }
 catch (  UserNotFoundException unfe) {
    try {
      Log.debug("Automatically creating new user account for " + username);
      UserProvider provider=UserManager.getUserProvider();
      if (!(provider instanceof NativeUserProvider)) {
        Log.error("Error: not using NativeUserProvider so authentication with " + "NativeAuthProvider will likely fail. Using: " + provider.getClass().getName());
      }
      UserManager.getUserProvider().createUser(username,StringUtils.randomString(8),null,null);
    }
 catch (    UserAlreadyExistsException uaee) {
    }
  }
}
