{
  super("Connection Manager");
  InetAddress bindAddress=null;
  try {
    bindAddress=getListenAddress();
  }
 catch (  UnknownHostException e) {
    Log.warn("Unable to resolve bind address: ",e);
  }
  final CertificateStoreManager certificateStoreManager=XMPPServer.getInstance().getCertificateStoreManager();
  clientListener=new ConnectionListener(ConnectionType.SOCKET_C2S,ConnectionSettings.Client.PORT,DEFAULT_PORT,ConnectionSettings.Client.SOCKET_ACTIVE,ConnectionSettings.Client.MAX_THREADS,ConnectionSettings.Client.MAX_READ_BUFFER,ConnectionSettings.Client.TLS_POLICY,ConnectionSettings.Client.AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.SOCKET_C2S),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.SOCKET_C2S));
  clientSslListener=new ConnectionListener(ConnectionType.SOCKET_C2S,ConnectionSettings.Client.OLD_SSLPORT,DEFAULT_SSL_PORT,ConnectionSettings.Client.ENABLE_OLD_SSLPORT,ConnectionSettings.Client.MAX_THREADS_SSL,ConnectionSettings.Client.MAX_READ_BUFFER_SSL,Connection.TLSPolicy.legacyMode.name(),ConnectionSettings.Client.AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.SOCKET_C2S),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.SOCKET_C2S));
  boshListener=new ConnectionListener(ConnectionType.BOSH_C2S,HttpBindManager.HTTP_BIND_PORT,HttpBindManager.HTTP_BIND_PORT_DEFAULT,HttpBindManager.HTTP_BIND_ENABLED,HttpBindManager.HTTP_BIND_THREADS,null,Connection.TLSPolicy.disabled.name(),HttpBindManager.HTTP_BIND_AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.BOSH_C2S),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.BOSH_C2S));
  boshSslListener=new ConnectionListener(ConnectionType.BOSH_C2S,HttpBindManager.HTTP_BIND_SECURE_PORT,HttpBindManager.HTTP_BIND_SECURE_PORT_DEFAULT,HttpBindManager.HTTP_BIND_ENABLED,HttpBindManager.HTTP_BIND_THREADS,null,Connection.TLSPolicy.legacyMode.name(),HttpBindManager.HTTP_BIND_AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.BOSH_C2S),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.BOSH_C2S));
  serverListener=new ConnectionListener(ConnectionType.SOCKET_S2S,ConnectionSettings.Server.PORT,DEFAULT_SERVER_PORT,ConnectionSettings.Server.SOCKET_ACTIVE,"xmpp.server.processing.threads",null,ConnectionSettings.Server.TLS_POLICY,ConnectionSettings.Server.AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.SOCKET_S2S),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.SOCKET_S2S));
  componentListener=new ConnectionListener(ConnectionType.COMPONENT,ConnectionSettings.Component.PORT,DEFAULT_COMPONENT_PORT,ConnectionSettings.Component.SOCKET_ACTIVE,ConnectionSettings.Component.MAX_THREADS,null,ConnectionSettings.Component.TLS_POLICY,ConnectionSettings.Component.AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.COMPONENT),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.COMPONENT));
  componentSslListener=new ConnectionListener(ConnectionType.COMPONENT,ConnectionSettings.Component.OLD_SSLPORT,DEFAULT_COMPONENT_SSL_PORT,ConnectionSettings.Component.ENABLE_OLD_SSLPORT,ConnectionSettings.Component.MAX_THREADS_SSL,null,Connection.TLSPolicy.legacyMode.name(),ConnectionSettings.Component.AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.COMPONENT),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.COMPONENT));
  connectionManagerListener=new ConnectionListener(ConnectionType.CONNECTION_MANAGER,ConnectionSettings.Multiplex.PORT,DEFAULT_MULTIPLEX_PORT,ConnectionSettings.Multiplex.SOCKET_ACTIVE,ConnectionSettings.Multiplex.MAX_THREADS,null,ConnectionSettings.Multiplex.TLS_POLICY,ConnectionSettings.Multiplex.AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.CONNECTION_MANAGER),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.CONNECTION_MANAGER));
  connectionManagerSslListener=new ConnectionListener(ConnectionType.CONNECTION_MANAGER,ConnectionSettings.Multiplex.OLD_SSLPORT,DEFAULT_MULTIPLEX_SSL_PORT,ConnectionSettings.Multiplex.ENABLE_OLD_SSLPORT,ConnectionSettings.Multiplex.MAX_THREADS_SSL,null,Connection.TLSPolicy.legacyMode.name(),ConnectionSettings.Multiplex.AUTH_PER_CLIENTCERT_POLICY,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.CONNECTION_MANAGER),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.CONNECTION_MANAGER));
  webAdminListener=new ConnectionListener(ConnectionType.WEBADMIN,"adminConsole.port",9090,null,"adminConsole.serverThreads",null,Connection.TLSPolicy.disabled.name(),null,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.WEBADMIN),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.WEBADMIN));
  webAdminSslListener=new ConnectionListener(ConnectionType.WEBADMIN,"adminConsole.securePort",9091,null,"adminConsole.serverThreads",null,Connection.TLSPolicy.legacyMode.name(),null,bindAddress,certificateStoreManager.getIdentityStoreConfiguration(ConnectionType.WEBADMIN),certificateStoreManager.getTrustStoreConfiguration(ConnectionType.WEBADMIN));
}
