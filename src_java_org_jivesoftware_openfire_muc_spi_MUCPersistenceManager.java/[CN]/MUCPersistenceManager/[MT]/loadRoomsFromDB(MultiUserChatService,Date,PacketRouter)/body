{
  Long serviceID=XMPPServer.getInstance().getMultiUserChatManager().getMultiUserChatServiceID(chatserver.getServiceName());
  final Map<Long,LocalMUCRoom> rooms;
  try {
    rooms=loadRooms(serviceID,emptyDate,chatserver,packetRouter);
    loadHistory(serviceID,rooms);
    loadAffiliations(serviceID,rooms);
    loadMembers(serviceID,rooms);
  }
 catch (  SQLException sqle) {
    Log.error("A database error prevented MUC rooms to be loaded from the database.",sqle);
    return Collections.emptyList();
  }
  for (  final MUCRoom room : rooms.values()) {
    room.setSavedToDB(true);
    if (room.getEmptyDate() == null) {
      room.setEmptyDate(new Date());
    }
  }
  return rooms.values();
}
