{
  Connection con=null;
  PreparedStatement pstmt=null;
  try {
    con=DbConnectionManager.getConnection();
    if (room.wasSavedToDB()) {
      pstmt=con.prepareStatement(UPDATE_ROOM);
      pstmt.setString(1,StringUtils.dateToMillis(room.getModificationDate()));
      pstmt.setString(2,room.getNaturalLanguageName());
      pstmt.setString(3,room.getDescription());
      pstmt.setInt(4,(room.canOccupantsChangeSubject() ? 1 : 0));
      pstmt.setInt(5,room.getMaxUsers());
      pstmt.setInt(6,(room.isPublicRoom() ? 1 : 0));
      pstmt.setInt(7,(room.isModerated() ? 1 : 0));
      pstmt.setInt(8,(room.isMembersOnly() ? 1 : 0));
      pstmt.setInt(9,(room.canOccupantsInvite() ? 1 : 0));
      pstmt.setString(10,room.getPassword());
      pstmt.setInt(11,(room.canAnyoneDiscoverJID() ? 1 : 0));
      pstmt.setInt(12,(room.isLogEnabled() ? 1 : 0));
      pstmt.setInt(13,marshallRolesToBroadcast(room));
      pstmt.setInt(14,(room.isLoginRestrictedToNickname() ? 1 : 0));
      pstmt.setInt(15,(room.canChangeNickname() ? 1 : 0));
      pstmt.setInt(16,(room.isRegistrationEnabled() ? 1 : 0));
      pstmt.setLong(17,room.getID());
      pstmt.executeUpdate();
    }
 else {
      pstmt=con.prepareStatement(ADD_ROOM);
      pstmt.setLong(1,XMPPServer.getInstance().getMultiUserChatManager().getMultiUserChatServiceID(room.getMUCService().getServiceName()));
      pstmt.setLong(2,room.getID());
      pstmt.setString(3,StringUtils.dateToMillis(room.getCreationDate()));
      pstmt.setString(4,StringUtils.dateToMillis(room.getModificationDate()));
      pstmt.setString(5,room.getName());
      pstmt.setString(6,room.getNaturalLanguageName());
      pstmt.setString(7,room.getDescription());
      pstmt.setString(8,StringUtils.dateToMillis(room.getLockedDate()));
      Date emptyDate=room.getEmptyDate();
      if (emptyDate == null) {
        pstmt.setString(9,null);
      }
 else {
        pstmt.setString(9,StringUtils.dateToMillis(emptyDate));
      }
      pstmt.setInt(10,(room.canOccupantsChangeSubject() ? 1 : 0));
      pstmt.setInt(11,room.getMaxUsers());
      pstmt.setInt(12,(room.isPublicRoom() ? 1 : 0));
      pstmt.setInt(13,(room.isModerated() ? 1 : 0));
      pstmt.setInt(14,(room.isMembersOnly() ? 1 : 0));
      pstmt.setInt(15,(room.canOccupantsInvite() ? 1 : 0));
      pstmt.setString(16,room.getPassword());
      pstmt.setInt(17,(room.canAnyoneDiscoverJID() ? 1 : 0));
      pstmt.setInt(18,(room.isLogEnabled() ? 1 : 0));
      pstmt.setString(19,room.getSubject());
      pstmt.setInt(20,marshallRolesToBroadcast(room));
      pstmt.setInt(21,(room.isLoginRestrictedToNickname() ? 1 : 0));
      pstmt.setInt(22,(room.canChangeNickname() ? 1 : 0));
      pstmt.setInt(23,(room.isRegistrationEnabled() ? 1 : 0));
      pstmt.executeUpdate();
    }
  }
 catch (  SQLException sqle) {
    Log.error(sqle);
  }
 finally {
    try {
      if (pstmt != null)       pstmt.close();
    }
 catch (    Exception e) {
      Log.error(e);
    }
    try {
      if (con != null)       con.close();
    }
 catch (    Exception e) {
      Log.error(e);
    }
  }
}
