{
  if (Type.user == type) {
    AgentSession agentSession=null;
    try {
      agentSession=WorkgroupManager.getInstance().getAgentManager().getAgent(invitee).getAgentSession();
    }
 catch (    AgentNotFoundException e) {
    }
    if (true) {
      sendMUCInvitiation();
      offerAccepted=System.currentTimeMillis();
    }
 else {
      Workgroup workgroup=agentSession.getWorkgroups().iterator().next();
      RequestQueue requestQueue=workgroup.getRequestQueues().iterator().next();
      getMetaData().put("agent",Arrays.asList(invitee.toString()));
      getMetaData().put("ignore",Arrays.asList(inviter.toBareJID()));
      requestQueue.getDispatcher().injectRequest(this);
    }
  }
 else   if (Type.queue == type) {
    Workgroup targetWorkgroup=WorkgroupManager.getInstance().getWorkgroup(invitee.getNode());
    if (targetWorkgroup == null) {
      sendErrorMessage("Specified workgroup was not found.");
      return;
    }
    try {
      RequestQueue requestQueue=targetWorkgroup.getRequestQueue(invitee.getResource());
      getMetaData().put("ignore",Arrays.asList(inviter.toBareJID()));
      requestQueue.getDispatcher().injectRequest(this);
    }
 catch (    NotFoundException e) {
      sendErrorMessage("Specified queue was not found.");
    }
  }
 else   if (Type.workgroup == type) {
    Workgroup targetWorkgroup=WorkgroupManager.getInstance().getWorkgroup(invitee.getNode());
    if (targetWorkgroup != null) {
      RequestQueue requestQueue=RoutingManager.getInstance().getBestQueue(targetWorkgroup,userRequest);
      getMetaData().put("ignore",Arrays.asList(inviter.toBareJID()));
      requestQueue.getDispatcher().injectRequest(this);
    }
 else {
      sendErrorMessage("Specified workgroup was not found.");
    }
  }
}
