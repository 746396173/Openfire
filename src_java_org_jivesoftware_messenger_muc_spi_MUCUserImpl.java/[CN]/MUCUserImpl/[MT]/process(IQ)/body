{
  lastPacketTime=System.currentTimeMillis();
  XMPPAddress recipient=packet.getRecipient();
  String group=recipient.getName();
  if (group == null) {
    Log.info(LocaleUtils.getLocalizedString("muc.error.not-supported") + " " + packet.toString());
  }
 else {
    MUCRole role=roles.get(group.toLowerCase());
    if (role == null) {
    }
 else {
      if (!role.getChatUser().getAddress().equals(packet.getSender())) {
        sendErrorPacket(packet,XMPPError.Code.CONFLICT);
      }
 else {
        try {
          if ("query".equals(packet.getChildName()) && "http://jabber.org/protocol/muc#owner".equals(packet.getChildNamespace())) {
            role.getChatRoom().getIQOwnerHandler().handleIQ(packet,role);
          }
 else           if ("query".equals(packet.getChildName()) && "http://jabber.org/protocol/muc#admin".equals(packet.getChildNamespace())) {
            role.getChatRoom().getIQAdminHandler().handleIQ(packet,role);
          }
 else {
            sendErrorPacket(packet,XMPPError.Code.BAD_REQUEST);
          }
        }
 catch (        ForbiddenException e) {
          sendErrorPacket(packet,XMPPError.Code.FORBIDDEN);
        }
catch (        ConflictException e) {
          sendErrorPacket(packet,XMPPError.Code.CONFLICT);
        }
catch (        NotAllowedException e) {
          sendErrorPacket(packet,XMPPError.Code.NOT_ALLOWED);
        }
      }
    }
  }
}
