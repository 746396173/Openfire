{
  List<Session> results=new ArrayList<Session>();
  if (filter != null) {
    if (filter.getUsername() == null) {
      copyAnonSessions(results);
      copyUserSessions(results);
    }
 else {
      try {
        copyUserSessions(userManager.getUser(filter.getUsername()).getUsername(),results);
      }
 catch (      UserNotFoundException e) {
      }
    }
    Date createMin=filter.getCreationDateRangeMin();
    Date createMax=filter.getCreationDateRangeMax();
    Date activityMin=filter.getLastActivityDateRangeMin();
    Date activityMax=filter.getLastActivityDateRangeMax();
    List<Session> filteredResults=new ArrayList<Session>();
    for (    Session session : results) {
      if (createMin != null || createMax != null) {
        if (!isBetweenDates(session.getCreationDate(),createMin,createMax)) {
          session=null;
        }
      }
      if ((activityMin != null || activityMax != null) && session != null) {
        if (!isBetweenDates(session.getLastActiveDate(),activityMin,activityMax)) {
          session=null;
        }
      }
      if (session != null) {
        if (!isBetweenPacketCount(session.getNumClientPackets(),filter.getClientPacketRangeMin(),filter.getClientPacketRangeMax())) {
          session=null;
        }
      }
      if (session != null) {
        if (!isBetweenPacketCount(session.getNumServerPackets(),filter.getServerPacketRangeMin(),filter.getServerPacketRangeMax())) {
          session=null;
        }
      }
      if (session != null) {
        filteredResults.add(session);
      }
    }
    Collections.sort(filteredResults,filter.getSortComparator());
    int maxResults=filter.getNumResults();
    if (maxResults == SessionResultFilter.NO_RESULT_LIMIT) {
      maxResults=filteredResults.size();
    }
    List<Session> finalResults=new ArrayList<Session>();
    int startIndex=filter.getStartIndex();
    Iterator<Session> sortedIter=filteredResults.iterator();
    for (int i=0; sortedIter.hasNext() && finalResults.size() < maxResults; i++) {
      Session result=sortedIter.next();
      if (i >= startIndex) {
        finalResults.add(result);
      }
    }
    return finalResults;
  }
  return results;
}
