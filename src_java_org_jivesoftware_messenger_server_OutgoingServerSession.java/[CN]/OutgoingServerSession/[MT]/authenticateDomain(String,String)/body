{
  if (hostname == null || hostname.length() == 0 || hostname.trim().indexOf(' ') > -1) {
    return false;
  }
  try {
    SessionManager sessionManager=SessionManager.getInstance();
    OutgoingServerSession session=sessionManager.getOutgoingServerSession(hostname);
    if (session == null) {
      IncomingServerSession incomingSession=sessionManager.getIncomingServerSession(hostname);
      if (incomingSession != null) {
        for (        String otherHostname : incomingSession.getValidatedDomains()) {
          session=sessionManager.getOutgoingServerSession(otherHostname);
          if (session != null) {
            session.addHostname(hostname);
            break;
          }
        }
      }
    }
    if (session == null) {
      int port=JiveGlobals.getIntProperty("xmpp.server.socket.remotePort",SocketAcceptThread.DEFAULT_SERVER_PORT);
synchronized (hostname.intern()) {
        session=sessionManager.getOutgoingServerSession(hostname);
        if (session == null) {
          session=new ServerDialback().createOutgoingSession(domain,hostname,port);
          if (session != null) {
            session.addHostname(hostname);
            session.addAuthenticatedDomain(domain);
            sessionManager.outgoingServerSessionCreated(session);
            return true;
          }
 else {
            if (!pattern.matcher(hostname).find()) {
              return false;
            }
            for (            String otherHost : sessionManager.getOutgoingServers()) {
              if (hostname.contains(otherHost)) {
                session=sessionManager.getOutgoingServerSession(otherHost);
                session.addHostname(hostname);
                return true;
              }
            }
            int index=hostname.indexOf('.');
            while (index > -1 && index < hostname.length()) {
              String newHostname=hostname.substring(index + 1);
              session=new ServerDialback().createOutgoingSession(domain,newHostname,port);
              if (session != null) {
                session.addHostname(hostname);
                session.addAuthenticatedDomain(domain);
                sessionManager.outgoingServerSessionCreated(session);
                session.addHostname(newHostname);
                return true;
              }
 else {
                index=hostname.indexOf('.',index + 1);
              }
            }
            return false;
          }
        }
      }
    }
    if (session.getAuthenticatedDomains().contains(domain)) {
      return true;
    }
    ServerDialback method=new ServerDialback(session.getConnection(),domain);
    if (method.authenticateDomain(session.reader,domain,hostname,session.getStreamID().getID())) {
      session.addAuthenticatedDomain(domain);
      return true;
    }
  }
 catch (  Exception e) {
    Log.error("Error authenticating domain with remote server: " + hostname,e);
  }
  return false;
}
