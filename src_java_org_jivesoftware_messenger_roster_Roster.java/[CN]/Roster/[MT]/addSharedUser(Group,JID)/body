{
  boolean newItem=false;
  RosterItem item=null;
  try {
    item=getRosterItem(addedUser);
    if (item.getSharedGroups().contains(group)) {
      return;
    }
    newItem=false;
  }
 catch (  UserNotFoundException e) {
    try {
      String nickname=getContactNickname(addedUser);
      item=new RosterItem(addedUser,RosterItem.SUB_BOTH,RosterItem.ASK_NONE,RosterItem.RECV_NONE,nickname,null);
      rosterItems.put(item.getJid().toBareJID(),item);
      newItem=true;
    }
 catch (    UserNotFoundException ex) {
      Log.error("Group (" + group.getName() + ") includes non-existent username ("+ addedUser+ ")");
    }
  }
  RosterItem.SubType prevSubscription=null;
  if (!newItem) {
    prevSubscription=item.getSubStatus();
  }
  Collection<Group> userGroups=GroupManager.getInstance().getGroups(getUserJID());
  Collection<Group> sharedGroups=new ArrayList<Group>();
  sharedGroups.addAll(item.getSharedGroups());
  sharedGroups.add(group);
  if (rosterManager.hasMutualVisibility(getUsername(),userGroups,addedUser,sharedGroups)) {
    item.setSubStatus(RosterItem.SUB_BOTH);
  }
 else   if (group.isUser(addedUser) && !group.isUser(getUsername())) {
    item.setSubStatus(RosterItem.SUB_TO);
  }
 else   if (!group.isUser(addedUser) && group.isUser(getUsername())) {
    item.setSubStatus(RosterItem.SUB_FROM);
  }
  if (item.getSubStatus() != RosterItem.SUB_FROM) {
    item.addSharedGroup(group);
  }
 else {
    item.addInvisibleSharedGroup(group);
  }
  if (prevSubscription != null) {
    if (prevSubscription == RosterItem.SUB_TO && item.getSubStatus() == RosterItem.SUB_FROM) {
      item.setSubStatus(RosterItem.SUB_BOTH);
    }
 else     if (prevSubscription == RosterItem.SUB_FROM && item.getSubStatus() == RosterItem.SUB_TO) {
      item.setSubStatus(RosterItem.SUB_BOTH);
    }
  }
  broadcast(item,true);
  if (item.getSubStatus() == RosterItem.SUB_BOTH || item.getSubStatus() == RosterItem.SUB_TO) {
    probePresence(item.getJid());
  }
}
