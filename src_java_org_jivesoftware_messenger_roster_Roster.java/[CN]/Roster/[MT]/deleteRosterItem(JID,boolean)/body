{
  RosterItem itemToRemove=rosterItems.get(user.toBareJID());
  if (doChecking && itemToRemove != null && itemToRemove.isShared()) {
    throw new SharedGroupException("Cannot remove contact that belongs to a shared group");
  }
  RosterItem item=rosterItems.remove(user.toBareJID());
  if (item != null) {
    if (item.getID() > 0) {
      rosterItemProvider.deleteItem(username,item.getID());
    }
    org.xmpp.packet.Roster roster=new org.xmpp.packet.Roster();
    roster.setType(IQ.Type.set);
    roster.addItem(user,org.xmpp.packet.Roster.Subscription.remove);
    broadcast(roster);
  }
  return item;
}
