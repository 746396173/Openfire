{
  org.xmpp.packet.Roster roster=new org.xmpp.packet.Roster();
  for (  RosterItem item : rosterItems.values()) {
    if (item.isOnlyShared() && item.getSubStatus() == RosterItem.SUB_FROM) {
      continue;
    }
    org.xmpp.packet.Roster.Ask ask=getAskStatus(item.getAskStatus());
    org.xmpp.packet.Roster.Subscription sub=org.xmpp.packet.Roster.Subscription.valueOf(item.getSubStatus().getName());
    List<String> groups=new ArrayList<String>(item.getGroups());
    if (groups.contains(null)) {
      Log.warn("A group is null in roster item: " + item.getJid() + " of user: "+ getUsername());
    }
    for (    Group sharedGroup : item.getSharedGroups()) {
      String displayName=sharedGroup.getProperties().get("sharedRoster.displayName");
      if (displayName != null) {
        groups.add(displayName);
      }
 else {
        Log.warn("Found shared group: " + sharedGroup.getName() + " with no displayName");
      }
    }
    roster.addItem(item.getJid(),item.getNickname(),ask,sub,groups);
  }
  return roster;
}
