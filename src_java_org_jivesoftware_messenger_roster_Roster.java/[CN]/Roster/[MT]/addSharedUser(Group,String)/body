{
  RosterItem item=null;
  JID jid=XMPPServer.getInstance().createJID(addedUser,"");
  String groupName=group.getProperties().get("sharedRoster.displayName");
  try {
    item=getRosterItem(jid);
    if (item.getSharedGroups().contains(groupName)) {
      return;
    }
  }
 catch (  UserNotFoundException e) {
    try {
      User user=UserManager.getInstance().getUser(addedUser);
      String nickname="".equals(user.getName()) ? jid.getNode() : user.getName();
      item=new RosterItem(jid,RosterItem.SUB_BOTH,RosterItem.ASK_NONE,RosterItem.RECV_NONE,nickname,null);
      rosterItems.put(item.getJid().toBareJID(),item);
    }
 catch (    UserNotFoundException ex) {
      Log.error("Group (" + groupName + ") includes non-existent username ("+ addedUser+ ")");
    }
  }
  if (group.isUser(addedUser) && !group.isUser(getUsername())) {
    item.setSubStatus(RosterItem.SUB_TO);
    item.addSharedGroup(groupName);
  }
 else   if (!group.isUser(addedUser) && group.isUser(getUsername())) {
    item.setSubStatus(RosterItem.SUB_FROM);
  }
 else {
    item.addSharedGroup(groupName);
  }
  broadcast(item);
  if (item.getSubStatus() == RosterItem.SUB_BOTH || item.getSubStatus() == RosterItem.SUB_TO) {
    presenceManager.probePresence(username,item.getJid());
  }
}
