{
  if (query == null || "".equals(query)) {
    return Collections.emptyList();
  }
  if (!query.endsWith("*")) {
    query=query + "*";
  }
  List<String> groupNames=new ArrayList<String>();
  LdapContext ctx=null;
  try {
    ctx=manager.getContext();
    Control[] searchControl=new Control[]{new SortControl(new String[]{manager.getGroupNameField()},Control.NONCRITICAL)};
    ctx.setRequestControls(searchControl);
    SearchControls searchControls=new SearchControls();
    if (manager.isSubTreeSearch()) {
      searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);
    }
 else {
      searchControls.setSearchScope(SearchControls.ONELEVEL_SCOPE);
    }
    searchControls.setReturningAttributes(new String[]{manager.getGroupNameField()});
    StringBuilder filter=new StringBuilder();
    filter.append("(").append(manager.getGroupNameField()).append("=").append(query).append(")");
    NamingEnumeration answer=ctx.search("",filter.toString(),searchControls);
    for (int i=0; i < startIndex; i++) {
      if (answer.hasMoreElements()) {
        answer.next();
      }
 else {
        return Collections.emptyList();
      }
    }
    for (int i=0; i < numResults; i++) {
      if (answer.hasMoreElements()) {
        String groupName=(String)((SearchResult)answer.next()).getAttributes().get(manager.getGroupNameField()).get();
        groupNames.add(JID.escapeNode(groupName));
      }
 else {
        break;
      }
    }
    answer.close();
    if (Boolean.valueOf(JiveGlobals.getXMLProperty("ldap.clientSideSorting"))) {
      Collections.sort(groupNames);
    }
  }
 catch (  Exception e) {
    Log.error(e);
  }
 finally {
    try {
      if (ctx != null) {
        ctx.setRequestControls(null);
        ctx.close();
      }
    }
 catch (    Exception ignored) {
    }
  }
  return groupNames;
}
