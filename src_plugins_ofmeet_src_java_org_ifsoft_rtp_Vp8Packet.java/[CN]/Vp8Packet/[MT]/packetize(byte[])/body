{
  Integer offset=Integer.valueOf(0);
  ArrayList list=new ArrayList();
  Integer num2=Integer.valueOf(1049);
  Integer num3=new Integer((new Double(Math.ceil(new Double((new Double((new Integer(ArrayExtensions.getLength(encodedData).intValue())).doubleValue())).doubleValue() / (new Double((new Integer(num2.intValue())).doubleValue())).doubleValue())))).intValue());
  if (num3.intValue() == 0)   num3=Integer.valueOf(1);
  Integer num4=Integer.valueOf(ArrayExtensions.getLength(encodedData).intValue() / num3.intValue());
  Integer num5=Integer.valueOf(ArrayExtensions.getLength(encodedData).intValue() - num3.intValue() * num4.intValue());
  for (Integer i=Integer.valueOf(0); i.intValue() < num3.intValue(); ) {
    Integer count=num4;
    if (i.intValue() < num5.intValue()) {
      Integer integer=count;
      Integer integer1=count=Integer.valueOf(count.intValue() + 1);
      Integer _tmp=integer;
    }
    Vp8Packet item=new Vp8Packet();
    item.setStartOfPartition(Boolean.valueOf(i.intValue() == 0));
    item.setPayload(BitAssistant.subArray(encodedData,offset,count));
    list.add(item);
    offset=Integer.valueOf(offset.intValue() + count.intValue());
    count=i;
    i=Integer.valueOf(i.intValue() + 1);
    Integer _tmp1=count;
  }
  return (Vp8Packet[])list.toArray(new Vp8Packet[0]);
}
