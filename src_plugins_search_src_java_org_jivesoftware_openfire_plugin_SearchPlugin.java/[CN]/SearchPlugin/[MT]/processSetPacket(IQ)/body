{
  if (!packet.getType().equals(IQ.Type.set)) {
    throw new IllegalArgumentException("This method only accepts 'set' typed IQ stanzas as an argument.");
  }
  final IQ resultIQ;
  if (!isValidSearchRequest(packet)) {
    resultIQ=IQ.createResultIQ(packet);
    resultIQ.setError(Condition.bad_request);
    return resultIQ;
  }
  final Element incomingForm=packet.getChildElement();
  final boolean isDataFormQuery=(incomingForm.element(QName.get("x","jabber:x:data")) != null);
  final Set<User> searchResults=performSearch(incomingForm);
  final Element rsmElement=incomingForm.element(QName.get("set",ResultSet.NAMESPACE_RESULT_SET_MANAGEMENT));
  final boolean applyRSM=rsmElement != null && !searchResults.isEmpty();
  if (applyRSM) {
    final List<User> rsmResults;
    final ResultSet<User> rs=new ResultSetImpl<User>(searchResults);
    try {
      rsmResults=rs.applyRSMDirectives(rsmElement);
    }
 catch (    NullPointerException e) {
      final IQ itemNotFound=IQ.createResultIQ(packet);
      itemNotFound.setError(Condition.item_not_found);
      return itemNotFound;
    }
    if (isDataFormQuery) {
      resultIQ=replyDataFormResult(rsmResults,packet);
    }
 else {
      resultIQ=replyNonDataFormResult(rsmResults,packet);
    }
    final Element set=rs.generateSetElementFromResults(rsmResults);
    resultIQ.getChildElement().add(set);
  }
 else {
    if (isDataFormQuery) {
      resultIQ=replyDataFormResult(searchResults,packet);
    }
 else {
      resultIQ=replyNonDataFormResult(searchResults,packet);
    }
  }
  return resultIQ;
}
