def _GetPdbPath(target_dict, config_name, vars):
    "Returns the path to the PDB file that will be generated by a given\n  configuration.\n\n  The lookup proceeds as follows:\n    - Look for an explicit path in the VCLinkerTool configuration block.\n    - Look for an 'msvs_large_pdb_path' variable.\n    - Use '<(PRODUCT_DIR)/<(product_name).(exe|dll).pdb' if 'product_name' is\n      specified.\n    - Use '<(PRODUCT_DIR)/<(target_name).(exe|dll).pdb'.\n\n  Arguments:\n    target_dict: The target dictionary to be searched.\n    config_name: The name of the configuration of interest.\n    vars: A dictionary of common GYP variables with generator-specific values.\n  Returns:\n    The path of the corresponding PDB file.\n  "
    config = target_dict['configurations'][config_name]
    msvs = config.setdefault('msvs_settings', {})
    linker = msvs.get('VCLinkerTool', {})
    pdb_path = linker.get('ProgramDatabaseFile')
    if pdb_path:
        return pdb_path
    variables = target_dict.get('variables', {})
    pdb_path = variables.get('msvs_large_pdb_path', None)
    if pdb_path:
        return pdb_path
    pdb_base = target_dict.get('product_name', target_dict['target_name'])
    pdb_base = ('%s%s.pdb' % (pdb_base, _TARGET_TYPE_EXT[target_dict['type']]))
    pdb_path = ((vars['PRODUCT_DIR'] + '/') + pdb_base)
    return pdb_path
