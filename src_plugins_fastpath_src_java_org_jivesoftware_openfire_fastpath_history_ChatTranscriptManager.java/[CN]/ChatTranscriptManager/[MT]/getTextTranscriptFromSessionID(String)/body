{
  String transcript=null;
  Connection con=null;
  PreparedStatement pstmt=null;
  ResultSet rs=null;
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(GET_SESSION_TRANSCRIPT);
    pstmt.setString(1,sessionID);
    rs=pstmt.executeQuery();
    if (rs.next()) {
      transcript=DbConnectionManager.getLargeTextField(rs,1);
    }
  }
 catch (  Exception ex) {
    Log.error(ex);
  }
 finally {
    DbConnectionManager.closeConnection(rs,pstmt,con);
  }
  if (transcript == null || "".equals(transcript)) {
    return "";
  }
  SimpleDateFormat UTC_FORMAT=new SimpleDateFormat(JiveConstants.XMPP_DELAY_DATETIME_FORMAT);
  UTC_FORMAT.setTimeZone(TimeZone.getTimeZone("UTC"));
  final SimpleDateFormat formatter=new SimpleDateFormat("h:mm a");
  Document element=null;
  try {
    element=DocumentHelper.parseText(transcript);
  }
 catch (  DocumentException e) {
    Log.error(e);
  }
  StringBuilder buf=new StringBuilder();
  for (Iterator it=element.getRootElement().elementIterator(); it.hasNext(); ) {
    Element packet=(Element)it.next();
    String name=packet.getName();
    String message="";
    String from="";
    if ("presence".equals(name)) {
      String type=packet.attributeValue("type");
      from=new JID(packet.attributeValue("from")).getResource();
      if (type == null) {
        message=from + " has joined the room";
      }
 else {
        message=from + " has left the room";
      }
    }
 else     if ("message".equals(name)) {
      from=new JID(packet.attributeValue("from")).getResource();
      message=packet.elementText("body");
      message=StringUtils.escapeHTMLTags(message);
    }
    List el=packet.elements("x");
    Iterator iter=el.iterator();
    while (iter.hasNext()) {
      Element ele=(Element)iter.next();
      if ("jabber:x:delay".equals(ele.getNamespaceURI())) {
        String stamp=ele.attributeValue("stamp");
        try {
          String formattedDate;
synchronized (UTC_FORMAT) {
            Date d=UTC_FORMAT.parse(stamp);
            formattedDate=formatter.format(d);
          }
          if ("presence".equals(name)) {
            buf.append("[").append(formattedDate).append("] ").append(message).append("\n");
          }
 else {
            buf.append("[").append(formattedDate).append("] ").append(from).append(": ").append(message).append("\n");
          }
        }
 catch (        ParseException e) {
          Log.error(e);
        }
      }
    }
  }
  return buf.toString();
}
