{
  _mySubdomain=initialSubdomain;
  XMPPServer server=XMPPServer.getInstance();
  RosterManager rosterMananger=server.getRosterManager();
  AbstractRemoteRosterProcessor sendroster=new SendRosterProcessor(rosterMananger,_mySubdomain);
  AbstractRemoteRosterProcessor receiveChanges=new ReceiveComponentUpdatesProcessor(rosterMananger);
  AbstractRemoteRosterProcessor iqRegistered=new DiscoIQResigteredProcessor(_mySubdomain);
  AbstractRemoteRosterProcessor cleanUp=new CleanUpRosterProcessor(rosterMananger,_mySubdomain);
  AbstractRemoteRosterProcessor updateToComponent=new ClientToComponentUpdateProcessor(_mySubdomain);
  _packetProcessor.put("sendRoster",sendroster);
  _packetProcessor.put("receiveChanges",receiveChanges);
  _packetProcessor.put("sparkIQRegistered",iqRegistered);
  _packetProcessor.put("handleCleanUp",cleanUp);
  _packetProcessor.put("clientToComponentUpdate",updateToComponent);
}
