{
  super(registration,jid,transport,priority);
  setSupportedFeature(SupportedFeature.attention);
  setSupportedFeature(SupportedFeature.chatstates);
  Log.debug("Creating " + getTransport().getType() + " session for "+ registration.getUsername());
  String connecthost;
  Integer connectport;
  String domain;
  connecthost=JiveGlobals.getProperty("plugin.gateway." + getTransport().getType() + ".connecthost",(getTransport().getType().equals(TransportType.gtalk) ? "talk.google.com" : getTransport().getType().equals(TransportType.facebook) ? "chat.facebook.com" : "jabber.org"));
  connectport=JiveGlobals.getIntProperty("plugin.gateway." + getTransport().getType() + ".connectport",5222);
  if (getTransport().getType().equals(TransportType.gtalk)) {
    domain="gmail.com";
  }
 else   if (getTransport().getType().equals(TransportType.facebook)) {
    connecthost="chat.facebook.com";
    connectport=5222;
    domain="chat.facebook.com";
  }
 else   if (getTransport().getType().equals(TransportType.renren)) {
    connecthost="talk.renren.com";
    connectport=5222;
    domain="renren.com";
  }
 else {
    domain=connecthost;
  }
  if (registration.getUsername().indexOf("@") > -1) {
    domain=registration.getUsername().substring(registration.getUsername().indexOf("@") + 1);
  }
  if (connecthost.equals("*")) {
    connecthost=domain;
  }
  config=new ConnectionConfiguration(connecthost,connectport,domain);
  config.setCompressionEnabled(JiveGlobals.getBooleanProperty("plugin.gateway." + getTransport().getType() + ".usecompression",false));
  if (getTransport().getType().equals(TransportType.facebook)) {
  }
  config.setSendPresence(false);
  if (getTransport().getType().equals(TransportType.gtalk) && JiveGlobals.getBooleanProperty("plugin.gateway.gtalk.mailnotifications",true)) {
    ProviderManager.getInstance().addIQProvider(GoogleMailBoxPacket.MAILBOX_ELEMENT,GoogleMailBoxPacket.MAILBOX_NAMESPACE,new GoogleMailBoxPacket.Provider());
    ProviderManager.getInstance().addExtensionProvider(GoogleNewMailExtension.ELEMENT_NAME,GoogleNewMailExtension.NAMESPACE,new GoogleNewMailExtension.Provider());
  }
}
