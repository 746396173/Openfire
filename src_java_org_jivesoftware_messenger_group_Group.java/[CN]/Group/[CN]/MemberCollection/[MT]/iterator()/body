{
  return new Iterator(){
    Iterator iter=users.iterator();
    Object current=null;
    public boolean hasNext(){
      return iter.hasNext();
    }
    public Object next(){
      current=iter.next();
      return current;
    }
    public void remove(){
      if (current == null) {
        throw new IllegalStateException();
      }
      String user=(String)current;
      XMPPServer.getInstance().getRosterManager().groupUserDeleted(Group.this,user);
      iter.remove();
      provider.deleteMember(name,user);
      if (adminCollection) {
        Map params=new HashMap();
        params.put("admin",user);
        GroupEventDispatcher.dispatchEvent(Group.this,GroupEventDispatcher.EventType.admin_removed,params);
      }
 else {
        Map params=new HashMap();
        params.put("member",user);
        GroupEventDispatcher.dispatchEvent(Group.this,GroupEventDispatcher.EventType.member_removed,params);
      }
    }
  }
;
}
