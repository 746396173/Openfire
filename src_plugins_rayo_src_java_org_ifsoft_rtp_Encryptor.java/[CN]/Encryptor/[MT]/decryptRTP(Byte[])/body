{
  if (ArrayExtensions.getLength(encryptedBytes).intValue() < 12) {
    Log.info("decryptRTP packet less than 12 bytes");
    return null;
  }
  Integer num=new Integer(encryptedBytes[1].byteValue() & 0x7f);
  if (num.intValue() >= 72 && num.intValue() <= 76) {
    Log.info("decryptRTP packet first bye no good " + encryptedBytes[1]);
    return null;
  }
  EncryptionMode _var0=getEncryptionMode();
  if (_var0 != null ? _var0.equals(EncryptionMode.Null) : _var0 == EncryptionMode.Null) {
    Log.info("decryptRTP no encryption found");
    return RTPPacket.parseBytes(encryptedBytes);
  }
  if (ArrayExtensions.getLength(encryptedBytes).intValue() < 12 + _rTPIntegritySize.intValue()) {
    Log.info("decryptRTP packet too small");
    return null;
  }
  Byte collection[]=BitAssistant.subArray(encryptedBytes,Integer.valueOf(0),Integer.valueOf(ArrayExtensions.getLength(encryptedBytes).intValue() - _rTPIntegritySize.intValue()));
  Byte buffer2[]=BitAssistant.subArray(encryptedBytes,Integer.valueOf(ArrayExtensions.getLength(encryptedBytes).intValue() - _rTPIntegritySize.intValue()),_rTPIntegritySize);
  ArrayList list=ArrayListExtensions.createArray(collection);
  ArrayListExtensions.addRange(list,BitAssistant.getIntegerBytesFromLongNetwork(_rTPDecryptionROC));
  Byte buffer4[]=BitAssistant.subArray(Crypto.getHmacSha1(_rTPDecryptionAuth,(Byte[])list.toArray(new Byte[0])),Integer.valueOf(0),_rTPIntegritySize);
  if (!BitAssistant.sequencesAreEqual(buffer2,buffer4).booleanValue()) {
  }
  RTPPacket packet=RTPPacket.parseBytes(collection);
  if (packet == null) {
    Log.info("decryptRTP collection is bad");
    return null;
  }
  if (_rTPDecryption != null)   packet.setPayload(_rTPDecryption.decrypt(packet.getPayload(),packet.getSynchronizationSource(),getRTPDecryptionPacketIndex(packet.getSequenceNumber())));
  return packet;
}
