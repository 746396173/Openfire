{
  try {
    String logDir=pluginDirectory.getAbsolutePath() + File.separator + ".."+ File.separator+ ".."+ File.separator+ "logs"+ File.separator;
    loginfo(String.format("VoiceBridge logs %s",logDir));
    config=Config.getInstance();
    config.initialise();
    String webHome=pluginDirectory.getAbsolutePath() + File.separator + ".."+ File.separator+ ".."+ File.separator+ "resources"+ File.separator+ "spank"+ File.separator+ "rayo";
    System.setProperty("com.sun.voip.server.LOGLEVEL","99");
    System.setProperty("com.sun.voip.server.FIRST_RTP_PORT","3200");
    System.setProperty("com.sun.voip.server.LAST_RTP_PORT","3299");
    System.setProperty("com.sun.voip.server.Bridge.logDirectory",logDir);
    System.setProperty("com.sun.voip.server.BRIDGE_LOG","bridge.log");
    System.setProperty("com.sun.voip.server.LOGLEVEL","99");
    System.setProperty("com.sun.voip.server.PUBLIC_IP_ADDRESS",config.getPublicHost());
    System.setProperty("com.sun.voip.server.PROTOCOL",config.getDefaultProtocol());
    System.setProperty("com.sun.voip.server.SIP_PORT",config.getDefaultSIPPort());
    System.setProperty("com.sun.voip.server.Bridge.recordDirectory",webHome + File.separator + "recordings");
    System.setProperty("com.sun.voip.server.Bridge.soundPath","/com/sun/voip/server/sounds:" + webHome + File.separator+ "sounds");
    System.setProperty("freetts.voices","com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
    Properties properties=new Properties();
    properties.setProperty("javax.sip.STACK_NAME","JAIN SIP 1.1");
    properties.setProperty("javax.sip.RETRANSMISSION_FILTER","on");
    properties.setProperty("gov.nist.javax.sip.TRACE_LEVEL","99");
    properties.setProperty("gov.nist.javax.sip.SERVER_LOG",logDir + "sip_server.log");
    properties.setProperty("gov.nist.javax.sip.DEBUG_LOG",logDir + "sip_debug.log");
    properties.setProperty("javax.sip.IP_ADDRESS",config.getPrivateHost());
    Bridge.setPublicHost(config.getPublicHost());
    Bridge.setPrivateHost(config.getPrivateHost());
    Bridge.setBridgeLocation("LCL");
    new SipServer(config,properties);
    FreeTTSClient.initialize();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return true;
}
