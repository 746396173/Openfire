{
  IQ reply=IQ.createResultIQ(packet);
  reply.setType(IQ.Type.result);
  reply.setTo(packet.getFrom());
  reply.setFrom(packet.getTo());
  DiscoInfoProvider infoProvider=getProvider(packet.getTo() == null ? BasicServer.getInstance().getServerInfo().getName() : packet.getTo().getDomain());
  if (infoProvider != null) {
    String name=packet.getTo() == null ? null : packet.getTo().getNode();
    if (name == null || name.trim().length() == 0) {
      name=null;
    }
    Element iq=packet.getChildElement();
    String node=iq.attributeValue("node");
    if (infoProvider.hasInfo(name,node,packet.getFrom())) {
      Element queryElement=reply.getChildElement();
      Element identity;
      Iterator identities=infoProvider.getIdentities(name,node,packet.getFrom());
      while (identities.hasNext()) {
        identity=(Element)identities.next();
        identity.setQName(new QName(identity.getName(),queryElement.getNamespace()));
        queryElement.add((Element)identity.clone());
      }
      Iterator features=infoProvider.getFeatures(name,node,packet.getFrom());
      while (features.hasNext()) {
        queryElement.addElement("feature").addAttribute("var",(String)features.next());
      }
      XDataFormImpl dataForm=infoProvider.getExtendedInfo(name,node,packet.getFrom());
      if (dataForm != null) {
        queryElement.add(dataForm.asXMLElement());
      }
    }
 else {
      reply.setError(PacketError.Condition.item_not_found);
    }
  }
 else {
    reply.setError(PacketError.Condition.item_not_found);
  }
  return reply;
}
