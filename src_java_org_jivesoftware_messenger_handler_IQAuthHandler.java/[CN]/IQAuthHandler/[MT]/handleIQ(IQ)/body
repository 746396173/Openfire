{
  try {
    Session session=sessionManager.getSession(packet.getFrom());
    IQ response=null;
    try {
      Element iq=packet.getElement();
      Element query=iq.element("query");
      Element queryResponse=probeResponse.createCopy();
      if (IQ.Type.get == packet.getType()) {
        String username=query.elementTextTrim("username");
        queryResponse.element("username").setText(username);
        response=IQ.createResultIQ(packet);
        response.setChildElement(queryResponse);
        if (session.getStatus() != Session.STATUS_AUTHENTICATED) {
          response.setTo((JID)null);
        }
      }
 else {
        if (query.elements().isEmpty()) {
          response=anonymousLogin(session,packet);
        }
 else {
          String username=query.elementTextTrim("username");
          String password=query.elementTextTrim("password");
          String digest=null;
          if (query.element("digest") != null) {
            digest=query.elementTextTrim("digest").toLowerCase();
          }
          if (session.getStatus() == Session.STATUS_AUTHENTICATED) {
            response=passwordReset(password,packet,username,session);
          }
 else {
            response=login(username,query,packet,response,password,session,digest);
          }
        }
      }
    }
 catch (    UserNotFoundException e) {
      response=IQ.createResultIQ(packet);
      response.setError(PacketError.Condition.not_authorized);
    }
catch (    UnauthorizedException e) {
      response=IQ.createResultIQ(packet);
      response.setError(PacketError.Condition.not_authorized);
    }
    session.getConnection().deliver(response);
  }
 catch (  Exception e) {
    Log.error("Error handling authentication IQ packet",e);
  }
  return null;
}
