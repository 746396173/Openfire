{
  if (MUCRole.Affiliation.owner != role.getAffiliation()) {
    throw new ForbiddenException();
  }
  IQ reply=IQ.createResultIQ(packet);
  Element element=packet.getChildElement();
  Element formElement=element.element(QName.get("x","jabber:x:data"));
  if (formElement != null) {
    handleDataFormElement(role,formElement);
  }
 else {
    Element destroyElement=element.element("destroy");
    if (destroyElement != null) {
      if (((MultiUserChatServiceImpl)room.getMUCService()).getMUCDelegate() != null) {
        if (!((MultiUserChatServiceImpl)room.getMUCService()).getMUCDelegate().destroyingRoom(room.getName(),role.getUserAddress())) {
          throw new ForbiddenException();
        }
      }
      JID alternateJID=null;
      final String jid=destroyElement.attributeValue("jid");
      if (jid != null) {
        alternateJID=new JID(jid);
      }
      room.destroyRoom(alternateJID,destroyElement.elementTextTrim("reason"));
    }
 else {
      if (!element.elementIterator().hasNext()) {
        refreshConfigurationFormValues();
        reply.setChildElement(probeResult.createCopy());
      }
 else {
        reply.setChildElement(packet.getChildElement().createCopy());
        reply.setError(PacketError.Condition.bad_request);
      }
    }
  }
  if (reply.getTo() != null) {
    router.route(reply);
  }
}
