{
  if (userCount != -1 && System.currentTimeMillis() < expiresStamp) {
    return userCount;
  }
  int count=0;
  DirContext ctx=null;
  DirContext ctx2=null;
  try {
    ctx=manager.getContext(baseDN);
    SearchControls searchControls=new SearchControls();
    if (manager.isSubTreeSearch()) {
      searchControls.setSearchScope(SearchControls.SUBTREE_SCOPE);
    }
 else {
      searchControls.setSearchScope(SearchControls.ONELEVEL_SCOPE);
    }
    searchControls.setReturningAttributes(new String[]{manager.getUsernameField()});
    String filter=MessageFormat.format(manager.getSearchFilter(),"*");
    NamingEnumeration answer=ctx.search("",filter,searchControls);
    while (answer.hasMoreElements()) {
      count++;
      answer.nextElement();
    }
    if (alternateBaseDN != null) {
      ctx2=manager.getContext(alternateBaseDN);
      answer=ctx2.search("",filter,searchControls);
      while (answer.hasMoreElements()) {
        count++;
        answer.nextElement();
      }
    }
    answer.close();
  }
 catch (  Exception e) {
    Log.error(e);
  }
 finally {
    try {
      if (ctx != null) {
        ctx.close();
      }
    }
 catch (    Exception ignored) {
    }
    try {
      if (ctx2 != null) {
        ctx2.close();
      }
    }
 catch (    Exception ignored) {
    }
  }
  this.userCount=count;
  this.expiresStamp=System.currentTimeMillis() + JiveConstants.MINUTE * 5;
  return count;
}
