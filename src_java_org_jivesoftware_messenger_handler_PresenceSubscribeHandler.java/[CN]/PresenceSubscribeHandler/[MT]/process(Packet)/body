{
  Presence presence=(Presence)xmppPacket;
  try {
    JID senderJID=presence.getFrom();
    JID recipientJID=presence.getTo();
    Presence.Type type=presence.getType();
    try {
      Roster senderRoster=getRoster(senderJID);
      boolean senderSubChanged=false;
      if (senderRoster != null) {
        senderSubChanged=manageSub(recipientJID,true,type,senderRoster);
      }
      Roster recipientRoster=getRoster(recipientJID);
      boolean recipientSubChanged=false;
      if (recipientRoster != null) {
        recipientSubChanged=manageSub(senderJID,false,type,recipientRoster);
      }
      if (!(type == Presence.Type.subscribed && recipientRoster != null && !recipientSubChanged)) {
        ChannelHandler handler=routingTable.getRoute(recipientJID);
        Presence presenteToSend=presence.createCopy();
        presenteToSend.setFrom(senderJID.toBareJID());
        handler.process(presenteToSend);
        if (type == Presence.Type.subscribed) {
          presenceManager.probePresence(recipientJID,senderJID);
        }
      }
      if (type == Presence.Type.unsubscribed) {
        presenceManager.sendUnavailableFromSessions(recipientJID,senderJID);
      }
    }
 catch (    NoSuchRouteException e) {
      deliverer.deliver(presence.createCopy());
    }
catch (    SharedGroupException e) {
      Presence result=presence.createCopy();
      JID sender=result.getFrom();
      result.setFrom(presence.getTo());
      result.setTo(sender);
      result.setError(PacketError.Condition.not_acceptable);
      deliverer.deliver(result);
    }
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
  }
}
