{
  final Iterator<Hit> hitsIterator=hits.iterator();
  for (int i=0; i < index; i++) {
    hitsIterator.next();
  }
  return new Iterator<Conversation>(){
    private Conversation nextElement=null;
    public boolean hasNext(){
      if (nextElement == null) {
        nextElement=getNextElement();
        if (nextElement == null) {
          return false;
        }
      }
      return true;
    }
    public Conversation next(){
      Conversation element;
      if (nextElement != null) {
        element=nextElement;
        nextElement=null;
      }
 else {
        element=getNextElement();
        if (element == null) {
          throw new NoSuchElementException();
        }
      }
      return element;
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
    private Conversation getNextElement(){
      if (!hitsIterator.hasNext()) {
        return null;
      }
 else       if (index >= endIndex) {
        return null;
      }
      while (hitsIterator.hasNext()) {
        try {
          Hit hit=hitsIterator.next();
          index++;
          long conversationID=Long.parseLong(hit.get("conversationID"));
          return new Conversation(conversationManager,conversationID);
        }
 catch (        Exception e) {
          Log.error(e.getMessage(),e);
        }
      }
      return null;
    }
  }
;
}
