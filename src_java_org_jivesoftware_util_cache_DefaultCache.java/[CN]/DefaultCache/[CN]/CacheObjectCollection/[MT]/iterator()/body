{
  return new Iterator<V>(){
    private final Iterator<DefaultCache.CacheObject<V>> it=cachedObjects.iterator();
    @Override public boolean hasNext(){
      return it.hasNext();
    }
    @Override public V next(){
      if (it.hasNext()) {
        DefaultCache.CacheObject<V> object=it.next();
        if (object == null) {
          return null;
        }
 else {
          return object.object;
        }
      }
 else {
        throw new NoSuchElementException();
      }
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
