{
  if (username == null || password == null || "".equals(password.trim())) {
    throw new UnauthorizedException();
  }
  if (username.contains("@")) {
    int index=username.indexOf("@");
    String domain=username.substring(index + 1);
    if (domain.equals(XMPPServer.getInstance().getServerInfo().getName())) {
      username=username.substring(0,index);
    }
 else {
      throw new UnauthorizedException();
    }
  }
  username=JID.unescapeNode(username);
  if (authCache != null && authCache.containsKey(username)) {
    String hash=(String)authCache.get(username);
    if (StringUtils.hash(password).equals(hash)) {
      return;
    }
  }
  String userDN;
  try {
    userDN=manager.findUserDN(username);
    if (!manager.checkAuthentication(userDN,password)) {
      throw new UnauthorizedException("Username and password don't match");
    }
  }
 catch (  CommunicationException e) {
    Log.error("Error connecting to LDAP server",e);
    throw new UnauthorizedException(e);
  }
catch (  Exception e) {
    throw new UnauthorizedException(e);
  }
  if (authCache != null) {
    authCache.put(username,StringUtils.hash(password));
  }
}
