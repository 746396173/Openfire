{
  return new Iterator<Map.Entry<String,String>>(){
    Iterator<Map.Entry<String,String>> iter=properties.entrySet().iterator();
    Map.Entry<String,String> current=null;
    @Override public boolean hasNext(){
      return iter.hasNext();
    }
    @Override public Map.Entry<String,String> next(){
      current=iter.next();
      return current;
    }
    @Override public void remove(){
      if (current == null) {
        throw new IllegalStateException();
      }
      String key=current.getKey();
      deleteProperty(key);
      iter.remove();
      Map<String,Object> params=new HashMap<>();
      params.put("type","propertyDeleted");
      params.put("propertyKey",key);
      UserEventDispatcher.dispatchEvent(User.this,UserEventDispatcher.EventType.user_modified,params);
    }
  }
;
}
