{
  JID owner=new JID(iq.getFrom().toBareJID());
  Element subscriptionsElement=childElement.element("subscriptions");
  String nodeID=subscriptionsElement.attributeValue("node");
  Collection<NodeSubscription> subscriptions=new ArrayList<NodeSubscription>();
  if (nodeID == null) {
    for (    Node node : service.getNodes()) {
      subscriptions.addAll(node.getSubscriptions(owner));
    }
  }
 else {
    subscriptions.addAll(service.getNode(nodeID).getSubscriptions(owner));
  }
  IQ reply=IQ.createResultIQ(iq);
  Element replyChildElement=childElement.createCopy();
  reply.setChildElement(replyChildElement);
  Element affiliationsElement=replyChildElement.element("subscriptions");
  for (  NodeSubscription subscription : subscriptions) {
    Element subElement=affiliationsElement.addElement("subscription");
    Node node=subscription.getNode();
    NodeAffiliate nodeAffiliate=subscription.getAffiliate();
    if (!node.isRootCollectionNode() && (nodeID == null)) {
      subElement.addAttribute("node",node.getNodeID());
    }
    subElement.addAttribute("jid",subscription.getJID().toString());
    subElement.addAttribute("subscription",subscription.getState().name());
    if (node.isMultipleSubscriptionsEnabled()) {
      subElement.addAttribute("subid",subscription.getID());
    }
  }
  router.route(reply);
}
