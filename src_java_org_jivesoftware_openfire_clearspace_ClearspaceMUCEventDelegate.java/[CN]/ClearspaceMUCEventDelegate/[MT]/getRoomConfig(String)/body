{
  Map<String,String> roomConfig=new HashMap<String,String>();
  IQ iq=new IQ(IQ.Type.get);
  iq.setFrom(csMucDomain);
  iq.setID("get_room_config_" + StringUtils.randomString(3));
  Element child=iq.setChildElement("get-room-config","http://jivesoftware.com/clearspace");
  Element roomjidElement=child.addElement("roomjid");
  JID roomJid=new JID(roomName + "@" + csMucDomain);
  roomjidElement.setText(roomJid.toBareJID());
  IQ result=ClearspaceManager.getInstance().query(iq,15000);
  if (result == null) {
    Log.warn(GET_ROOM_CONFIG_WARNING + " Room: " + roomJid.toBareJID());
    return null;
  }
 else   if (result.getType() != IQ.Type.result) {
    Log.warn(GET_ROOM_CONFIG_WARNING + " Room: " + roomJid.toBareJID());
    return null;
  }
  Element query=result.getChildElement();
  if (query == null) {
    Log.warn(GET_ROOM_CONFIG_WARNING + " Room: " + roomJid.toBareJID());
    return null;
  }
  Element xElement=query.element("x");
  if (xElement == null) {
    Log.warn(GET_ROOM_CONFIG_WARNING + " Room: " + roomJid.toBareJID());
    return null;
  }
  @SuppressWarnings("unchecked") Iterator<Element> fields=xElement.elementIterator("field");
  while (fields.hasNext()) {
    Element field=fields.next();
    Attribute varAttribute=field.attribute("var");
    if (varAttribute != null) {
      Element value=field.element("value");
      if (value != null) {
        roomConfig.put(varAttribute.getValue(),value.getText());
      }
    }
  }
  String ownerJid=roomJid.getNode() + "@" + csComponentAddress;
  roomConfig.put("muc#roomconfig_roomowners",ownerJid);
  return roomConfig;
}
