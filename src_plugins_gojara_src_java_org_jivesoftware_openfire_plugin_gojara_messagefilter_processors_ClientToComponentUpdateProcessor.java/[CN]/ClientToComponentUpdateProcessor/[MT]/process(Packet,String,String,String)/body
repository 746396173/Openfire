{
  Log.debug("Processing packet in ClientToComponentUpdateProcessor: " + packet.toString());
  Element query=((IQ)packet).getChildElement();
  List<Node> nodes=findNodesInDocument(query.getDocument(),"//roster:item");
  if (nodes.size() > 0) {
    for (    Node n : nodes) {
      String jid=n.valueOf("@jid");
      String found_subdomain=searchJIDforSubdomain(jid);
      if (found_subdomain.length() > 0 && !n.valueOf("@subscription").equals("remove")) {
        Log.debug("Mirroring packet from local network to legacy component " + found_subdomain);
        IQ forward=(IQ)packet.createCopy();
        forward.setTo(found_subdomain);
        dispatchPacket(forward);
      }
    }
  }
}
