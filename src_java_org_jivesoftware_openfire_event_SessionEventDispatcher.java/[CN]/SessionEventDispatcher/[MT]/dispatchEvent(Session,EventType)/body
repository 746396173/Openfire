{
  for (  SessionEventListener listener : listeners) {
    try {
switch (eventType) {
case session_created:
{
          listener.sessionCreated(session);
          break;
        }
case session_destroyed:
{
        listener.sessionDestroyed(session);
        break;
      }
case anonymous_session_created:
{
      listener.anonymousSessionCreated(session);
      break;
    }
case anonymous_session_destroyed:
{
    listener.anonymousSessionDestroyed(session);
    break;
  }
case resource_bound:
{
  listener.resourceBound(session);
  break;
}
default :
break;
}
}
 catch (Exception e) {
Log.error(e.getMessage(),e);
}
}
}
