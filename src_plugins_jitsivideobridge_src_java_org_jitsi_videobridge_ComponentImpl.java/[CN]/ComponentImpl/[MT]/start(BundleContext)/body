{
  this.bundleContext=bundleContext;
  ProviderManager providerManager=ProviderManager.getInstance();
  providerManager.addIQProvider(ColibriConferenceIQ.ELEMENT_NAME,ColibriConferenceIQ.NAMESPACE,new ColibriIQProvider());
  providerManager.addExtensionProvider(IceUdpTransportPacketExtension.ELEMENT_NAME,IceUdpTransportPacketExtension.NAMESPACE,new DefaultPacketExtensionProvider<IceUdpTransportPacketExtension>(IceUdpTransportPacketExtension.class));
  providerManager.addExtensionProvider(RawUdpTransportPacketExtension.ELEMENT_NAME,RawUdpTransportPacketExtension.NAMESPACE,new DefaultPacketExtensionProvider<RawUdpTransportPacketExtension>(RawUdpTransportPacketExtension.class));
  PacketExtensionProvider candidatePacketExtensionProvider=new DefaultPacketExtensionProvider<CandidatePacketExtension>(CandidatePacketExtension.class);
  providerManager.addExtensionProvider(CandidatePacketExtension.ELEMENT_NAME,IceUdpTransportPacketExtension.NAMESPACE,candidatePacketExtensionProvider);
  providerManager.addExtensionProvider(CandidatePacketExtension.ELEMENT_NAME,RawUdpTransportPacketExtension.NAMESPACE,candidatePacketExtensionProvider);
  providerManager.addExtensionProvider(DtlsFingerprintPacketExtension.ELEMENT_NAME,DtlsFingerprintPacketExtension.NAMESPACE,new DefaultPacketExtensionProvider<DtlsFingerprintPacketExtension>(DtlsFingerprintPacketExtension.class));
  StunStack.setPacketLogger(null);
  videoBridge=new Videobridge(this);
}
