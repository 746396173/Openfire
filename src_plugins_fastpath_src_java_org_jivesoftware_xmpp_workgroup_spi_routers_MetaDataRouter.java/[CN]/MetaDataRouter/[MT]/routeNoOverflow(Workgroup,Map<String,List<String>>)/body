{
  RequestQueue bestQueue=null;
  int bestMatch=-1;
  int currentMatch;
  for (  RequestQueue requestQueue : workgroup.getRequestQueues()) {
    if (!requestQueue.isOpened()) {
      continue;
    }
    int overflowValue=requestQueue.getOverflowType().ordinal();
switch (overflowValue) {
case 1:
      if (requestQueue.getAgentSessionList().containsAvailableAgents()) {
        currentMatch=calculateMatchScore(requestQueue,metaData);
        if (currentMatch > bestMatch) {
          bestQueue=requestQueue;
          bestMatch=currentMatch;
        }
      }
    break;
case 2:
  currentMatch=calculateMatchScore(requestQueue,metaData);
if (currentMatch > bestMatch) {
  if (!requestQueue.getAgentSessionList().containsAvailableAgents() && requestQueue.getBackupQueue() != null) {
    bestQueue=requestQueue.getBackupQueue();
  }
 else {
    bestQueue=requestQueue;
  }
  bestMatch=currentMatch;
}
break;
default :
currentMatch=calculateMatchScore(requestQueue,metaData);
if (currentMatch > bestMatch) {
bestQueue=requestQueue;
bestMatch=currentMatch;
}
}
}
return bestQueue;
}
