{
  Log.debug("Received iq packet: " + packet.toXML());
  List<Packet> reply=new ArrayList<Packet>();
  if (packet.getType() == IQ.Type.error) {
    return reply;
  }
  String xmlns=null;
  Element child=(packet).getChildElement();
  if (child != null) {
    xmlns=child.getNamespaceURI();
  }
  if (xmlns == null) {
    Log.debug("No XMLNS:" + packet.toString());
    IQ error=IQ.createResultIQ(packet);
    error.setError(Condition.bad_request);
    reply.add(error);
    return reply;
  }
  if (xmlns.equals(NameSpace.DISCO_INFO)) {
    reply.addAll(handleDiscoInfo(packet));
  }
 else   if (xmlns.equals(NameSpace.DISCO_ITEMS)) {
    reply.addAll(handleDiscoItems(packet));
  }
 else   if (xmlns.equals(NameSpace.IQ_GATEWAY)) {
    reply.addAll(handleIQGateway(packet));
  }
 else   if (xmlns.equals(NameSpace.IQ_REGISTER)) {
    try {
      new RegistrationHandler(this).process(packet);
    }
 catch (    UnauthorizedException ex) {
      final IQ result=IQ.createResultIQ(packet);
      result.setError(Condition.forbidden);
      reply.add(result);
      final Message em=new Message();
      em.setType(Message.Type.error);
      em.setTo(packet.getFrom());
      em.setFrom(packet.getTo());
      em.setBody(ex.getMessage());
      reply.add(em);
    }
  }
 else   if (xmlns.equals(NameSpace.IQ_VERSION)) {
    reply.addAll(handleIQVersion(packet));
  }
 else   if (xmlns.equals(NameSpace.VCARD_TEMP) && child.getName().equals("vCard")) {
    reply.addAll(handleVCardTemp(packet));
  }
 else   if (xmlns.equals(NameSpace.IQ_ROSTER)) {
    reply.add(IQ.createResultIQ(packet));
  }
 else   if (xmlns.equals(NameSpace.IQ_LAST)) {
    reply.addAll(handleIQLast(packet));
  }
 else {
    Log.debug("Unable to handle iq request: " + xmlns);
    IQ error=IQ.createResultIQ(packet);
    error.setError(Condition.service_unavailable);
    reply.add(error);
  }
  return reply;
}
