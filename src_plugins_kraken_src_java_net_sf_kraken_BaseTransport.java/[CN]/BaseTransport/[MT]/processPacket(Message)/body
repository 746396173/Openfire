{
  Log.debug("Received message packet: " + packet.toXML());
  List<Packet> reply=new ArrayList<Packet>();
  JID from=packet.getFrom();
  JID to=packet.getTo();
  if (to == null) {
    packet.setTo(getJID());
    to=getJID();
  }
  try {
    TransportSession<B> session=sessionManager.getSession(from);
    if (!session.isLoggedIn()) {
      Message m=new Message();
      m.setError(Condition.service_unavailable);
      m.setTo(from);
      m.setFrom(getJID());
      m.setBody(LocaleUtils.getLocalizedString("gateway.base.notloggedin","kraken",Arrays.asList(transportType.toString().toUpperCase())));
      reply.add(m);
    }
 else     if (to.getNode() == null) {
      if (packet.getBody() != null) {
        Message m=new Message();
        m.setTo(from);
        m.setFrom(getJID());
        m.setBody(LocaleUtils.getLocalizedString("gateway.base.msgtotransport","kraken"));
        reply.add(m);
      }
    }
 else {
      if (packet.getBody() != null) {
        if (packet.getChildElement("buzz",NameSpace.SPARKNS) != null) {
          session.sendBuzzNotification(to,packet.getBody());
        }
 else         if (packet.getChildElement("attention",NameSpace.ATTENTIONNS) != null) {
          session.sendBuzzNotification(to,packet.getBody());
        }
 else {
          session.sendMessage(to,packet.getBody());
        }
      }
 else {
        Element eEvent=packet.getChildElement("x",NameSpace.XEVENT);
        if (eEvent != null && JiveGlobals.getBooleanProperty("plugin.gateway.globsl.messageeventing",true)) {
          if (eEvent.element("composing") != null) {
            session.sendChatState(to,ChatStateType.composing);
          }
 else {
            session.sendChatState(to,ChatStateType.paused);
          }
        }
 else {
          if (packet.getChildElement("composing",NameSpace.CHATSTATES) != null) {
            session.sendChatState(to,ChatStateType.composing);
          }
 else           if (packet.getChildElement("active",NameSpace.CHATSTATES) != null) {
            session.sendChatState(to,ChatStateType.active);
          }
 else           if (packet.getChildElement("inactive",NameSpace.CHATSTATES) != null) {
            session.sendChatState(to,ChatStateType.inactive);
          }
 else           if (packet.getChildElement("paused",NameSpace.CHATSTATES) != null) {
            session.sendChatState(to,ChatStateType.paused);
          }
 else           if (packet.getChildElement("gone",NameSpace.CHATSTATES) != null) {
            session.sendChatState(to,ChatStateType.gone);
          }
        }
        if (packet.getChildElement("buzz",NameSpace.SPARKNS) != null) {
          session.sendBuzzNotification(to,null);
        }
      }
    }
  }
 catch (  NotFoundException e) {
    Log.debug("Unable to find session.");
    Message m=new Message();
    m.setError(Condition.service_unavailable);
    m.setTo(from);
    m.setFrom(getJID());
    m.setBody(LocaleUtils.getLocalizedString("gateway.base.notloggedin","kraken",Arrays.asList(transportType.toString().toUpperCase())));
    reply.add(m);
  }
  return reply;
}
