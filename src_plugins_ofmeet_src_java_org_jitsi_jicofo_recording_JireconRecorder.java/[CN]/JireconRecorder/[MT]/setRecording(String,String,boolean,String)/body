{
  if (!StringUtils.isNullOrEmpty(this.token) && !this.token.equals(token)) {
    return false;
  }
  if (!isRecording() && doRecord) {
    JireconIq recording=new JireconIq();
    recording.setTo(recorderComponentJid);
    recording.setType(IQ.Type.SET);
    recording.setFrom(from);
    recording.setMucJid(mucRoomJid);
    recording.setAction(JireconIq.Action.START);
    recording.setOutput(path);
    Packet reply=xmpp.getXmppConnection().sendPacketAndGetReply(recording);
    if (reply instanceof JireconIq) {
      JireconIq recResponse=(JireconIq)reply;
      if (JireconIq.Status.INITIATING.equals(recResponse.getStatus())) {
        recordingId=recResponse.getRid();
        logger.info("Received recording ID: " + recordingId);
        status=JireconIq.Status.INITIATING;
      }
 else {
        logger.error("Unexpected status received: " + recResponse.toXML());
      }
    }
 else {
      logger.error("Unexpected response: " + reply.toXML());
    }
  }
 else   if (isRecording() && !doRecord) {
    JireconIq recording=new JireconIq();
    recording.setTo(recorderComponentJid);
    recording.setType(IQ.Type.SET);
    recording.setFrom(from);
    recording.setRid(recordingId);
    recording.setMucJid(mucRoomJid);
    recording.setAction(JireconIq.Action.STOP);
    xmpp.getXmppConnection().sendPacket(recording);
    status=JireconIq.Status.STOPPING;
  }
  return true;
}
