{
  Element note=command.addElement("note");
  MonitoringPlugin plugin=(MonitoringPlugin)XMPPServer.getInstance().getPluginManager().getPlugin(MonitoringConstants.NAME);
  ConversationManager conversationManager=(ConversationManager)plugin.getModule(ConversationManager.class);
  if (!conversationManager.isArchivingEnabled()) {
    note.addAttribute("type","error");
    note.setText("Message archiving is not enabled.");
    DataForm form=new DataForm(DataForm.Type.result);
    FormField field=form.addField();
    field.setType(FormField.Type.hidden);
    field.setVariable("FORM_TYPE");
    field.addValue("http://jabber.org/protocol/admin");
    field=form.addField();
    field.setLabel("Conversation Found?");
    field.setVariable("found");
    field.addValue(false);
    command.add(form.getElement());
    return;
  }
  try {
    JID participant=new JID(data.getData().get("participant").get(0));
    JID room=new JID(data.getData().get("room").get(0));
    Date time=DataForm.parseDate(data.getData().get("time").get(0));
    boolean includePDF=DataForm.parseBoolean(data.getData().get("includePDF").get(0));
    ArchiveSearcher archiveSearcher=(ArchiveSearcher)plugin.getModule(ArchiveSearcher.class);
    ArchiveSearch search=new ArchiveSearch();
    search.setParticipants(participant);
    search.setIncludeTimestamp(time);
    search.setRoom(room);
    Collection<Conversation> conversations=archiveSearcher.search(search);
    DataForm form=new DataForm(DataForm.Type.result);
    FormField field=form.addField();
    field.setType(FormField.Type.hidden);
    field.setVariable("FORM_TYPE");
    field.addValue("http://jabber.org/protocol/admin");
    field=form.addField();
    field.setLabel("Conversation Found?");
    field.setVariable("found");
    field.addValue(!conversations.isEmpty());
    if (includePDF) {
      ByteArrayOutputStream stream=null;
      if (!conversations.isEmpty()) {
        stream=new ConversationUtils().getConversationPDF(conversations.iterator().next());
      }
      if (stream != null) {
        field=form.addField();
        field.setLabel("PDF");
        field.setVariable("pdf");
        field.addValue(StringUtils.encodeBase64(stream.toByteArray()));
      }
    }
    command.add(form.getElement());
  }
 catch (  Exception e) {
    Log.error("Error occurred while running the command",e);
    note.addAttribute("type","error");
    note.setText("Error while processing the command.");
  }
}
