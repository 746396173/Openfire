{
  try {
    System.setProperty("org.apache.commons.logging.LogFactory","org.mortbay.log.Factory");
    File logDir=new File(JiveGlobals.getMessengerHome(),"logs");
    if (!logDir.exists()) {
      logDir.mkdirs();
    }
    File logFile=new File(logDir,"admin-console.log");
    OutputStreamLogSink logSink=new OutputStreamLogSink(logFile.toString());
    logSink.start();
    LogImpl log=(LogImpl)Factory.getFactory().getInstance("");
    log.setVerbose(-1);
    log.add(logSink);
    jetty=new Server();
    port=JiveGlobals.getXMLProperty("adminConsole.port",9090);
    String domain=JiveGlobals.getProperty("xmpp.domain");
    HttpListener httpListener=jetty.addListener(new InetAddrPort(domain,port));
    SunJsseListener secureListener=new SunJsseListener();
    boolean secureStarted=false;
    try {
      String keyStoreLocation=JiveGlobals.getProperty("xmpp.socket.ssl.keystore","resources" + File.separator + "security"+ File.separator+ "keystore");
      keyStoreLocation=JiveGlobals.getMessengerHome() + File.separator + keyStoreLocation;
      String keypass=JiveGlobals.getProperty("xmpp.socket.ssl.keypass","changeit");
      keypass=keypass.trim();
      String trustStoreLocation=JiveGlobals.getProperty("xmpp.socket.ssl.truststore","resources" + File.separator + "security"+ File.separator+ "truststore");
      trustStoreLocation=JiveGlobals.getMessengerHome() + File.separator + trustStoreLocation;
      String trustpass=JiveGlobals.getProperty("xmpp.socket.ssl.trustpass","changeit");
      trustpass=trustpass.trim();
      secureListener.setHost(domain);
      secureListener.setKeystore(keyStoreLocation);
      secureListener.setKeyPassword(keypass);
      secureListener.setPassword(keypass);
      securePort=JiveGlobals.getXMLProperty("adminConsole.securePort",9091);
      secureListener.setPort(securePort);
      jetty.addListener(secureListener);
      secureStarted=true;
    }
 catch (    Exception e) {
      Log.error(e);
    }
    WebApplicationContext webAppContext=jetty.addWebApplication("/",pluginDir.getAbsoluteFile() + File.separator + "webapp");
    webAppContext.setWelcomeFiles(new String[]{"index.jsp"});
    jetty.start();
    Log.info("Started admin console on port: " + port);
    if (!secureStarted) {
      System.out.println("Admin console listening at http://" + XMPPServer.getInstance().getServerInfo().getName() + ":"+ port);
    }
 else {
      Log.info("Started secure admin console on port: " + securePort);
      System.out.println("Admin console listening at:");
      System.out.println("  http://" + httpListener.getHost() + ":"+ port);
      System.out.println("  https://" + secureListener.getHost() + ":"+ securePort);
    }
  }
 catch (  Exception e) {
    Log.error("Trouble initializing admin console",e);
  }
}
