{
  try {
    System.setProperty("org.apache.commons.logging.LogFactory","org.mortbay.log.Factory");
    File logDir=new File(JiveGlobals.getHomeDirectory(),"logs");
    if (!logDir.exists()) {
      logDir.mkdirs();
    }
    File logFile=new File(logDir,"admin-console.log");
    OutputStreamLogSink logSink=new OutputStreamLogSink(logFile.toString());
    logSink.start();
    LogImpl log=(LogImpl)Factory.getFactory().getInstance("");
    log.setVerbose(-1);
    log.add(logSink);
    jetty=new Server();
    loadListeners();
    WebApplicationContext webAppContext=jetty.addWebApplication("/",pluginDir.getAbsoluteFile() + File.separator + "webapp");
    webAppContext.setWelcomeFiles(new String[]{"index.jsp"});
    jetty.start();
    String warning=LocaleUtils.getLocalizedString("admin.console.warning");
    String listening=LocaleUtils.getLocalizedString("admin.console.listening");
    if (plainListener == null && secureListener == null) {
      Log.info(warning);
      System.out.println(warning);
    }
 else     if (plainListener == null && secureListener != null) {
      Log.info(listening + " https://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ securePort);
      System.out.println(listening + " https://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ securePort);
    }
 else     if (secureListener == null && plainListener != null) {
      Log.info(listening + " http://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ port);
      System.out.println(listening + " http://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ port);
    }
 else {
      String msg=listening + ":\n" + "  http://"+ XMPPServer.getInstance().getServerInfo().getName()+ ":"+ port+ "\n"+ "  https://"+ XMPPServer.getInstance().getServerInfo().getName()+ ":"+ securePort;
      Log.info(msg);
      System.out.println(msg);
    }
  }
 catch (  Exception e) {
    System.err.println("Error starting admin console: " + e.getMessage());
    Log.error("Trouble initializing admin console",e);
  }
}
