{
  return new Iterator<JID>(){
    Iterator<JID> iter=users.iterator();
    JID current=null;
    public boolean hasNext(){
      return iter.hasNext();
    }
    public JID next(){
      current=iter.next();
      return current;
    }
    public void remove(){
      if (current == null) {
        throw new IllegalStateException();
      }
      if (provider.isReadOnly()) {
        return;
      }
      JID user=current;
      iter.remove();
      provider.deleteMember(name,user);
      if (adminCollection) {
        Map<String,String> params=new HashMap<String,String>();
        params.put("admin",user.toString());
        GroupEventDispatcher.dispatchEvent(Group.this,GroupEventDispatcher.EventType.admin_removed,params);
      }
 else {
        Map<String,String> params=new HashMap<String,String>();
        params.put("member",user.toString());
        GroupEventDispatcher.dispatchEvent(Group.this,GroupEventDispatcher.EventType.member_removed,params);
      }
    }
  }
;
}
