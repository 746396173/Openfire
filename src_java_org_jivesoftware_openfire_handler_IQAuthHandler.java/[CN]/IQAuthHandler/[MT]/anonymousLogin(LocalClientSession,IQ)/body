{
  IQ response=IQ.createResultIQ(packet);
  if (anonymousAllowed) {
    boolean forbidAccess=false;
    try {
      String hostAddress=session.getConnection().getHostAddress();
      if (!LocalClientSession.getWhitelistedAnonymousIPs().isEmpty() && !LocalClientSession.getWhitelistedAnonymousIPs().contains(hostAddress)) {
        byte[] address=session.getConnection().getAddress();
        String range1=(address[0] & 0xff) + "." + (address[1] & 0xff)+ "."+ (address[2] & 0xff)+ ".*";
        String range2=(address[0] & 0xff) + "." + (address[1] & 0xff)+ ".*.*";
        String range3=(address[0] & 0xff) + ".*.*.*";
        if (!LocalClientSession.getWhitelistedAnonymousIPs().contains(range1) && !LocalClientSession.getWhitelistedAnonymousIPs().contains(range2) && !LocalClientSession.getWhitelistedAnonymousIPs().contains(range3)) {
          forbidAccess=true;
        }
      }
    }
 catch (    UnknownHostException e) {
      forbidAccess=true;
    }
    if (forbidAccess) {
      response.setChildElement(packet.getChildElement().createCopy());
      response.setError(PacketError.Condition.forbidden);
    }
 else {
      session.setAnonymousAuth();
      response.setTo(session.getAddress());
      Element auth=response.setChildElement("query","jabber:iq:auth");
      auth.addElement("resource").setText(session.getAddress().getResource());
    }
  }
 else {
    response.setChildElement(packet.getChildElement().createCopy());
    response.setError(PacketError.Condition.forbidden);
  }
  return response;
}
