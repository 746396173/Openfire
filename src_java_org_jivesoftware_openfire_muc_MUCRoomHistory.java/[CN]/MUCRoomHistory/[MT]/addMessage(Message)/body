{
  boolean isSubjectChangeRequest=isSubjectChangeRequest(packet);
  JID fromJID=packet.getFrom();
  if (!isSubjectChangeRequest && (fromJID == null || fromJID.toString().length() == 0 || fromJID.equals(room.getRole().getRoleAddress()))) {
    return;
  }
  if (!isSubjectChangeRequest && !historyStrategy.isHistoryEnabled()) {
    return;
  }
  if (!isSubjectChangeRequest && (packet.getBody() == null || packet.getBody().trim().length() == 0)) {
    return;
  }
  Message packetToAdd=packet.createCopy();
  if (isNonAnonymousRoom != room.canAnyoneDiscoverJID()) {
    isNonAnonymousRoom=room.canAnyoneDiscoverJID();
    for (Iterator<Message> it=getMessageHistory(); it.hasNext(); ) {
      Message message=it.next();
      Element delayElement=message.getChildElement("delay","urn:xmpp:delay");
      if (room.canAnyoneDiscoverJID()) {
        try {
          MUCRole role=room.getOccupant(message.getFrom().getResource());
          delayElement.addAttribute("from",role.getUserAddress().toString());
        }
 catch (        UserNotFoundException e) {
        }
      }
 else {
        delayElement.addAttribute("from",message.getFrom().toString());
      }
    }
  }
  Element delayInformation=packetToAdd.addChildElement("delay","urn:xmpp:delay");
  Date current=new Date();
  delayInformation.addAttribute("stamp",XMPPDateTimeFormat.format(current));
  if (room.canAnyoneDiscoverJID()) {
    try {
      MUCRole role=room.getOccupant(packet.getFrom().getResource());
      delayInformation.addAttribute("from",role.getUserAddress().toString());
    }
 catch (    UserNotFoundException e) {
    }
  }
 else {
    delayInformation.addAttribute("from",packet.getFrom().toString());
  }
  historyStrategy.addMessage(packetToAdd);
}
