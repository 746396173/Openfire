{
  if (routingTable == null) {
    return;
  }
  PrivacyList list=null;
  JID from=packet.getFrom();
  if (from != null) {
    ClientSession session=sessionManager.getSession(from);
    if (session != null) {
      list=session.getActiveList();
      list=list == null ? session.getDefaultList() : list;
    }
  }
  if (list == null) {
    list=PrivacyListManager.getInstance().getDefaultPrivacyList(username);
  }
  for (  RosterItem item : rosterItems.values()) {
    if (item.getSubStatus() == RosterItem.SUB_BOTH || item.getSubStatus() == RosterItem.SUB_FROM) {
      packet.setTo(item.getJid());
      if (list != null && list.shouldBlockPacket(packet)) {
        continue;
      }
      JID searchNode=new JID(item.getJid().getNode(),item.getJid().getDomain(),null,true);
      for (      JID jid : routingTable.getRoutes(searchNode,null)) {
        try {
          routingTable.routePacket(jid,packet,false);
        }
 catch (        Exception e) {
          Log.debug(e.getMessage(),e);
        }
      }
    }
  }
  for (  String contact : implicitFrom.keySet()) {
    if (contact.contains("@")) {
      String node=contact.substring(0,contact.lastIndexOf("@"));
      String domain=contact.substring(contact.lastIndexOf("@") + 1);
      node=JID.escapeNode(node);
      contact=new JID(node,domain,null).toBareJID();
    }
    packet.setTo(contact);
    if (list != null && list.shouldBlockPacket(packet)) {
      continue;
    }
    for (    JID jid : routingTable.getRoutes(new JID(contact),null)) {
      try {
        routingTable.routePacket(jid,packet,false);
      }
 catch (      Exception e) {
        Log.debug(e.getMessage(),e);
      }
    }
  }
  if (from != null) {
    sessionManager.broadcastPresenceToOtherResources(from,packet);
  }
}
