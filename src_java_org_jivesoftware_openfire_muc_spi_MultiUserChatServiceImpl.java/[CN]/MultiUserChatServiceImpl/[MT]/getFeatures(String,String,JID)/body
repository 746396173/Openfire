{
  ArrayList<String> features=new ArrayList<>();
  if (name == null && node == null) {
    features.add("http://jabber.org/protocol/muc");
    features.add("http://jabber.org/protocol/disco#info");
    features.add("http://jabber.org/protocol/disco#items");
    features.add("jabber:iq:search");
    features.add(ResultSet.NAMESPACE_RESULT_SET_MANAGEMENT);
    if (!extraDiscoFeatures.isEmpty()) {
      features.addAll(extraDiscoFeatures);
    }
  }
 else   if (name != null && node == null) {
    MUCRoom room=getChatRoom(name);
    if (room != null) {
      features.add("http://jabber.org/protocol/muc");
      if (room.isPublicRoom()) {
        features.add("muc_public");
      }
 else {
        features.add("muc_hidden");
      }
      if (room.isMembersOnly()) {
        features.add("muc_membersonly");
      }
 else {
        features.add("muc_open");
      }
      if (room.isModerated()) {
        features.add("muc_moderated");
      }
 else {
        features.add("muc_unmoderated");
      }
      if (room.canAnyoneDiscoverJID()) {
        features.add("muc_nonanonymous");
      }
 else {
        features.add("muc_semianonymous");
      }
      if (room.isPasswordProtected()) {
        features.add("muc_passwordprotected");
      }
 else {
        features.add("muc_unsecured");
      }
      if (room.isPersistent()) {
        features.add("muc_persistent");
      }
 else {
        features.add("muc_temporary");
      }
    }
  }
  return features.iterator();
}
