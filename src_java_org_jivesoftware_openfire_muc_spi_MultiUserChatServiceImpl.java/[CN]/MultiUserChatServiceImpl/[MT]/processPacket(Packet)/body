{
  if (!isServiceEnabled()) {
    return;
  }
  try {
    if (packet instanceof IQ) {
      if (process((IQ)packet)) {
        return;
      }
    }
 else     if (packet instanceof Message) {
      Message msg=(Message)packet;
      if (msg.getType() == Message.Type.error) {
        removeUser(packet.getFrom());
        return;
      }
    }
 else     if (packet instanceof Presence) {
      Presence pres=(Presence)packet;
      if (pres.getType() == Presence.Type.error) {
        removeUser(packet.getFrom());
        return;
      }
    }
    if (packet.getTo().getNode() == null) {
      if (packet instanceof IQ && ((IQ)packet).isRequest()) {
        final IQ reply=IQ.createResultIQ((IQ)packet);
        reply.setChildElement(((IQ)packet).getChildElement().createCopy());
        reply.setError(PacketError.Condition.feature_not_implemented);
        router.route(reply);
      }
      Log.debug("Ignoring stanza addressed at conference service: {}",packet.toXML());
    }
 else {
      JID recipient=packet.getTo();
      String roomName=recipient != null ? recipient.getNode() : null;
      getChatUser(packet.getFrom(),roomName).process(packet);
    }
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
  }
}
