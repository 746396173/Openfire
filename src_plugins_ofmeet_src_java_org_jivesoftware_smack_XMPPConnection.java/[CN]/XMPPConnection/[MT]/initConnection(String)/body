{
  boolean isFirstInitialization=packetReader == null || packetWriter == null;
  if (!isFirstInitialization) {
    usingCompression=false;
  }
  try {
    if (isFirstInitialization) {
      packetWriter=new OpenfirePacketWriter(this);
      packetReader=new OpenfirePacketReader(this);
      smackConnection=new SmackConnection(host,packetWriter,packetReader);
      if (config.isDebuggerEnabled()) {
        addPacketListener(debugger.getReaderListener(),null);
        if (debugger.getWriterListener() != null) {
          addPacketSendingListener(debugger.getWriterListener(),null);
        }
      }
    }
 else {
      packetWriter.init();
      packetReader.init();
    }
    packetWriter.startup();
    packetReader.startup();
    connected=true;
    packetWriter.startKeepAliveProcess();
    if (isFirstInitialization) {
      for (      ConnectionCreationListener listener : getConnectionCreationListeners()) {
        listener.connectionCreated(this);
      }
    }
 else     if (!wasAuthenticated) {
      packetReader.notifyReconnection();
    }
  }
 catch (  Exception ex) {
    if (packetWriter != null) {
      try {
        packetWriter.shutdown();
      }
 catch (      Throwable ignore) {
      }
      packetWriter=null;
    }
    if (packetReader != null) {
      try {
        packetReader.shutdown();
      }
 catch (      Throwable ignore) {
      }
      packetReader=null;
    }
    this.setWasAuthenticated(authenticated);
    authenticated=false;
    connected=false;
    throw ex;
  }
}
