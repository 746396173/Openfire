{
  String nickname=getTransport().convertJIDToID(item.getJid());
  if (item.getNickname() != null && !item.getNickname().equals("")) {
    nickname=item.getNickname();
  }
  lockRoster(item.getJid().toString());
  Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Roster of "+ item.getJid().toString()+ " locked!");
  JID destJid=item.getJid();
  String destId=((SimpleTransport)transport).convertJIDToID(destJid);
  Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Starting addContact function for "+ destId);
  Request subscribeRequest=null;
  try {
    subscribeRequest=prepareSubscribeRequest(destId);
    subscribeRequest.addHeader(headerFactory.createExpiresHeader(365 * 24 * 60* 60));
  }
 catch (  Exception e) {
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Unable to prepare SUBSCRIBE request.",e);
    unlockRoster(item.getJid().toString());
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Roster of "+ item.getJid().toString()+ " unlocked!");
    return;
  }
  try {
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.ACK));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.BYE));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.CANCEL));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.INFO));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.INVITE));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.MESSAGE));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.NOTIFY));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.OPTIONS));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.REFER));
    subscribeRequest.addHeader(headerFactory.createAllowHeader(Request.SUBSCRIBE));
    subscribeRequest.addHeader(headerFactory.createEventHeader("presence"));
    subscribeRequest.addHeader(headerFactory.createAcceptHeader("application","pidf+xml"));
  }
 catch (  Exception e) {
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Unable to add a header",e);
  }
  try {
    sendRequest(subscribeRequest,ListeningPoint.UDP);
  }
 catch (  Exception e) {
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Unable to send request.",e);
    unlockRoster(item.getJid().toString());
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Roster of "+ item.getJid().toString()+ " unlocked!");
    return;
  }
  destJid=getTransport().convertIDToJID(destId);
  try {
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Adding contact '"+ destJid.toString()+ "' to roster...");
    getTransport().addOrUpdateRosterItem(getJID(),destJid,nickname,item.getGroups());
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Contact '"+ destJid.toString()+ "' added!");
  }
 catch (  Exception ex) {
    Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Unable to add contact.",ex);
  }
  unlockRoster(item.getJid().toString());
  Log.debug("SimpleSession(" + jid.getNode() + ").addContact:  Roster of "+ item.getJid().toString()+ " unlocked!");
}
