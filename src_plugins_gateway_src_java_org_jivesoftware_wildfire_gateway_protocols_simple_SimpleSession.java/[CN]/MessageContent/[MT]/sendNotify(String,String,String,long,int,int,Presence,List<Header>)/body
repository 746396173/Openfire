{
  List<Header> customHeaders=new ArrayList<Header>(3);
  Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Setting subscription state header...");
  try {
    SubscriptionStateHeader subscriptionStateHeader=headerFactory.createSubscriptionStateHeader(SubscriptionStateHeader.ACTIVE.toLowerCase());
    subscriptionStateHeader.setExpires(expires);
    customHeaders.add(subscriptionStateHeader);
  }
 catch (  Exception e) {
    Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Unable to set subscription state header.",e);
    return;
  }
  Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Setting event header...");
  try {
    customHeaders.add(headerFactory.createEventHeader("presence"));
  }
 catch (  Exception e) {
    Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Unable to set event header.",e);
    return;
  }
  Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Adding route headers...");
  try {
    customHeaders.addAll(routeHeaders);
  }
 catch (  Exception e) {
    Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Unable to add route headers.",e);
    return;
  }
  Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Writing simple presence.");
  String presenceContent="";
  try {
    SimplePresence simplePresence=new SimplePresence();
    simplePresence.setEntity("pres:" + registration.getUsername() + "@"+ sipHost);
    simplePresence.setDmNote(presence.getStatus());
    if (presence.getStatus() != null && presence.getStatus().equalsIgnoreCase("Offline"))     simplePresence.setTupleStatus(SimplePresence.TupleStatus.CLOSED);
 else {
      simplePresence.setTupleStatus(SimplePresence.TupleStatus.OPEN);
      if (presence.getShow() != null) {
switch (presence.getShow()) {
case away:
          simplePresence.setRpid(SimplePresence.Rpid.AWAY);
        break;
case dnd:
      simplePresence.setRpid(SimplePresence.Rpid.BUSY);
    break;
case xa:
  simplePresence.setRpid(SimplePresence.Rpid.AWAY);
break;
default :
break;
}
}
}
presenceContent=simplePresence.toXML();
}
 catch (Exception e) {
Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Unable to write simple presence.",e);
return;
}
Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Creating content type header.");
ContentTypeHeader contentTypeHeader;
try {
contentTypeHeader=headerFactory.createContentTypeHeader("application","pidf+xml");
}
 catch (Exception e) {
Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Unable to create content type header.",e);
return;
}
Log.debug(presenceContent);
MessageContent msgContent=new MessageContent(contentTypeHeader,presenceContent);
if (!prepareRequest(RequestType.NOTIFY,dest,toTag,callId,seqNum,maxForward,customHeaders,msgContent)) {
Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Unable to send NOTIFY packet.");
}
}
