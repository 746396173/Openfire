{
  if (!inputRequest.getMethod().equals(Request.SUBSCRIBE)) {
    throw new Exception("The REQUEST packet is not of method SUBSCRIBE!");
  }
  String dest="";
  String toTag="";
  if (inputRequest.getHeader(FromHeader.NAME) != null) {
    FromHeader fromHeader=(FromHeader)inputRequest.getHeader(FromHeader.NAME);
    toTag=fromHeader.getTag();
    dest=fromHeader.getAddress().getURI().toString();
  }
  Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  Parsing SUBSCRIBE packet...");
  long seqNum=1L;
  if (inputRequest.getHeader(CSeqHeader.NAME) != null) {
    seqNum=((CSeqHeader)inputRequest.getHeader(CSeqHeader.NAME)).getSeqNumber() + 1;
  }
  int expires=0;
  if (inputRequest.getHeader(ExpiresHeader.NAME) != null) {
    expires=((ExpiresHeader)inputRequest.getHeader(ExpiresHeader.NAME)).getExpires();
  }
  String callId=null;
  if (inputRequest.getHeader(CallIdHeader.NAME) != null) {
    callId=((CallIdHeader)inputRequest.getHeader(CallIdHeader.NAME)).getCallId();
  }
  User me=XMPPServer.getInstance().getUserManager().getUser(getJID().getNode());
  Presence myPresence=XMPPServer.getInstance().getPresenceManager().getPresence(me);
  List<Header> routeHeaders=new ArrayList<Header>();
  String routingProxies="";
  for (Iterator recRouteHeaders=inputRequest.getHeaders(RecordRouteHeader.NAME); recRouteHeaders.hasNext(); )   routingProxies+="," + ((RecordRouteHeader)recRouteHeaders.next()).toString().substring("Record-Route: ".length());
  if (routingProxies.startsWith(","))   routingProxies=routingProxies.substring(1);
  int commaIndex=routingProxies.lastIndexOf(",");
  while (true) {
    String uri="";
    if (commaIndex > 0)     uri=routingProxies.substring(commaIndex + 1);
 else     uri=routingProxies;
    Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  uri = "+ uri);
    if (uri != null && uri.trim().length() > 0) {
      RouteHeader routeHeader=headerFactory.createRouteHeader(addressFactory.createAddress(uri));
      routeHeaders.add(routeHeader);
    }
    Log.debug("SimpleSession(" + getJID().getNode() + ").sendNotify:  routeHeaders.size = "+ routeHeaders.size());
    if (commaIndex < 0)     break;
    routingProxies=routingProxies.substring(0,commaIndex);
    commaIndex=routingProxies.lastIndexOf(",");
  }
  sendNotify(dest,toTag,callId,seqNum,expires,70,myPresence,routeHeaders);
}
