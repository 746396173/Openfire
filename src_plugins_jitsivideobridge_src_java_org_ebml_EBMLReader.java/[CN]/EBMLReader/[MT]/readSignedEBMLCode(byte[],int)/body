{
  byte firstByte=source[offset];
  int numBytes=0;
  long mask=0x0080;
  for (int i=0; i < 8; i++) {
    if ((firstByte & mask) == mask) {
      numBytes=i + 1;
      i=8;
    }
    mask>>>=1;
  }
  if (numBytes == 0)   return 0;
  byte[] data=new byte[numBytes];
  data[0]=(byte)(firstByte & ((0xFF >>> (numBytes))));
  if (numBytes > 1) {
    ArrayCopy.arraycopy(data,1,source,offset + 1,numBytes - 1);
  }
  long size=0;
  long n=0;
  for (int i=0; i < numBytes; i++) {
    n=((long)data[numBytes - 1 - i] << 56) >>> 56;
    size=size | (n << (8 * i));
  }
  if (numBytes == 1) {
    size-=63;
  }
 else   if (numBytes == 2) {
    size-=8191;
  }
 else   if (numBytes == 3) {
    size-=1048575;
  }
 else   if (numBytes == 4) {
    size-=134217727;
  }
  return size;
}
