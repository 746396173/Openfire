{
  Document document=DocumentHelper.createDocument();
  Element root=document.addElement("JiveMessenger");
  Iterator users=userManager.getUsers().iterator();
  while (users.hasNext()) {
    User user=(User)users.next();
    Element userElement=root.addElement("User");
    String userName=user.getUsername();
    userElement.addElement("Jid").addText(userName);
    try {
      userElement.addElement("Password").addText(provider.getPassword(userName));
    }
 catch (    UserNotFoundException e) {
      Log.info("User not found: " + userName + ", setting password to their username");
      userElement.addElement("Password").addText(userName);
    }
    userElement.addElement("Email").addText(user.getEmail() == null ? "" : user.getEmail());
    userElement.addElement("Name").addText(user.getName() == null ? "" : user.getName());
    userElement.addElement("CreationDate").addText(String.valueOf(user.getCreationDate().getTime()));
    userElement.addElement("ModifiedDate").addText(String.valueOf(user.getModificationDate().getTime()));
    Element rosterElement=userElement.addElement("Roster");
    Iterator roster=user.getRoster().getRosterItems().iterator();
    while (roster.hasNext()) {
      RosterItem ri=(RosterItem)roster.next();
      Element itemElement=rosterElement.addElement("Item");
      itemElement.addAttribute("jid",removeDoman(ri.getJid()));
      itemElement.addAttribute("askstatus",String.valueOf(ri.getAskStatus().getValue()));
      itemElement.addAttribute("recvstatus",String.valueOf(ri.getRecvStatus().getValue()));
      itemElement.addAttribute("substatus",String.valueOf(ri.getSubStatus().getValue()));
      itemElement.addAttribute("name",ri.getNickname());
      Element groupElement=itemElement.addElement("Group");
      Iterator groups=ri.getGroups().iterator();
      while (groups.hasNext()) {
        String group=(String)groups.next();
        groupElement.addText(group);
      }
    }
  }
  return document;
}
