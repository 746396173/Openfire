{
  String nodeID=entitiesElement.attributeValue("node");
  if (nodeID == null) {
    sendErrorPacket(iq,PacketError.Condition.bad_request,null);
    return;
  }
  Node node=service.getNode(nodeID);
  if (node == null) {
    sendErrorPacket(iq,PacketError.Condition.item_not_found,null);
    return;
  }
  if (!node.isAdmin(iq.getFrom())) {
    sendErrorPacket(iq,PacketError.Condition.forbidden,null);
    return;
  }
  IQ reply=IQ.createResultIQ(iq);
  for (Iterator it=entitiesElement.elementIterator("subscription"); it.hasNext(); ) {
    Element entity=(Element)it.next();
    JID subscriber=new JID(entity.attributeValue("jid"));
    JID owner=new JID(subscriber.toBareJID());
    String subStatus=entity.attributeValue("subscription");
    String subID=entity.attributeValue("subid");
    NodeSubscription subscription=null;
    if (node.isMultipleSubscriptionsEnabled()) {
      if (subID != null) {
        subscription=node.getSubscription(subID);
      }
    }
 else {
      subscription=node.getSubscription(subscriber);
    }
    if ("none".equals(subStatus) && subscription != null) {
      node.cancelSubscription(subscription);
    }
 else     if ("subscribed".equals(subStatus)) {
      if (subscription != null) {
        node.approveSubscription(subscription,true);
      }
 else {
        node.createSubscription(null,owner,subscriber,false,null);
      }
    }
  }
  router.route(reply);
}
