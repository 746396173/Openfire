{
  Log.debug("PluginManager: Unloading plugin " + pluginName);
  Plugin plugin=plugins.get(pluginName);
  if (plugin != null) {
    pluginDevelopment.remove(plugin);
    if (parentPluginMap.containsKey(plugin)) {
      for (      String childPlugin : parentPluginMap.get(plugin)) {
        Log.debug("PluginManager: Unloading child plugin: " + childPlugin);
        unloadPlugin(childPlugin);
      }
      parentPluginMap.remove(plugin);
    }
    File webXML=new File(pluginDirectory,pluginName + File.separator + "web"+ File.separator+ "WEB-INF"+ File.separator+ "web.xml");
    if (webXML.exists()) {
      AdminConsole.removeModel(pluginName);
      PluginServlet.unregisterServlets(webXML);
    }
    File customWebXML=new File(pluginDirectory,pluginName + File.separator + "web"+ File.separator+ "WEB-INF"+ File.separator+ "web-custom.xml");
    if (customWebXML.exists()) {
      PluginServlet.unregisterServlets(customWebXML);
    }
    try {
      plugin.destroyPlugin();
    }
 catch (    Exception e) {
      Log.error(e);
    }
  }
  plugins.remove(pluginName);
  File pluginFile=pluginDirs.remove(plugin);
  PluginClassLoader pluginLoader=classloaders.remove(plugin);
  File dir=new File(pluginDirectory,pluginName);
  try {
    Thread.sleep(2000);
    System.gc();
    int count=0;
    while (!deleteDir(dir) && count < 5) {
      Log.warn("Error unloading plugin " + pluginName + ". "+ "Will attempt again momentarily.");
      Thread.sleep(8000);
      count++;
      System.gc();
    }
  }
 catch (  InterruptedException e) {
    Log.error(e);
  }
  if (plugin != null && !dir.exists()) {
    PluginCacheRegistry.getInstance().unregisterCaches(pluginName);
    if (childPluginMap.containsKey(plugin)) {
      unloadPlugin(childPluginMap.get(plugin));
    }
    childPluginMap.remove(plugin);
    firePluginDestroyedEvent(pluginName,plugin);
  }
 else   if (plugin != null) {
    plugins.put(pluginName,plugin);
    pluginDirs.put(plugin,pluginFile);
    classloaders.put(plugin,pluginLoader);
  }
}
