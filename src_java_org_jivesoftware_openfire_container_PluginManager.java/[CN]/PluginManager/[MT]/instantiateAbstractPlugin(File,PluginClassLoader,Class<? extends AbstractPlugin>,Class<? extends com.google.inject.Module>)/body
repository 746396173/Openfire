{
  ClassLoader oldLoader=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(pluginLoader);
  final PluginModule module=new PluginModule();
  com.google.inject.Module tempModule;
  if (moduleClazz == null) {
    tempModule=null;
  }
 else {
    tempModule=moduleClazz.newInstance();
  }
  final com.google.inject.Module pluginModule=tempModule;
  AbstractPlugin plugin=Guice.createInjector(new AbstractModule(){
    protected void configure(){
      install(module);
      if (pluginModule != null) {
        install(pluginModule);
      }
      bind(String.class).annotatedWith(PluginName.class).toProvider(new Provider<String>(){
        public String get(){
          return getName(pluginDir);
        }
      }
);
      bind(String.class).annotatedWith(PluginDescription.class).toProvider(new Provider<String>(){
        public String get(){
          return getDescription(pluginDir);
        }
      }
);
      bind(File.class).annotatedWith(PluginDir.class).toProvider(new Provider<File>(){
        public File get(){
          return pluginDir;
        }
      }
);
      bind(pluginClazz);
    }
  }
).getInstance(pluginClazz);
  Thread.currentThread().setContextClassLoader(oldLoader);
  return plugin;
}
