{
  super.initialize(server);
  userManager=server.getUserManager();
  rosterManager=server.getRosterManager();
  if (probeResult == null) {
    probeResult=DocumentHelper.createElement(QName.get("query","jabber:iq:register"));
    probeResult.addElement("username");
    probeResult.addElement("password");
    probeResult.addElement("email");
    probeResult.addElement("name");
    final DataForm registrationForm=new DataForm(DataForm.Type.form);
    registrationForm.setTitle("XMPP Client Registration");
    registrationForm.addInstruction("Please provide the following information");
    final FormField fieldForm=registrationForm.addField();
    fieldForm.setVariable("FORM_TYPE");
    fieldForm.setType(FormField.Type.hidden);
    fieldForm.addValue("jabber:iq:register");
    final FormField fieldUser=registrationForm.addField();
    fieldUser.setVariable("username");
    fieldUser.setType(FormField.Type.text_single);
    fieldUser.setLabel("Username");
    fieldUser.setRequired(true);
    final FormField fieldName=registrationForm.addField();
    fieldName.setVariable("name");
    fieldName.setType(FormField.Type.text_single);
    fieldName.setLabel("Full name");
    if (UserManager.getUserProvider().isNameRequired()) {
      fieldName.setRequired(true);
    }
    final FormField fieldMail=registrationForm.addField();
    fieldMail.setVariable("email");
    fieldMail.setType(FormField.Type.text_single);
    fieldMail.setLabel("Email");
    if (UserManager.getUserProvider().isEmailRequired()) {
      fieldMail.setRequired(true);
    }
    final FormField fieldPwd=registrationForm.addField();
    fieldPwd.setVariable("password");
    fieldPwd.setType(FormField.Type.text_private);
    fieldPwd.setLabel("Password");
    fieldPwd.setRequired(true);
    probeResult.add(registrationForm.getElement());
  }
  registrationEnabled=JiveGlobals.getBooleanProperty("register.inband",true);
  canChangePassword=JiveGlobals.getBooleanProperty("xmpp.auth.iqauth",true);
}
