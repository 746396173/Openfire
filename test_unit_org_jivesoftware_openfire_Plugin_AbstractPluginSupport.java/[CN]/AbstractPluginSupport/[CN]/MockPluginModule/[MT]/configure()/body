{
  bind(JiveProperties.class).toInstance(context.mock(JiveProperties.class));
  bind(Logger.class).toInstance(context.mock(Logger.class));
  bind(String.class).annotatedWith(ServerName.class).toProvider(new Provider<String>(){
    public String get(){
      return "example.com";
    }
  }
);
  bind(XMPPServer.class).toInstance(context.mock(XMPPServer.class));
  bind(ConnectionManager.class).toInstance(context.mock(ConnectionManager.class));
  bind(RoutingTable.class).toInstance(context.mock(RoutingTable.class));
  bind(PacketDeliverer.class).toInstance(context.mock(PacketDeliverer.class));
  bind(RosterManager.class).toInstance(context.mock(RosterManager.class));
  bind(PresenceManager.class).toInstance(context.mock(PresenceManager.class));
  bind(OfflineMessageStore.class).toInstance(context.mock(OfflineMessageStore.class));
  bind(OfflineMessageStrategy.class).toInstance(context.mock(OfflineMessageStrategy.class));
  bind(PacketRouter.class).toInstance(context.mock(PacketRouter.class));
  bind(IQRegisterHandler.class).toInstance(context.mock(IQRegisterHandler.class));
  bind(IQAuthHandler.class).toInstance(context.mock(IQAuthHandler.class));
  bind(PluginManager.class).toInstance(context.mock(PluginManager.class));
  bind(PubSubModule.class).toInstance(context.mock(PubSubModule.class));
  bind(SessionManager.class).toInstance(context.mock(SessionManager.class));
  bind(PresenceUpdateHandler.class).toInstance(context.mock(PresenceUpdateHandler.class));
  bind(PresenceSubscribeHandler.class).toInstance(context.mock(PresenceSubscribeHandler.class));
  bind(IQRouter.class).toInstance(context.mock(IQRouter.class));
  bind(MessageRouter.class).toInstance(context.mock(MessageRouter.class));
  bind(PresenceRouter.class).toInstance(context.mock(PresenceRouter.class));
  bind(MulticastRouter.class).toInstance(context.mock(MulticastRouter.class));
  bind(UserManager.class).toInstance(context.mock(UserManager.class));
  bind(UpdateManager.class).toInstance(context.mock(UpdateManager.class));
  bind(AuditManager.class).toInstance(context.mock(AuditManager.class));
  bind(IQDiscoItemsHandler.class).toInstance(context.mock(IQDiscoItemsHandler.class));
  bind(PrivateStorage.class).toInstance(context.mock(PrivateStorage.class));
  bind(MultiUserChatServer.class).toInstance(context.mock(MultiUserChatServer.class));
  bind(AdHocCommandHandler.class).toInstance(context.mock(AdHocCommandHandler.class));
  bind(FileTransferProxy.class).toInstance(context.mock(FileTransferProxy.class));
  bind(FileTransferManager.class).toInstance(context.mock(FileTransferManager.class));
  bind(MediaProxyService.class).toInstance(context.mock(MediaProxyService.class));
  bind(STUNService.class).toInstance(context.mock(STUNService.class));
  bind(VCardManager.class).toInstance(context.mock(VCardManager.class));
  bind(GroupManager.class).toInstance(context.mock(GroupManager.class));
  bind(RemoteSessionLocator.class).toInstance(context.mock(RemoteSessionLocator.class));
  bind(ComponentManager.class).toInstance(context.mock(ComponentManager.class));
}
