{
  try {
    IQ replyPacket=IQ.createResultIQ(iq);
    Element transcripts=replyPacket.setChildElement("transcripts","http://jivesoftware.com/protocol/workgroup");
    transcripts.addAttribute("userID",uniqueUserID);
    Connection con=null;
    PreparedStatement pstmt=null;
    ResultSet rs=null;
    try {
      con=DbConnectionManager.getConnection();
      pstmt=con.prepareStatement(GET_SESSIONS_WITH_TRANSCRIPTS);
      pstmt.setLong(1,workgroup.getID());
      pstmt.setString(2,uniqueUserID);
      rs=pstmt.executeQuery();
      while (rs.next()) {
        String sessionID=rs.getString(1);
        String joinTime=rs.getString(2);
        String leftTime=rs.getString(3);
        Element transcript=transcripts.addElement("transcript");
        transcript.addAttribute("sessionID",sessionID);
        Element agentElement=transcript.addElement("agents");
        addAgentsToElement(agentElement,sessionID);
        if (joinTime != null && joinTime.length() > 0) {
          transcript.addElement("joinTime").setText(UTC_FORMAT.format(new Date(Long.parseLong(joinTime))));
        }
        if (leftTime != null && leftTime.length() > 0) {
          transcript.addElement("leftTime").setText(UTC_FORMAT.format(new Date(Long.parseLong(leftTime))));
        }
      }
    }
 catch (    Exception ex) {
      Log.error("Error retrieving chat transcript(s)",ex);
    }
 finally {
      DbConnectionManager.closeConnection(rs,pstmt,con);
      workgroup.send(replyPacket);
    }
  }
 catch (  Exception ex) {
    Log.error(ex.getMessage(),ex);
  }
}
