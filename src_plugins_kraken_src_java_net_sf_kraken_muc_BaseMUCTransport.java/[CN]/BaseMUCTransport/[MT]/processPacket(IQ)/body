{
  Log.debug("Received iq packet: " + packet.toXML());
  List<Packet> reply=new ArrayList<Packet>();
  if (packet.getType() == IQ.Type.error) {
    return reply;
  }
  String xmlns=null;
  Element child=(packet).getChildElement();
  if (child != null) {
    xmlns=child.getNamespaceURI();
  }
  if (xmlns == null) {
    Log.debug("No XMLNS:" + packet.toString());
    IQ error=IQ.createResultIQ(packet);
    error.setError(PacketError.Condition.bad_request);
    reply.add(error);
    return reply;
  }
  if (xmlns.equals(NameSpace.DISCO_INFO)) {
    reply.addAll(handleDiscoInfo(packet));
  }
 else   if (xmlns.equals(NameSpace.DISCO_ITEMS)) {
    reply.addAll(handleDiscoItems(packet));
  }
 else   if (xmlns.equals(NameSpace.MUC_ADMIN)) {
    reply.addAll(handleMUCAdmin(packet));
  }
 else   if (xmlns.equals(NameSpace.MUC_USER)) {
    reply.addAll(handleMUCUser(packet));
  }
 else {
    Log.debug("Unable to handle iq request: " + xmlns);
    IQ error=IQ.createResultIQ(packet);
    error.setError(PacketError.Condition.service_unavailable);
    reply.add(error);
  }
  return reply;
}
