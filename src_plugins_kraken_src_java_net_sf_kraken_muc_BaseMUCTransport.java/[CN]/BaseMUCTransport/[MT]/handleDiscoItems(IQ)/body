{
  List<Packet> reply=new ArrayList<Packet>();
  JID from=packet.getFrom();
  JID to=packet.getTo();
  if (packet.getTo().getNode() == null) {
    IQ result=IQ.createResultIQ(packet);
    if (JiveGlobals.getBooleanProperty("plugin.gateway." + getTransport().getType() + ".roomlist",false)) {
      try {
        TransportSession<B> session=getTransport().getSessionManager().getSession(from);
        if (session.isLoggedIn()) {
          storePendingRequest(packet);
          session.getRooms();
        }
      }
 catch (      NotFoundException e) {
        result.setError(PacketError.Condition.forbidden);
        reply.add(result);
      }
    }
 else {
      sendRooms(from,new ArrayList<MUCTransportRoom>());
    }
  }
 else {
    IQ result=IQ.createResultIQ(packet);
    try {
      TransportSession<B> session=getTransport().getSessionManager().getSession(from);
      if (session.isLoggedIn()) {
        storePendingRequest(packet);
        session.getRoomMembers(getTransport().convertJIDToID(to));
      }
 else {
        result.setError(PacketError.Condition.forbidden);
        reply.add(result);
      }
    }
 catch (    NotFoundException e) {
      result.setError(PacketError.Condition.forbidden);
      reply.add(result);
    }
  }
  return reply;
}
