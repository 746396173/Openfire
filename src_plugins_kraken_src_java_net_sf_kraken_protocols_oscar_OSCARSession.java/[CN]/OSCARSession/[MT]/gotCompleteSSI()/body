{
  ArrayList<Integer> nicknameRequests=new ArrayList<Integer>();
  TransportBuddyManager<OSCARBuddy> manager=getBuddyManager();
  for (  OSCARBuddy buddy : manager.getBuddies()) {
    String nickname=buddy.getNickname();
    buddy.populateGroupList();
    for (    BuddyItem buddyItem : buddy.getBuddyItems()) {
      if (buddyItem.isAwaitingAuth()) {
        buddy.setAskType(RosterItem.ASK_SUBSCRIBE);
        buddy.setSubType(RosterItem.SUB_NONE);
      }
      try {
        if (nickname.equalsIgnoreCase(buddyItem.getScreenname())) {
          Integer buddyUIN=Integer.parseInt(buddyItem.getScreenname());
          Log.debug("REQUESTING SHORT INFO FOR " + buddyUIN);
          nicknameRequests.add(buddyUIN);
        }
      }
 catch (      NumberFormatException e) {
      }
    }
  }
  try {
    getTransport().syncLegacyRoster(getJID(),getBuddyManager().getBuddies());
  }
 catch (  UserNotFoundException e) {
    Log.debug("Unable to sync oscar contact list for " + getJID(),e);
  }
  getBuddyManager().activate();
  request(new SetInfoCmd(InfoData.forCapabilities(getCapabilities())));
  updateStatus(getPresence(),getVerboseStatus());
  ssiHierarchy.setVisibilityFlag(VisibilityItem.MASK_DISABLE_RECENT_BUDDIES);
  if (getTransport().getType().equals(TransportType.icq)) {
    request(new OfflineMsgIcqRequest(getUIN(),(int)nextIcqId()));
  }
  if (JiveGlobals.getBooleanProperty("plugin.gateway." + getTransport().getType() + ".mailnotifications",true)) {
    request(new ServiceRequest(MailCheckCmd.FAMILY_MAILCHECK));
  }
  for (  Integer uin : nicknameRequests) {
    MetaShortInfoRequest req=new MetaShortInfoRequest(getUIN(),(int)nextIcqId(),uin);
    Log.debug("Doing a MetaShortInfoRequest for " + uin + " as "+ req);
    request(req);
  }
}
