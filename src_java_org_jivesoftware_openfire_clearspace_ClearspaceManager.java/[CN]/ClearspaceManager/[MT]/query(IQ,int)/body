{
  if (packet.getFrom() == null) {
    throw new IllegalStateException("IQ packets with no FROM cannot be sent to Clearspace");
  }
  if (clearspaces.isEmpty()) {
    return null;
  }
  String component;
synchronized (clearspaces) {
    component=clearspaces.get(0);
    Collections.rotate(clearspaces,1);
  }
  packet.setTo(component);
  final LinkedBlockingQueue<IQ> answer=new LinkedBlockingQueue<IQ>(8);
  final IQRouter router=XMPPServer.getInstance().getIQRouter();
  router.addIQResultListener(packet.getID(),new IQResultListener(){
    public void receivedAnswer(    IQ packet){
      answer.offer(packet);
    }
    public void answerTimeout(    String packetId){
      Log.warn("No answer from Clearspace was received for IQ stanza: " + packet);
    }
  }
);
  XMPPServer.getInstance().getIQRouter().route(packet);
  IQ reply=null;
  try {
    reply=answer.poll(timeout,TimeUnit.MILLISECONDS);
  }
 catch (  InterruptedException e) {
  }
  return reply;
}
