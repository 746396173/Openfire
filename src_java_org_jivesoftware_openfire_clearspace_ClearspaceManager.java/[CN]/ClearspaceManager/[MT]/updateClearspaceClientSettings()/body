{
  String xmppBoshSslPort="0";
  String xmppBoshPort="0";
  final ConnectionManagerImpl connectionManager=((ConnectionManagerImpl)XMPPServer.getInstance().getConnectionManager());
  String xmppPort=String.valueOf(connectionManager.getConfiguration(ConnectionType.SOCKET_C2S,false).getPort());
  if (JiveGlobals.getBooleanProperty(HttpBindManager.HTTP_BIND_ENABLED,HttpBindManager.HTTP_BIND_ENABLED_DEFAULT)) {
    int boshSslPort=HttpBindManager.getInstance().getHttpBindSecurePort();
    int boshPort=HttpBindManager.getInstance().getHttpBindUnsecurePort();
    try {
      if (HttpBindManager.getInstance().isHttpsBindActive() && connectionManager.getConfiguration(ConnectionType.SOCKET_C2S,false).getTlsPolicy() != org.jivesoftware.openfire.Connection.TLSPolicy.disabled) {
        xmppBoshSslPort=String.valueOf(boshSslPort);
      }
    }
 catch (    Exception e) {
      Log.debug("Error while checking SSL certificate.  Instructing Clearspace not to use SSL port.");
    }
    if (HttpBindManager.getInstance().isHttpBindActive() && boshPort > 0) {
      xmppBoshPort=String.valueOf(boshPort);
    }
  }
  try {
    String path=CHAT_URL_PREFIX + "updateClientSettings/";
    Document groupDoc=DocumentHelper.createDocument();
    Element rootE=groupDoc.addElement("updateClientSettings");
    rootE.addElement("boshSslPort").setText(xmppBoshSslPort);
    rootE.addElement("boshPort").setText(xmppBoshPort);
    rootE.addElement("tcpPort").setText(xmppPort);
    executeRequest(POST,path,groupDoc.asXML());
  }
 catch (  Exception e) {
    Log.error("Error updating the client settings of Clearspace",e);
  }
}
