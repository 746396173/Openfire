{
  JiveGlobals.migrateProperty("clearspace.uri");
  JiveGlobals.migrateProperty("clearspace.sharedSecret");
  if (isEnabled()) {
    if (JiveGlobals.getProperty("provider.user.className") == null) {
      JiveGlobals.setProperty("provider.user.className","org.jivesoftware.openfire.clearspace.ClearspaceUserProvider");
    }
    if (JiveGlobals.getProperty("provider.group.className") == null) {
      JiveGlobals.setProperty("provider.group.className","org.jivesoftware.openfire.clearspace.ClearspaceGroupProvider");
    }
    if (JiveGlobals.getProperty("provider.vcard.className") == null) {
      JiveGlobals.setProperty("provider.vcard.className","org.jivesoftware.openfire.clearspace.ClearspaceVCardProvider");
    }
    if (JiveGlobals.getProperty("provider.lockout.className") == null) {
      JiveGlobals.setProperty("provider.lockout.className","org.jivesoftware.openfire.clearspace.ClearspaceLockOutProvider");
    }
    if (JiveGlobals.getProperty("provider.securityAudit.className") == null) {
      JiveGlobals.setProperty("provider.securityAudit.className","org.jivesoftware.openfire.clearspace.ClearspaceSecurityAuditProvider");
    }
    if (JiveGlobals.getProperty("provider.admin.className") == null) {
      JiveGlobals.setProperty("provider.admin.className","org.jivesoftware.openfire.clearspace.ClearspaceAdminProvider");
    }
  }
  this.uri=properties.get("clearspace.uri");
  if (uri != null) {
    if (!this.uri.endsWith("/")) {
      this.uri=this.uri + "/";
    }
    updateHostPort();
  }
  sharedSecret=properties.get("clearspace.sharedSecret");
  userIDCache=new DefaultCache<String,Long>("clearspace.userid",1000,JiveConstants.DAY);
  groupIDCache=new DefaultCache<String,Long>("clearspace.groupid",1000,JiveConstants.DAY);
  usernameCache=new DefaultCache<Long,String>("clearspace.username",1000,JiveConstants.DAY);
  if (Log.isDebugEnabled()) {
    StringBuilder buf=new StringBuilder();
    buf.append("Created new ClearspaceManager() instance, fields:\n");
    buf.append("\t URI: ").append(uri).append("\n");
    buf.append("\t sharedSecret: ").append(sharedSecret).append("\n");
    Log.debug("ClearspaceManager: " + buf.toString());
  }
  nonceCache=CacheFactory.createCache("cache.clearspace.nonce");
  nonceGenerator=new Random();
}
