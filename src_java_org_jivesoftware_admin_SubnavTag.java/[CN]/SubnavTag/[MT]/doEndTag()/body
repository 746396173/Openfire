{
  HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
  if (getBodyContent().getString() == null) {
    throw new JspException("Error, no template (body value) set for the sidebar tag.");
  }
  String subPageID=(String)request.getAttribute("subPageID");
  String pageID=(String)request.getAttribute("pageID");
  if (subPageID != null || pageID != null) {
    if (pageID == null) {
      Element subPage=AdminConsole.getElemnetByID(subPageID);
      pageID=subPage.getParent().getParent().attributeValue("id");
    }
    if (AdminConsole.getModel().elements().size() > 0) {
      JspWriter out=pageContext.getOut();
      StringBuilder buf=new StringBuilder();
      Element current=null;
      Element subcurrent=null;
      Element subnav=null;
      if (subPageID != null) {
        subcurrent=AdminConsole.getElemnetByID(subPageID);
      }
      current=AdminConsole.getElemnetByID(pageID);
      if (current != null) {
        if (subcurrent != null) {
          subnav=subcurrent.getParent().getParent().getParent();
        }
 else {
          subnav=current.getParent();
        }
      }
      Element currentTab=(Element)AdminConsole.getModel().selectSingleNode("//*[@id='" + pageID + "']/ancestor::tab");
      if (currentTab != null) {
        Collection items=currentTab.elements();
        if (items.size() > 0) {
          buf.append("<ul>");
          for (          Object itemObj : items) {
            Element item=(Element)itemObj;
            if (item.elements().size() > 0) {
              Element firstSubItem=(Element)item.elements().get(0);
              String pluginName=item.attributeValue("plugin");
              String subitemID=item.attributeValue("id");
              String subitemName=item.attributeValue("name");
              String subitemURL=firstSubItem.attributeValue("url");
              String subitemDescr=item.attributeValue("description");
              String value=getBodyContent().getString();
              if (value != null) {
                value=StringUtils.replace(value,"[id]",clean(subitemID));
                value=StringUtils.replace(value,"[name]",clean(AdminConsole.getAdminText(subitemName,pluginName)));
                value=StringUtils.replace(value,"[description]",clean(AdminConsole.getAdminText(subitemDescr,pluginName)));
                value=StringUtils.replace(value,"[url]",request.getContextPath() + "/" + clean(subitemURL));
              }
              String css=getCss();
              boolean isCurrent=subnav != null && item.equals(subnav);
              if (isCurrent) {
                css=getCurrentcss();
              }
              buf.append("<li class=\"").append(css).append("\">").append(value).append("</li>");
            }
          }
          buf.append("</ul>");
          try {
            out.write(buf.toString());
          }
 catch (          IOException e) {
            throw new JspException(e);
          }
        }
      }
    }
  }
  return EVAL_PAGE;
}
