{
  boolean initialStream=stanza.startsWith("<stream:stream") || stanza.startsWith("<flash:stream");
  if (!sessionCreated || initialStream) {
    if (!initialStream) {
      if (stanza.startsWith("<policy-file-request/>")) {
        String crossDomainText=FlashCrossDomainServlet.CROSS_DOMAIN_TEXT + XMPPServer.getInstance().getConnectionManager().getClientListenerPort() + FlashCrossDomainServlet.CROSS_DOMAIN_END_TEXT+ '\0';
        connection.deliverRawText(crossDomainText);
        return;
      }
 else {
        return;
      }
    }
    if (!sessionCreated) {
      sessionCreated=true;
      MXParser parser=reader.getXPPParser();
      parser.setInput(new StringReader(stanza));
      createSession(parser);
    }
 else     if (startedTLS) {
      startedTLS=false;
      tlsNegotiated();
    }
 else     if (startedSASL && saslStatus == SASLAuthentication.Status.authenticated) {
      startedSASL=false;
      saslSuccessful();
    }
 else     if (waitingCompressionACK) {
      waitingCompressionACK=false;
      compressionSuccessful();
    }
    return;
  }
  if (stanza.equals("</stream:stream>")) {
    session.close();
    return;
  }
  if (stanza.startsWith("<?xml")) {
    return;
  }
  Element doc=reader.read(new StringReader(stanza)).getRootElement();
  if (doc == null) {
    return;
  }
  String tag=doc.getName();
  if ("starttls".equals(tag)) {
    if (negotiateTLS()) {
      startedTLS=true;
    }
 else {
      connection.close();
      session=null;
    }
  }
 else   if ("auth".equals(tag)) {
    startedSASL=true;
    saslStatus=SASLAuthentication.handle(session,doc);
  }
 else   if (startedSASL && "response".equals(tag) || "abort".equals(tag)) {
    saslStatus=SASLAuthentication.handle(session,doc);
  }
 else   if ("compress".equals(tag)) {
    if (compressClient(doc)) {
      waitingCompressionACK=true;
    }
  }
 else {
    process(doc);
  }
}
