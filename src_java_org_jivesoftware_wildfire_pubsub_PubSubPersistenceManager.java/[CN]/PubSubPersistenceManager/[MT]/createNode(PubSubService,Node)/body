{
  Connection con=null;
  PreparedStatement pstmt=null;
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(ADD_NODE);
    pstmt.setString(1,service.getServiceID());
    pstmt.setString(2,node.getNodeID());
    pstmt.setInt(3,(node.isCollectionNode() ? 0 : 1));
    pstmt.setString(4,StringUtils.dateToMillis(node.getCreationDate()));
    pstmt.setString(5,StringUtils.dateToMillis(node.getModificationDate()));
    pstmt.setString(6,node.getParent() != null ? node.getParent().getNodeID() : null);
    pstmt.setInt(7,(node.isPayloadDelivered() ? 1 : 0));
    if (!node.isCollectionNode()) {
      pstmt.setInt(8,((LeafNode)node).getMaxPayloadSize());
      pstmt.setInt(9,(((LeafNode)node).isPersistPublishedItems() ? 1 : 0));
      pstmt.setInt(10,((LeafNode)node).getMaxPublishedItems());
    }
 else {
      pstmt.setInt(8,0);
      pstmt.setInt(9,0);
      pstmt.setInt(10,0);
    }
    pstmt.setInt(11,(node.isNotifiedOfConfigChanges() ? 1 : 0));
    pstmt.setInt(12,(node.isNotifiedOfDelete() ? 1 : 0));
    pstmt.setInt(13,(node.isNotifiedOfRetract() ? 1 : 0));
    pstmt.setInt(14,(node.isPresenceBasedDelivery() ? 1 : 0));
    pstmt.setInt(15,(node.isSendItemSubscribe() ? 1 : 0));
    pstmt.setString(16,node.getPublisherModel().getName());
    pstmt.setInt(17,(node.isSubscriptionEnabled() ? 1 : 0));
    pstmt.setInt(18,(node.isSubscriptionConfigurationRequired() ? 1 : 0));
    pstmt.setString(19,node.getAccessModel().getName());
    pstmt.setString(20,encodeJIDs(node.getContacts()));
    pstmt.setString(21,encodeGroups(node.getRosterGroupsAllowed()));
    pstmt.setString(22,node.getPayloadType());
    pstmt.setString(23,node.getBodyXSLT());
    pstmt.setString(24,node.getDataformXSLT());
    pstmt.setString(25,node.getCreator().toString());
    pstmt.setString(26,node.getDescription());
    pstmt.setString(27,node.getLanguage());
    pstmt.setString(28,node.getName());
    if (node.getReplyPolicy() != null) {
      pstmt.setString(29,node.getReplyPolicy().name());
    }
 else {
      pstmt.setString(29,null);
    }
    pstmt.setString(30,encodeJIDs(node.getReplyRooms()));
    pstmt.setString(31,encodeJIDs(node.getReplyTo()));
    if (node.isCollectionNode()) {
      pstmt.setString(32,((CollectionNode)node).getAssociationPolicy().name());
      pstmt.setString(33,encodeJIDs(((CollectionNode)node).getAssociationTrusted()));
      pstmt.setInt(34,((CollectionNode)node).getMaxLeafNodes());
    }
 else {
      pstmt.setString(32,null);
      pstmt.setString(33,null);
      pstmt.setInt(34,0);
    }
    pstmt.executeUpdate();
  }
 catch (  SQLException sqle) {
    Log.error(sqle);
  }
 finally {
    try {
      if (pstmt != null) {
        pstmt.close();
      }
    }
 catch (    Exception e) {
      Log.error(e);
    }
    try {
      if (con != null) {
        con.close();
      }
    }
 catch (    Exception e) {
      Log.error(e);
    }
  }
}
