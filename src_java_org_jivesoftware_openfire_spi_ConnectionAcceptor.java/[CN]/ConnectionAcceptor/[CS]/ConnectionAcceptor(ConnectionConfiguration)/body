{
  if (configuration == null) {
    throw new IllegalArgumentException("Argument 'configuation' cannot be null");
  }
  this.configuration=configuration;
  this.name=configuration.getType().toString().toLowerCase() + (configuration.getTlsPolicy() == Connection.TLSPolicy.legacyMode ? "_ssl" : "");
  Log=LoggerFactory.getLogger(ConnectionAcceptor.class.getName() + "[" + name+ "]");
switch (configuration.getType()) {
case SOCKET_S2S:
    connectionHandler=new ServerConnectionHandler(configuration);
  break;
case SOCKET_C2S:
connectionHandler=new ClientConnectionHandler(configuration);
break;
case COMPONENT:
connectionHandler=new ComponentConnectionHandler(configuration);
break;
case CONNECTION_MANAGER:
connectionHandler=new MultiplexerConnectionHandler(configuration);
break;
default :
throw new IllegalStateException("Cannot determine 'connection handler' for connection type : " + configuration.getType());
}
}
