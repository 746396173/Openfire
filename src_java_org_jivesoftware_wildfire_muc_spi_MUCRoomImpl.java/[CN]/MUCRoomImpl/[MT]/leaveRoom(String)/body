{
  MUCRole leaveRole=null;
  lock.writeLock().lock();
  try {
    leaveRole=occupants.remove(nickname.toLowerCase());
    if (leaveRole == null) {
      throw new UserNotFoundException();
    }
    removeOccupantRole(leaveRole);
    if (occupants.isEmpty() && !isPersistent()) {
      endTime=System.currentTimeMillis();
      server.removeChatRoom(name);
    }
    if (occupants.isEmpty()) {
      setEmptyDate(new Date());
    }
  }
  finally {
    lock.writeLock().unlock();
  }
  try {
    Presence presence=leaveRole.getPresence().createCopy();
    presence.setType(Presence.Type.unavailable);
    presence.setStatus(null);
    Element childElement=presence.getChildElement("x","http://jabber.org/protocol/muc#user");
    if (childElement == null) {
      childElement=presence.addChildElement("x","http://jabber.org/protocol/muc#user");
    }
    Element item=childElement.element("item");
    if (item == null) {
      item=childElement.addElement("item");
    }
    item.addAttribute("role","none");
    leaveRole.send(presence);
    broadcastPresence(presence);
  }
 catch (  Exception e) {
    Log.error(e);
  }
}
