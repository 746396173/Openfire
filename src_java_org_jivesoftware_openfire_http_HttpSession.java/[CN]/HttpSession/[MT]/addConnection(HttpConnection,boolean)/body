{
  if (connection == null) {
    throw new IllegalArgumentException("Connection cannot be null.");
  }
  if (isPoll) {
    checkPollingInterval();
  }
  if (isSecure && !connection.isSecure()) {
    throw new HttpBindException("Session was started from secure connection, all " + "connections on this session must be secured.",BoshBindingError.badRequest);
  }
  sslCertificates=connection.getPeerCertificates();
  connection.setSession(this);
  if (isPollingSession() || (pendingElements.size() > 0 && connection.getRequestId() == lastRequestID + 1)) {
    deliver(connection,pendingElements);
    lastRequestID=connection.getRequestId();
    pendingElements.clear();
    connectionQueue.add(connection);
    Collections.sort(connectionQueue,connectionComparator);
  }
 else {
    connectionQueue.add(connection);
    Collections.sort(connectionQueue,connectionComparator);
    int connectionsToClose;
    if (connectionQueue.get(connectionQueue.size() - 1) != connection) {
      connectionsToClose=connectionQueue.size();
    }
 else {
      connectionsToClose=getOpenConnectionCount() - hold;
    }
    int closed=0;
    for (int i=0; i < connectionQueue.size() && closed < connectionsToClose; i++) {
      HttpConnection toClose=connectionQueue.get(i);
      if (!toClose.isClosed() && toClose.getRequestId() == lastRequestID + 1) {
        if (toClose == connection) {
          deliver("");
        }
 else {
          toClose.close();
        }
        lastRequestID=toClose.getRequestId();
        closed++;
      }
    }
  }
  fireConnectionOpened(connection);
}
