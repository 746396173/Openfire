{
  Collection<Deliverable> deliverable=Arrays.asList(stanza);
  boolean delivered=false;
  int pendingConnections=0;
synchronized (connectionQueue) {
    for (    HttpConnection connection : connectionQueue) {
      if (connection.isClosed()) {
        continue;
      }
      pendingConnections++;
      try {
        if (connection.getRequestId() == lastRequestID + 1) {
          lastRequestID=connection.getRequestId();
          deliver(connection,deliverable);
          delivered=true;
          break;
        }
      }
 catch (      HttpConnectionClosedException e) {
        Log.warn("Iterating over a connection that was closed. Openfire will recover from this problem, but it should not occur in the first place.");
      }
catch (      IOException e) {
        Log.warn("An unexpected exception occurred while iterating over connections. Openfire will attempt to recover by ignoring this connection.",e);
      }
    }
  }
  if (!delivered) {
    if (pendingConnections > 0) {
      Log.warn("Unable to deliver a stanza (it is being queued instead), although there are available connections! RID / Connection processing is out of sync!");
    }
    pendingElements.add(stanza);
  }
}
