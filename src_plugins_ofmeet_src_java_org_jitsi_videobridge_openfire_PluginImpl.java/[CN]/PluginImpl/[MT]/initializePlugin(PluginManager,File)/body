{
  Log.info("PluginImpl initializePlugin " + pluginDirectory);
  String enableRecording=JiveGlobals.getProperty("org.jitsi.videobridge.ofmeet.media.record","false");
  String recordingPath=JiveGlobals.getProperty("org.jitsi.videobridge.ofmeet.recording.path",pluginDirectory.getAbsolutePath() + File.separator + "recordings");
  String recordingSecret=JiveGlobals.getProperty("org.jitsi.videobridge.ofmeet.recording.secret","secret");
  String ourIpAddress="127.0.0.1";
  String ourHostname=XMPPServer.getInstance().getServerInfo().getHostname();
  try {
    ourIpAddress=InetAddress.getByName(ourHostname).getHostAddress();
  }
 catch (  Exception e) {
  }
  String localAddress=JiveGlobals.getProperty(NAT_HARVESTER_LOCAL_ADDRESS,ourIpAddress);
  String publicAddress=JiveGlobals.getProperty(NAT_HARVESTER_PUBLIC_ADDRESS,ourIpAddress);
  System.setProperty("net.java.sip.communicator.SC_HOME_DIR_LOCATION",pluginDirectory.getPath());
  System.setProperty("net.java.sip.communicator.SC_HOME_DIR_NAME",".");
  System.setProperty("org.jitsi.impl.neomedia.transform.srtp.SRTPCryptoContext.checkReplay",JiveGlobals.getProperty(CHECKREPLAY_PROPERTY_NAME,"false"));
  System.setProperty("org.jitsi.videobridge.ENABLE_MEDIA_RECORDING",enableRecording);
  System.setProperty("org.jitsi.videobridge.MEDIA_RECORDING_PATH",recordingPath);
  System.setProperty("org.jitsi.videobridge.MEDIA_RECORDING_TOKEN",recordingSecret);
  System.setProperty("org.jitsi.videobridge.NAT_HARVESTER_LOCAL_ADDRESS",localAddress);
  System.setProperty("org.jitsi.videobridge.NAT_HARVESTER_PUBLIC_ADDRESS",publicAddress);
  PropertyEventDispatcher.addListener(this);
  String maxVal=JiveGlobals.getProperty(MAX_PORT_NUMBER_PROPERTY_NAME);
  String minVal=JiveGlobals.getProperty(MIN_PORT_NUMBER_PROPERTY_NAME);
  if (maxVal != null)   setIntProperty(DefaultStreamConnector.MAX_PORT_NUMBER_PROPERTY_NAME,maxVal);
  if (minVal != null)   setIntProperty(DefaultStreamConnector.MIN_PORT_NUMBER_PROPERTY_NAME,minVal);
  checkNatives(pluginDirectory);
  ComponentManager componentManager=ComponentManagerFactory.getComponentManager();
  String subdomain="ofmeet-jitsi-videobridge";
  PluginImpl.component=new ComponentImpl();
  boolean added=false;
  try {
    componentManager.addComponent(subdomain,PluginImpl.component);
    added=true;
  }
 catch (  ComponentException ce) {
    ce.printStackTrace(System.err);
  }
  if (added) {
    this.componentManager=componentManager;
    this.subdomain=subdomain;
  }
 else {
    this.componentManager=null;
    this.subdomain=null;
  }
}
