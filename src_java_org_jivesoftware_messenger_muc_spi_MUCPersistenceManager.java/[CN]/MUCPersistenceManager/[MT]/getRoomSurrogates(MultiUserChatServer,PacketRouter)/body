{
  Connection con=null;
  PreparedStatement pstmt=null;
  List<MUCPersistentRoomSurrogate> answer=new ArrayList<MUCPersistentRoomSurrogate>();
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(LOAD_ROOM_SURROGATES);
    ResultSet rs=pstmt.executeQuery();
    MUCPersistentRoomSurrogate room=null;
    while (rs.next()) {
      room=new MUCPersistentRoomSurrogate(chatserver,rs.getString(2),packetRouter);
      room.setID(rs.getLong(1));
      room.setDescription(rs.getString(3));
      room.setCanOccupantsChangeSubject(rs.getInt(4) == 1 ? true : false);
      room.setMaxUsers(rs.getInt(5));
      room.setModerated(rs.getInt(6) == 1 ? true : false);
      room.setInvitationRequiredToEnter(rs.getInt(7) == 1 ? true : false);
      room.setCanOccupantsInvite(rs.getInt(8) == 1 ? true : false);
      room.setPasswordProtected(rs.getInt(9) == 1 ? true : false);
      room.setPassword(rs.getString(10));
      room.setCanAnyoneDiscoverJID(rs.getInt(11) == 1 ? true : false);
      room.setLogEnabled(rs.getInt(12) == 1 ? true : false);
      room.setSubject(rs.getString(13));
      List rolesToBroadcast=new ArrayList();
      String roles=Integer.toBinaryString(rs.getInt(14));
      if (roles.charAt(0) == '1') {
        rolesToBroadcast.add("moderator");
      }
      if (roles.length() > 1 && roles.charAt(1) == '1') {
        rolesToBroadcast.add("participant");
      }
      if (roles.length() > 2 && roles.charAt(2) == '1') {
        rolesToBroadcast.add("visitor");
      }
      room.setRolesToBroadcastPresence(rolesToBroadcast);
      answer.add(room);
    }
    rs.close();
    pstmt.close();
  }
 catch (  SQLException sqle) {
    Log.error(sqle);
  }
 finally {
    try {
      if (pstmt != null)       pstmt.close();
    }
 catch (    Exception e) {
      Log.error(e);
    }
    try {
      if (con != null)       con.close();
    }
 catch (    Exception e) {
      Log.error(e);
    }
  }
  return answer;
}
