{
  if (session instanceof IncomingServerSession) {
    String hostname=doc.getTextTrim();
    if (hostname == null || hostname.length() == 0) {
      sendChallenge(session,new byte[0]);
      return Status.needResponse;
    }
    hostname=new String(StringUtils.decodeBase64(hostname),CHARSET);
    boolean verify=JiveGlobals.getBooleanProperty("xmpp.server.certificate.verify",true);
    if (!verify) {
      authenticationSuccessful(session,hostname,null);
      return Status.authenticated;
    }
    SocketConnection connection=(SocketConnection)session.getConnection();
    try {
      for (      Certificate certificate : connection.getSSLSession().getPeerCertificates()) {
        if (CertificateManager.getPeerIdentities((X509Certificate)certificate).contains(hostname)) {
          authenticationSuccessful(session,hostname,null);
          return Status.authenticated;
        }
      }
    }
 catch (    SSLPeerUnverifiedException e) {
      Log.warn("Error retrieving client certificates of: " + session,e);
    }
  }
 else {
    Log.debug("SASLAuthentication: EXTERNAL authentication via SSL certs for c2s connection");
    String username=doc.getTextTrim();
    String principal="";
    ArrayList<String> principals=new ArrayList<String>();
    SocketConnection connection=(SocketConnection)session.getConnection();
    try {
      for (      Certificate certificate : connection.getSSLSession().getPeerCertificates()) {
        principals.addAll(CertificateManager.getPeerIdentities((X509Certificate)certificate));
      }
    }
 catch (    SSLPeerUnverifiedException e) {
      Log.warn("Error retrieving client certificates of: " + session,e);
    }
    if (username == null || username.length() == 0) {
      principal=principals.get(0);
      for (      String princ : principals) {
        String u=AuthorizationManager.map(princ);
        if (!u.equals(princ)) {
          username=u;
          principal=princ;
          break;
        }
      }
      Log.debug("SASLAuthentication: no username requested, using " + username);
    }
    if (AuthorizationManager.authorize(username,principal)) {
      Log.debug("SASLAuthentication: " + principal + " authorized to "+ username);
      return Status.authenticated;
    }
  }
  authenticationFailed(session);
  return Status.failed;
}
