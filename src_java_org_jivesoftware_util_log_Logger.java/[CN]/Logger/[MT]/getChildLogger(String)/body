{
  final int end=subCategory.indexOf(CATEGORY_SEPARATOR);
  String nextCategory=null;
  String remainder=null;
  if (-1 == end)   nextCategory=subCategory;
 else {
    if (end == 0) {
      throw new IllegalArgumentException("Logger categories MUST not have empty elements");
    }
    nextCategory=subCategory.substring(0,end);
    remainder=subCategory.substring(end + 1);
  }
  String category=null;
  if (m_category.equals(""))   category=nextCategory;
 else {
    category=m_category + CATEGORY_SEPARATOR + nextCategory;
  }
  if (null != m_children) {
    for (int i=0; i < m_children.length; i++) {
      if (m_children[i].m_category.equals(category)) {
        if (null == remainder)         return m_children[i];
 else         return m_children[i].getChildLogger(remainder);
      }
    }
  }
  final Logger child=new Logger(m_errorHandler,category,null,this);
  if (null == m_children) {
    m_children=new Logger[]{child};
  }
 else {
    final Logger[] children=new Logger[m_children.length + 1];
    System.arraycopy(m_children,0,children,0,m_children.length);
    children[m_children.length]=child;
    m_children=children;
  }
  if (null == remainder)   return child;
 else   return child.getChildLogger(remainder);
}
