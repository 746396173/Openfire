{
  List<ChatInformation> chats=new ArrayList<ChatInformation>();
  Connection con=null;
  PreparedStatement pstmt=null;
  ResultSet result=null;
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(CHATS_SINCE_DATE);
    pstmt.setLong(1,workgroup.getID());
    pstmt.setString(2,StringUtils.dateToMillis(since));
    result=pstmt.executeQuery();
    while (result.next()) {
      String sessionID=result.getString(1);
      String transcript=result.getString(2);
      String startTime=result.getString(3);
      ChatNotes chatNotes=new ChatNotes();
      String notes=chatNotes.getNotes(sessionID);
      ChatInformation chatInfo=new ChatInformation(sessionID,transcript,startTime,notes);
      if (chatInfo.getTranscript() != null) {
        chats.add(chatInfo);
      }
    }
    result.close();
    for (    ChatInformation chatInfo : chats) {
      pstmt.close();
      pstmt=con.prepareStatement(AGENTS_IN_SESSION);
      pstmt.setString(1,chatInfo.getSessionID());
      result=pstmt.executeQuery();
      while (result.next()) {
        chatInfo.getAgentJIDs().add(result.getString(1));
      }
      result.close();
    }
  }
 catch (  Exception ex) {
    Log.error(ex);
    chats=new ArrayList<ChatInformation>();
  }
 finally {
    try {
      if (pstmt != null) {
        pstmt.close();
      }
    }
 catch (    Exception e) {
      Log.error(e);
    }
    try {
      if (result != null) {
        result.close();
      }
    }
 catch (    SQLException e) {
      Log.error(e);
    }
    try {
      if (con != null) {
        con.close();
      }
    }
 catch (    Exception e) {
      Log.error(e);
    }
    try {
      if (result != null) {
        result.close();
      }
    }
 catch (    Exception e) {
      Log.error(e);
    }
  }
  return chats;
}
