{
  if (p instanceof IQ) {
    IQ packet=(IQ)p;
    Element childElement=(packet).getChildElement();
    String namespace=null;
    if (childElement != null) {
      namespace=childElement.getNamespaceURI();
    }
    if ("jabber:iq:search".equals(namespace)) {
      try {
        IQ replyPacket=handleIQ(packet);
        componentManager.sendPacket(this,replyPacket);
      }
 catch (      ComponentException e) {
        componentManager.getLog().error(e);
      }
    }
 else     if ("http://jabber.org/protocol/disco#info".equals(namespace)) {
      try {
        IQ replyPacket=IQ.createResultIQ(packet);
        Element responseElement=replyPacket.setChildElement("query","http://jabber.org/protocol/disco#info");
        responseElement.addElement("identity").addAttribute("category","search").addAttribute("type","text").addAttribute("name","User Search");
        responseElement.addElement("feature").addAttribute("var","jabber:iq:search");
        componentManager.sendPacket(this,replyPacket);
      }
 catch (      ComponentException e) {
        componentManager.getLog().error(e);
      }
    }
 else     if ("http://jabber.org/protocol/disco#items".equals(namespace)) {
      try {
        IQ replyPacket=IQ.createResultIQ(packet);
        replyPacket.setChildElement("query","http://jabber.org/protocol/disco#items");
        componentManager.sendPacket(this,replyPacket);
      }
 catch (      ComponentException e) {
        componentManager.getLog().error(e);
      }
    }
  }
}
