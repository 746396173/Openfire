{
  final IQ result=IQ.createResultIQ(session.getRegistrationPacket());
  if (!session.getFailureStatus().equals(ConnectionFailureReason.NO_ISSUE)) {
    if (session.getFailureStatus().equals(ConnectionFailureReason.USERNAME_OR_PASSWORD_INCORRECT)) {
      result.setError(Condition.not_authorized);
    }
 else     if (session.getFailureStatus().equals(ConnectionFailureReason.CAN_NOT_CONNECT)) {
      result.setError(Condition.service_unavailable);
    }
 else     if (session.getFailureStatus().equals(ConnectionFailureReason.LOCKED_OUT)) {
      result.setError(Condition.forbidden);
    }
 else {
      result.setError(Condition.undefined_condition);
    }
    result.setType(IQ.Type.error);
  }
  parent.sendPacket(result);
  session.setRegistrationPacket(null);
  final Presence p=new Presence(Presence.Type.probe);
  p.setTo(session.getJID());
  p.setFrom(parent.getJID());
  parent.sendPacket(p);
}
