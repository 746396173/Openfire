{
  final JID from=packet.getFrom();
  final IQ result=IQ.createResultIQ(packet);
  String curUsername=null;
  String curPassword=null;
  String curNickname=null;
  Boolean registered=false;
  final Collection<Registration> registrations=RegistrationManager.getInstance().getRegistrations(from,parent.transportType);
  if (registrations.iterator().hasNext()) {
    Registration registration=registrations.iterator().next();
    curUsername=registration.getUsername();
    curPassword=registration.getPassword();
    curNickname=registration.getNickname();
    registered=true;
  }
  if (!registered && !parent.permissionManager.hasAccess(from)) {
    throw new UnauthorizedException(LocaleUtils.getLocalizedString("gateway.base.registrationdeniedbyacls","kraken"));
  }
  final Element response=DocumentHelper.createElement(QName.get("query",NameSpace.IQ_REGISTER));
  final DataForm form=new DataForm(DataForm.Type.form);
  form.addInstruction(parent.getTerminologyRegistration());
  final FormField usernameField=form.addField();
  usernameField.setLabel(parent.getTerminologyUsername());
  usernameField.setVariable("username");
  usernameField.setType(FormField.Type.text_single);
  if (curUsername != null) {
    usernameField.addValue(curUsername);
  }
  final FormField passwordField=form.addField();
  passwordField.setLabel(parent.getTerminologyPassword());
  passwordField.setVariable("password");
  passwordField.setType(FormField.Type.text_private);
  if (curPassword != null) {
    passwordField.addValue(curPassword);
  }
  final String nicknameTerm=parent.getTerminologyNickname();
  if (nicknameTerm != null) {
    FormField nicknameField=form.addField();
    nicknameField.setLabel(nicknameTerm);
    nicknameField.setVariable("nick");
    nicknameField.setType(FormField.Type.text_single);
    if (curNickname != null) {
      nicknameField.addValue(curNickname);
    }
  }
  response.add(form.getElement());
  response.addElement("instructions").addText(parent.getTerminologyRegistration());
  if (registered) {
    response.addElement("registered");
    response.addElement("username").addText(curUsername);
    if (curPassword == null) {
      response.addElement("password");
    }
 else {
      response.addElement("password").addText(curPassword);
    }
    if (nicknameTerm != null) {
      if (curNickname == null) {
        response.addElement("nick");
      }
 else {
        response.addElement("nick").addText(curNickname);
      }
    }
  }
 else {
    response.addElement("username");
    response.addElement("password");
    if (nicknameTerm != null) {
      response.addElement("nick");
    }
  }
  response.addElement("x").addNamespace("",NameSpace.IQ_GATEWAY_REGISTER);
  result.setChildElement(response);
  parent.sendPacket(result);
}
