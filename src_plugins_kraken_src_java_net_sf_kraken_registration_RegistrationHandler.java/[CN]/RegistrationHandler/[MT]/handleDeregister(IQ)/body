{
  final IQ result=IQ.createResultIQ(packet);
  if (packet.getChildElement().elements().size() != 1) {
    Log.debug("Cannot process this stanza - exactly one" + " childelement of <remove> expected:" + packet.toXML());
    final IQ error=IQ.createResultIQ(packet);
    error.setError(Condition.bad_request);
    parent.sendPacket(error);
    return;
  }
  final JID from=packet.getFrom();
  final JID to=packet.getTo();
  final Presence unavailable=new Presence(Presence.Type.unavailable);
  unavailable.setTo(from);
  unavailable.setFrom(to);
  this.parent.sendPacket(unavailable);
  try {
    deleteRegistration(from);
  }
 catch (  UserNotFoundException e) {
    Log.debug("Error cleaning up contact list of: " + from);
    result.setError(Condition.registration_required);
  }
  parent.sendPacket(result);
}
