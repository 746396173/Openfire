{
  Collection<JID> admins=new ArrayList<JID>();
  String usernames=JiveGlobals.getXMLProperty("admin.authorizedUsernames");
  if (usernames == null) {
    usernames=JiveGlobals.getXMLProperty("adminConsole.authorizedUsernames");
  }
  usernames=(usernames == null || usernames.trim().length() == 0) ? "admin" : usernames;
  StringTokenizer tokenizer=new StringTokenizer(usernames,",");
  while (tokenizer.hasMoreTokens()) {
    String username=tokenizer.nextToken();
    try {
      admins.add(createJID(username.toLowerCase().trim(),null));
    }
 catch (    IllegalArgumentException e) {
      Log.warn("Invalid username found in authorizedUsernames at openfire.xml: " + username,e);
    }
  }
  String jids=JiveGlobals.getXMLProperty("admin.authorizedJIDs");
  jids=(jids == null || jids.trim().length() == 0) ? "" : jids;
  tokenizer=new StringTokenizer(jids,",");
  while (tokenizer.hasMoreTokens()) {
    String jid=tokenizer.nextToken().toLowerCase().trim();
    try {
      admins.add(new JID(jid));
    }
 catch (    IllegalArgumentException e) {
      Log.warn("Invalid JID found in authorizedJIDs at openfire.xml: " + jid,e);
    }
  }
  return admins;
}
