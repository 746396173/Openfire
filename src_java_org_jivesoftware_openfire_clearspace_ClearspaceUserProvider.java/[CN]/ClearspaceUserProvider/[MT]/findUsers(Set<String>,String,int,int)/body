{
  Element paramsE=DocumentHelper.createDocument().addElement("searchBounded");
  Element queryE=paramsE.addElement("query");
  queryE.addElement("keywords").addText(query);
  queryE.addElement("searchUsername").addText("true");
  queryE.addElement("searchName").addText("true");
  queryE.addElement("searchEmail").addText("true");
  queryE.addElement("searchProfile").addText("false");
  paramsE.addElement("startIndex").addText(String.valueOf(startIndex));
  paramsE.addElement("numResults").addText(String.valueOf(numResults));
  List<String> usernames=new ArrayList<>();
  try {
    String path=SEARCH_URL_PREFIX + "searchProfile";
    Element element=ClearspaceManager.getInstance().executeRequest(POST,path,paramsE.asXML());
    List<Node> userNodes=(List<Node>)element.selectNodes("return");
    for (    Node userNode : userNodes) {
      String username=userNode.selectSingleNode("username").getText();
      username=JID.escapeNode(username);
      username=URLEncoder.encode(username,"UTF-8");
      usernames.add(username);
    }
  }
 catch (  Exception e) {
    Log.error(e.getMessage(),e);
  }
  return new UserCollection(usernames.toArray(new String[usernames.size()]));
}
