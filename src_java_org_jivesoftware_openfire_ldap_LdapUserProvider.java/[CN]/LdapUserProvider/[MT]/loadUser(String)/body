{
  if (username.contains("@")) {
    if (!XMPPServer.getInstance().isLocal(new JID(username))) {
      throw new UserNotFoundException("Cannot load user of remote server: " + username);
    }
    username=username.substring(0,username.lastIndexOf("@"));
  }
  username=JID.unescapeNode(username);
  DirContext ctx=null;
  try {
    String userDN=manager.findUserDN(username);
    String[] attributes=new String[]{manager.getUsernameField(),manager.getNameField(),manager.getEmailField(),"createTimestamp","modifyTimestamp"};
    ctx=manager.getContext(manager.getUsersBaseDN(username));
    Attributes attrs=ctx.getAttributes(userDN,attributes);
    String name=null;
    Attribute nameField=attrs.get(manager.getNameField());
    if (nameField != null) {
      name=(String)nameField.get();
    }
    String email=null;
    Attribute emailField=attrs.get(manager.getEmailField());
    if (emailField != null) {
      email=(String)emailField.get();
    }
    Date creationDate=new Date();
    Attribute creationDateField=attrs.get("createTimestamp");
    if (creationDateField != null && "".equals(((String)creationDateField.get()).trim())) {
      creationDate=parseLDAPDate((String)creationDateField.get());
    }
    Date modificationDate=new Date();
    Attribute modificationDateField=attrs.get("modifyTimestamp");
    if (modificationDateField != null && "".equals(((String)modificationDateField.get()).trim())) {
      modificationDate=parseLDAPDate((String)modificationDateField.get());
    }
    username=JID.escapeNode(username);
    return new User(username,name,email,creationDate,modificationDate);
  }
 catch (  Exception e) {
    throw new UserNotFoundException(e);
  }
 finally {
    try {
      if (ctx != null) {
        ctx.close();
      }
    }
 catch (    Exception ignored) {
    }
  }
}
