{
  if (username.contains("@")) {
    if (!XMPPServer.getInstance().isLocal(new JID(username))) {
      throw new UserNotFoundException("Cannot load user of remote server: " + username);
    }
    username=username.substring(0,username.lastIndexOf("@"));
  }
  username=JID.unescapeNode(username);
  DirContext ctx=null;
  try {
    String userDN=manager.findUserDN(username);
    String[] attributes=new String[]{manager.getUsernameField(),manager.getNameField(),manager.getEmailField(),"createTimestamp","modifyTimestamp"};
    ctx=manager.getContext(manager.getUsersBaseDN(username));
    Attributes attrs=ctx.getAttributes(userDN,attributes);
    String name=null;
    Attribute nameField=attrs.get(manager.getNameField());
    if (nameField != null) {
      name=(String)nameField.get();
    }
    String email=null;
    Attribute emailField=attrs.get(manager.getEmailField());
    if (emailField != null) {
      email=(String)emailField.get();
    }
    Date creationDate=new Date();
    Attribute creationDateField=attrs.get("createTimestamp");
    if (creationDateField != null && "".equals(((String)creationDateField.get()).trim())) {
      creationDate=parseLDAPDate((String)creationDateField.get());
    }
    Date modificationDate=new Date();
    Attribute modificationDateField=attrs.get("modifyTimestamp");
    if (modificationDateField != null && "".equals(((String)modificationDateField.get()).trim())) {
      modificationDate=parseLDAPDate((String)modificationDateField.get());
    }
    username=JID.escapeNode(username);
    Attribute authPassword=attrs.get("authPassword");
    User user=new User(username,name,email,creationDate,modificationDate);
    if (authPassword != null) {
      NamingEnumeration values=authPassword.getAll();
      while (values.hasMore()) {
        Attribute authPasswordValue=(Attribute)values.next();
        String[] parts=((String)authPasswordValue.get()).split("$");
        String[] authInfo=parts[1].split(":");
        String[] authValue=parts[2].split(":");
        String scheme=parts[0].trim();
        if ("SCRAM-SHA-1".equals(scheme)) {
          int iterations=Integer.valueOf(authInfo[0].trim());
          String salt=authInfo[1].trim();
          String storedKey=authValue[0].trim();
          String serverKey=authValue[1].trim();
          user.setSalt(salt);
          user.setStoredKey(storedKey);
          user.setServerKey(serverKey);
          user.setIterations(iterations);
          break;
        }
      }
    }
    return user;
  }
 catch (  Exception e) {
    throw new UserNotFoundException(e);
  }
 finally {
    try {
      if (ctx != null) {
        ctx.close();
      }
    }
 catch (    Exception ignored) {
    }
  }
}
