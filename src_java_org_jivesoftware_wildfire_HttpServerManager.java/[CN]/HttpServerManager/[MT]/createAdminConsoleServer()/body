{
  int port=JiveGlobals.getXMLProperty(ADMIN_CONSOLE_PORT,ADMIN_CONSOLE_PORT_DEFAULT);
  int securePort=JiveGlobals.getXMLProperty(ADMIN_CONOSLE_SECURE_PORT,ADMIN_CONSOLE_SECURE_PORT_DEFAULT);
  boolean loadConnectors=true;
  if (httpBindServer != null) {
    if (port == this.port && securePort == this.securePort) {
      adminServer=httpBindServer;
      loadConnectors=false;
    }
 else     if (checkPorts(new int[]{this.port,this.securePort},new int[]{port,securePort})) {
      Log.warn("HTTP bind ports must be either the same or distinct from admin console" + " ports.");
      httpBindServer=null;
      httpBindServer=new Server();
      adminServer=httpBindServer;
    }
 else {
      adminServer=new Server();
    }
  }
 else {
    adminServer=new Server();
  }
  if (loadConnectors) {
    Collection<Connector> connectors=createAdminConsoleConnectors(port,securePort);
    if (connectors.size() == 0) {
      adminServer=null;
      String warning=LocaleUtils.getLocalizedString("admin.console.warning");
      Log.info(warning);
      System.out.println(warning);
      return;
    }
    for (    Connector connector : connectors) {
      adminServer.addConnector(connector);
    }
  }
  String listening=LocaleUtils.getLocalizedString("admin.console.listening");
  boolean isPlainStarted=false;
  boolean isSecureStarted=false;
  for (  Connector connector : adminServer.getConnectors()) {
    if (connector.getPort() == port) {
      isPlainStarted=true;
    }
 else     if (connector.getPort() == securePort) {
      isSecureStarted=true;
    }
  }
  if (isPlainStarted && isSecureStarted) {
    String msg=listening + ":" + System.getProperty("line.separator")+ "  http://"+ XMPPServer.getInstance().getServerInfo().getName()+ ":"+ port+ System.getProperty("line.separator")+ "  https://"+ XMPPServer.getInstance().getServerInfo().getName()+ ":"+ securePort;
    Log.info(msg);
    System.out.println(msg);
  }
 else   if (isSecureStarted) {
    Log.info(listening + " https://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ securePort);
    System.out.println(listening + " https://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ securePort);
  }
 else   if (isPlainStarted) {
    Log.info(listening + " http://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ port);
    System.out.println(listening + " http://" + XMPPServer.getInstance().getServerInfo().getName()+ ":"+ port);
  }
}
