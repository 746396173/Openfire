{
  if (!setupMode) {
    return;
  }
  if ("true".equals(JiveGlobals.getXMLProperty("setup"))) {
    name=JiveGlobals.getProperty("xmpp.domain").toLowerCase();
    xmppServerInfo.setXMPPDomain(name);
    for (    String propName : (List<String>)JiveGlobals.getXMLPropertyNames()) {
      if (JiveGlobals.getProperty(propName) == null) {
        JiveGlobals.setProperty(propName,JiveGlobals.getXMLProperty(propName));
      }
    }
    try {
      KeyStore ksKeys=SSLConfig.getKeyStore();
      boolean dsaFound=CertificateManager.isDSACertificate(ksKeys,name);
      boolean rsaFound=CertificateManager.isRSACertificate(ksKeys,name);
      if (!dsaFound) {
        CertificateManager.createDSACert(ksKeys,SSLConfig.getKeyPassword(),name + "_dsa","cn=" + name,"cn=" + name,"*." + name);
      }
      if (!rsaFound) {
        CertificateManager.createRSACert(ksKeys,SSLConfig.getKeyPassword(),name + "_rsa","cn=" + name,"cn=" + name,"*." + name);
      }
      if (!dsaFound || !rsaFound) {
        SSLConfig.saveStores();
      }
    }
 catch (    Exception e) {
      logger.error("Error generating self-signed certificates",e);
    }
    AdminManager.getInstance().getAdminAccounts();
    Thread finishSetup=new Thread(){
      @Override public void run(){
        try {
          if (isStandAlone()) {
            Thread.sleep(1000);
            ((AdminConsolePlugin)pluginManager.getPlugin("admin")).restart();
          }
          verifyDataSource();
          loadModules();
          initModules();
          startModules();
        }
 catch (        Exception e) {
          e.printStackTrace();
          logger.error(e.getMessage(),e);
          shutdownServer();
        }
      }
    }
;
    finishSetup.setContextClassLoader(loader);
    finishSetup.start();
    setupMode=false;
  }
}
