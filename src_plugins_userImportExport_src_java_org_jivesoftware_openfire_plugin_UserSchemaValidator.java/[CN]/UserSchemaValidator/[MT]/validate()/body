{
  try {
    SAXParserFactory saxFactory=SAXParserFactory.newInstance();
    saxFactory.setNamespaceAware(true);
    DocumentDeclaration docDeclaration=GrammarLoader.loadVGM(schema,new IgnoreController(){
      @Override public void error(      Locator[] locations,      String message,      Exception exception){
        Log.error("ERROR: " + message);
      }
      public void error(      Locator[] locations,      String message){
        Log.error("WARNING: " + message);
      }
    }
,saxFactory);
    ValidatorErrorHandler validatorErrorHandler=new ValidatorErrorHandler();
    Verifier verifier=new Verifier(docDeclaration,validatorErrorHandler);
    SAXWriter writer=new SAXWriter((ContentHandler)verifier);
    writer.setErrorHandler(validatorErrorHandler);
    writer.write(doc);
    if (verifier.isValid()) {
      return true;
    }
 else {
      Log.error(doc.getName() + " is invalid.");
      return false;
    }
  }
 catch (  Exception e) {
    Log.error(e.getMessage(),e);
    return false;
  }
}
