{
  if (condition == null) {
    throw new NullPointerException();
  }
  condition=condition.toLowerCase();
  if (bad_format.toXMPP().equals(condition)) {
    return bad_format;
  }
 else   if (bad_namespace_prefix.toXMPP().equals(condition)) {
    return bad_namespace_prefix;
  }
 else   if (conflict.toXMPP().equals(condition)) {
    return conflict;
  }
 else   if (connection_timeout.toXMPP().equals(condition)) {
    return connection_timeout;
  }
 else   if (host_gone.toXMPP().equals(condition)) {
    return host_gone;
  }
 else   if (host_unknown.toXMPP().equals(condition)) {
    return host_unknown;
  }
 else   if (improper_addressing.toXMPP().equals(condition)) {
    return improper_addressing;
  }
 else   if (internal_server_error.toXMPP().equals(condition)) {
    return internal_server_error;
  }
 else   if (invalid_from.toXMPP().equals(condition)) {
    return invalid_from;
  }
 else   if (invalid_id.toXMPP().equals(condition)) {
    return invalid_id;
  }
 else   if (invalid_namespace.toXMPP().equals(condition)) {
    return invalid_namespace;
  }
 else   if (invalid_xml.toXMPP().equals(condition)) {
    return invalid_xml;
  }
 else   if (not_authorized.toXMPP().equals(condition)) {
    return not_authorized;
  }
 else   if (policy_violation.toXMPP().equals(condition)) {
    return policy_violation;
  }
 else   if (remote_connection_failed.toXMPP().equals(condition)) {
    return remote_connection_failed;
  }
 else   if (resource_constraint.toXMPP().equals(condition)) {
    return resource_constraint;
  }
 else   if (restricted_xml.toXMPP().equals(condition)) {
    return restricted_xml;
  }
 else   if (see_other_host.toXMPP().equals(condition)) {
    return see_other_host;
  }
 else   if (system_shutdown.toXMPP().equals(condition)) {
    return system_shutdown;
  }
 else   if (undefined_condition.toXMPP().equals(condition)) {
    return undefined_condition;
  }
 else   if (unsupported_encoding.toXMPP().equals(condition)) {
    return unsupported_encoding;
  }
 else   if (unsupported_stanza_type.toXMPP().equals(condition)) {
    return unsupported_stanza_type;
  }
 else   if (unsupported_version.toXMPP().equals(condition)) {
    return unsupported_version;
  }
 else   if (xml_not_well_formed.toXMPP().equals(condition)) {
    return xml_not_well_formed;
  }
 else {
    throw new IllegalArgumentException("Condition invalid:" + condition);
  }
}
