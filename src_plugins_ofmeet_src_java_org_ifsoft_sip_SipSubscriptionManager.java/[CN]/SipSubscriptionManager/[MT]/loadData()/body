{
  long now=System.currentTimeMillis();
  String dirName=spoolPath + "/subscriptions/";
  File dirFile=new File(dirName);
  String[] children=dirFile.list();
  for (  String child : children) {
    SipSubscription sub=new SipSubscription(dirName + child);
    if (sub != null) {
      if (now < sub.expires) {
        String user=((SipURI)sub.localParty.getURI()).getUser();
        Log.info("adding subscriber for " + user);
synchronized (subscriptions) {
          if (subscriptions.get(user) == null) {
            subscriptions.put(user,new LinkedList<SipSubscription>());
          }
          subscriptions.get(user).add(sub);
          long nextCall=sub.expires - now - (1800 * 1000);
          if (nextCall < 0) {
            nextCall=0;
          }
          sub.schedule(nextCall);
        }
      }
 else {
        Log.error("Skipping already expired subscription");
        try {
          deleteSubscription(sub);
        }
 catch (        Exception e) {
          Log.error("Error Deleting subscription");
        }
      }
    }
  }
  dirName=spoolPath + "/watchers/";
  dirFile=new File(dirName);
  children=dirFile.list();
  for (  String child : children) {
    SipSubscription sub=new SipSubscription(dirName + child);
    if (now < sub.expires) {
      String user=((SipURI)sub.localParty.getURI()).getUser();
      Log.info("adding watcher for " + user);
synchronized (watchers) {
        if (watchers.get(user) == null) {
          watchers.put(user,new LinkedList<SipSubscription>());
        }
        watchers.get(user).add(sub);
      }
    }
 else {
      Log.error("Skipping already expired watcher");
      deleteWatcher(sub);
    }
  }
}
