{
  JID recipientJID=packet.getTo();
  if (recipientJID != null && recipientJID.getNode() == null && recipientJID.getResource() == null && serverName.equals(recipientJID.getDomain())) {
    Element childElement=packet.getChildElement();
    if (childElement != null && childElement.element("addresses") != null) {
      multicastRouter.route(packet);
      return;
    }
  }
  if (packet.getID() != null && (IQ.Type.result == packet.getType() || IQ.Type.error == packet.getType())) {
    IQResultListener iqResultListener=resultListeners.remove(packet.getID());
    if (iqResultListener != null) {
      resultTimeout.remove(packet.getID());
      if (iqResultListener != null) {
        try {
          iqResultListener.receivedAnswer(packet);
        }
 catch (        Exception e) {
          Log.error("Error processing answer of remote entity. Answer: " + packet.toXML(),e);
        }
        return;
      }
    }
  }
  try {
    if (recipientJID != null && (routingTable.hasComponentRoute(recipientJID) || routingTable.hasServerRoute(recipientJID))) {
      routingTable.routePacket(recipientJID,packet,false);
      return;
    }
    if (recipientJID != null && recipientJID.getNode() != null && serverName.equals(recipientJID.getDomain()) && !userManager.isRegisteredUser(recipientJID.getNode()) && (IQ.Type.set == packet.getType() || IQ.Type.get == packet.getType())) {
      sendErrorPacket(packet,PacketError.Condition.service_unavailable);
      return;
    }
    if (isLocalServer(recipientJID)) {
      Element childElement=packet.getChildElement();
      String namespace=null;
      if (childElement != null) {
        namespace=childElement.getNamespaceURI();
      }
      if (namespace == null) {
        if (packet.getType() != IQ.Type.result && packet.getType() != IQ.Type.error) {
          Log.warn("Unknown packet " + packet.toXML());
        }
      }
 else {
        if (recipientJID != null && userManager.isRegisteredUser(recipientJID.getNode())) {
          PrivacyList list=PrivacyListManager.getInstance().getDefaultPrivacyList(recipientJID.getNode());
          if (list != null && list.shouldBlockPacket(packet)) {
            if (IQ.Type.set == packet.getType() || IQ.Type.get == packet.getType()) {
              sendErrorPacket(packet,PacketError.Condition.service_unavailable);
            }
            return;
          }
        }
        IQHandler handler=getHandler(namespace);
        if (handler == null) {
          if (recipientJID == null) {
            sendErrorPacket(packet,PacketError.Condition.service_unavailable);
          }
 else           if (recipientJID.getNode() == null || "".equals(recipientJID.getNode())) {
            sendErrorPacket(packet,PacketError.Condition.feature_not_implemented);
          }
 else {
            sendErrorPacket(packet,PacketError.Condition.service_unavailable);
          }
        }
 else {
          handler.process(packet);
        }
      }
    }
 else {
      ClientSession session=sessionManager.getSession(packet.getFrom());
      boolean isAcceptable=true;
      if (session instanceof LocalClientSession) {
        IQ dummyIQ=packet.createCopy();
        dummyIQ.setFrom(packet.getTo());
        dummyIQ.setTo(packet.getFrom());
        if (!((LocalClientSession)session).canProcess(dummyIQ)) {
          packet.setTo(session.getAddress());
          packet.setFrom((JID)null);
          packet.setError(PacketError.Condition.not_acceptable);
          session.process(packet);
          isAcceptable=false;
        }
      }
      if (isAcceptable) {
        routingTable.routePacket(recipientJID,packet,false);
      }
    }
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error.routing"),e);
    Session session=sessionManager.getSession(packet.getFrom());
    if (session != null) {
      IQ reply=IQ.createResultIQ(packet);
      reply.setError(PacketError.Condition.internal_server_error);
      session.process(reply);
    }
  }
}
