{
  userCache=CacheFactory.createCache("User");
  remoteUsersCache=CacheFactory.createCache("Remote Users Existence");
  initProvider();
  PropertyEventListener propListener=new PropertyEventListener(){
    @Override public void propertySet(    String property,    Map params){
      if ("provider.user.className".equals(property)) {
        initProvider();
      }
    }
    @Override public void propertyDeleted(    String property,    Map params){
      if ("provider.user.className".equals(property)) {
        initProvider();
      }
    }
    @Override public void xmlPropertySet(    String property,    Map params){
    }
    @Override public void xmlPropertyDeleted(    String property,    Map params){
    }
  }
;
  PropertyEventDispatcher.addListener(propListener);
  UserEventListener userListener=new UserEventListener(){
    @Override public void userCreated(    User user,    Map<String,Object> params){
      userCache.put(user.getUsername(),user);
    }
    @Override public void userDeleting(    User user,    Map<String,Object> params){
      userCache.remove(user.getUsername());
    }
    @Override public void userModified(    User user,    Map<String,Object> params){
      userCache.put(user.getUsername(),user);
    }
  }
;
  UserEventDispatcher.addListener(userListener);
}
