{
  if (node != null && node.equals("")) {
    node=null;
  }
  if (resource != null && resource.equals("")) {
    resource=null;
  }
  try {
    if (!stringprepCache.contains(node)) {
      this.node=Stringprep.nodeprep(node);
      if (this.node != null && this.node.length() * 2 > 1023) {
        throw new IllegalArgumentException("Node cannot be larger than 1023 bytes. " + "Size is " + (this.node.length() * 2) + " bytes.");
      }
      stringprepCache.put(this.node);
    }
 else {
      this.node=node;
    }
    if (!stringprepCache.contains(domain)) {
      this.domain=Stringprep.nameprep(IDNA.toASCII(domain),false);
      if (this.domain.length() * 2 > 1023) {
        throw new IllegalArgumentException("Domain cannot be larger than 1023 bytes. " + "Size is " + (this.domain.length() * 2) + " bytes.");
      }
      stringprepCache.put(this.domain);
    }
 else {
      this.domain=domain;
    }
    this.resource=resourceprep(resource);
    if (resource != null && resource.length() * 2 > 1023) {
      throw new IllegalArgumentException("Resource cannot be larger than 1023 bytes. " + "Size is " + (resource.length() * 2) + " bytes.");
    }
    updateCache();
  }
 catch (  Exception e) {
    StringBuilder buf=new StringBuilder();
    if (node != null) {
      buf.append(node).append("@");
    }
    buf.append(domain);
    if (resource != null) {
      buf.append("/").append(resource);
    }
    throw new IllegalArgumentException("Illegal JID: " + buf.toString(),e);
  }
}
