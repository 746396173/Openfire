{
  if (sql == null || sql.equals("")) {
    return;
  }
  sql=reformatQuery(sql);
  sql=removeQueryValues(sql);
  ProfiledConnectionEntry entry=null;
switch (type) {
case SELECT:
    selectCount++;
  totalSelectTime+=time;
entry=(ProfiledConnectionEntry)selectQueries.get(sql);
if (entry == null) {
entry=new ProfiledConnectionEntry(sql);
selectQueries.put(sql,entry);
}
break;
case UPDATE:
updateCount++;
totalUpdateTime+=time;
entry=(ProfiledConnectionEntry)updateQueries.get(sql);
if (entry == null) {
entry=new ProfiledConnectionEntry(sql);
updateQueries.put(sql,entry);
}
break;
case INSERT:
insertCount++;
totalInsertTime+=time;
entry=(ProfiledConnectionEntry)insertQueries.get(sql);
if (entry == null) {
entry=new ProfiledConnectionEntry(sql);
insertQueries.put(sql,entry);
}
break;
case DELETE:
deleteCount++;
totalDeleteTime+=time;
entry=(ProfiledConnectionEntry)deleteQueries.get(sql);
if (entry == null) {
entry=new ProfiledConnectionEntry(sql);
deleteQueries.put(sql,entry);
}
break;
default :
throw new IllegalArgumentException("Invalid type");
}
entry.count++;
entry.totalTime+=time;
}
