{
  if (first >= last || entries.length < 2) {
    return;
  }
  swap(entries,first,(first + last) / 2);
  int index=first;
  for (int i=first + 1; i <= last; i++) {
    if (sortByTime && ((entries[first].totalTime / entries[first].count) < (entries[i].totalTime / entries[i].count))) {
      swap(entries,++index,i);
    }
 else     if (!sortByTime && entries[first].count < entries[i].count) {
      swap(entries,++index,i);
    }
  }
  swap(entries,first,index);
  quickSort(entries,sortByTime,first,index - 1);
  quickSort(entries,sortByTime,index + 1,last);
}
