{
synchronized (this) {
    if (archivingRunning) {
      return;
    }
    archivingRunning=true;
  }
  if (!messageQueue.isEmpty() || !conversationQueue.isEmpty() || !participantQueue.isEmpty()) {
    Connection con=null;
    PreparedStatement pstmt=null;
    try {
      con=DbConnectionManager.getConnection();
      pstmt=con.prepareStatement(INSERT_MESSAGE);
      ArchivedMessage message;
      int count=0;
      while ((message=messageQueue.poll()) != null) {
        pstmt.setLong(1,message.getConversationID());
        pstmt.setString(2,message.getFromJID().toBareJID());
        pstmt.setString(3,message.getFromJID().getResource());
        pstmt.setString(4,message.getToJID().toBareJID());
        pstmt.setString(5,message.getToJID().getResource());
        pstmt.setLong(6,message.getSentDate().getTime());
        DbConnectionManager.setLargeTextField(pstmt,7,message.getBody());
        if (DbConnectionManager.isBatchUpdatesSupported()) {
          pstmt.addBatch();
        }
 else {
          pstmt.execute();
        }
        if (count % 500 == 0 && DbConnectionManager.isBatchUpdatesSupported()) {
          pstmt.executeBatch();
        }
        count++;
      }
      if (DbConnectionManager.isBatchUpdatesSupported()) {
        pstmt.executeBatch();
      }
      pstmt=con.prepareStatement(UPDATE_CONVERSATION);
      Conversation conversation;
      count=0;
      while ((conversation=conversationQueue.poll()) != null) {
        pstmt.setLong(1,conversation.getLastActivity().getTime());
        pstmt.setInt(2,conversation.getMessageCount());
        pstmt.setLong(3,conversation.getConversationID());
        if (DbConnectionManager.isBatchUpdatesSupported()) {
          pstmt.addBatch();
        }
 else {
          pstmt.execute();
        }
        if (count % 500 == 0 && DbConnectionManager.isBatchUpdatesSupported()) {
          pstmt.executeBatch();
        }
        count++;
      }
      if (DbConnectionManager.isBatchUpdatesSupported()) {
        pstmt.executeBatch();
      }
      pstmt=con.prepareStatement(UPDATE_PARTICIPANT);
      RoomParticipant particpiant;
      count=0;
      while ((particpiant=participantQueue.poll()) != null) {
        pstmt.setLong(1,particpiant.left.getTime());
        pstmt.setLong(2,particpiant.conversationID);
        pstmt.setString(3,particpiant.user.toBareJID());
        pstmt.setString(4,particpiant.user.getResource() == null ? " " : particpiant.user.getResource());
        pstmt.setLong(5,particpiant.joined.getTime());
        if (DbConnectionManager.isBatchUpdatesSupported()) {
          pstmt.addBatch();
        }
 else {
          pstmt.execute();
        }
        if (count % 500 == 0 && DbConnectionManager.isBatchUpdatesSupported()) {
          pstmt.executeBatch();
        }
        count++;
      }
      if (DbConnectionManager.isBatchUpdatesSupported()) {
        pstmt.executeBatch();
      }
    }
 catch (    Exception e) {
      Log.error(e.getMessage(),e);
    }
 finally {
      DbConnectionManager.closeConnection(pstmt,con);
    }
  }
  archivingRunning=false;
}
