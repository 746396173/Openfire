{
  Element element=iq.getChildElement();
  IQProvider iqProvider=(IQProvider)ProviderManager.getInstance().getIQProvider(element.getName(),element.getNamespaceURI());
  org.jivesoftware.smack.packet.IQ smackIQ=null;
  if (iqProvider != null) {
    XmlPullParserFactory xmlPullParserFactory;
synchronized (IQUtils.class) {
      if (IQUtils.xmlPullParserFactory == null) {
        IQUtils.xmlPullParserFactory=XmlPullParserFactory.newInstance();
        IQUtils.xmlPullParserFactory.setNamespaceAware(true);
      }
      xmlPullParserFactory=IQUtils.xmlPullParserFactory;
    }
    XmlPullParser parser=xmlPullParserFactory.newPullParser();
    parser.setInput(new StringReader(iq.toXML()));
    int eventType=parser.next();
    if (XmlPullParser.START_TAG == eventType) {
      String name=parser.getName();
      if ("iq".equals(name)) {
        eventType=parser.next();
        if (XmlPullParser.START_TAG == eventType) {
          smackIQ=iqProvider.parseIQ(parser);
          if (smackIQ != null) {
            eventType=parser.getEventType();
            if (XmlPullParser.END_TAG != eventType) {
              throw new IllegalStateException(Integer.toString(eventType) + " != XmlPullParser.END_TAG");
            }
          }
        }
 else {
          throw new IllegalStateException(Integer.toString(eventType) + " != XmlPullParser.START_TAG");
        }
      }
 else       throw new IllegalStateException(name + " != iq");
    }
 else {
      throw new IllegalStateException(Integer.toString(eventType) + " != XmlPullParser.START_TAG");
    }
  }
  if (smackIQ != null) {
    org.xmpp.packet.JID fromJID=iq.getFrom();
    if (fromJID != null)     smackIQ.setFrom(fromJID.toString());
    smackIQ.setPacketID(iq.getID());
    org.xmpp.packet.JID toJID=iq.getTo();
    if (toJID != null)     smackIQ.setTo(toJID.toString());
    smackIQ.setType(convert(iq.getType()));
  }
  return smackIQ;
}
