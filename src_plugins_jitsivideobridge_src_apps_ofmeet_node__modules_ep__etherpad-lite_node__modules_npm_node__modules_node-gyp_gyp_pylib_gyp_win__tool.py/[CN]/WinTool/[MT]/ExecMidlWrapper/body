def ExecMidlWrapper(self, arch, outdir, tlb, h, dlldata, iid, proxy, idl, *flags):
    "Filter noisy filenames output from MIDL compile step that isn't\n    quietable via command line flags.\n    "
    args = ((['midl', '/nologo'] + list(flags)) + ['/out', outdir, '/tlb', tlb, '/h', h, '/dlldata', dlldata, '/iid', iid, '/proxy', proxy, idl])
    env = self._GetEnv(arch)
    popen = subprocess.Popen(args, shell=True, env=env, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    (out, _) = popen.communicate()
    lines = out.splitlines()
    prefix = 'Processing '
    processing = set((os.path.basename(x) for x in lines if x.startswith(prefix)))
    for line in lines:
        if ((not line.startswith(prefix)) and (line not in processing)):
            print line
    return popen.returncode
