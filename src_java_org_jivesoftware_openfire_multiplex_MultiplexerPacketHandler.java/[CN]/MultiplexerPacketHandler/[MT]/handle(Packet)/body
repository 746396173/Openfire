{
  if (packet instanceof IQ) {
    IQ iq=(IQ)packet;
    if (iq.getType() == IQ.Type.result) {
    }
 else     if (iq.getType() == IQ.Type.error) {
      Log.warn("Connection Manager failed to process IQ packet: " + packet.toXML());
    }
 else     if (iq.getType() == IQ.Type.set) {
      Element child=iq.getChildElement();
      String streamID=child.attributeValue("id");
      if (streamID == null) {
        Element extraError=DocumentHelper.createElement(QName.get("id-required","http://jabber.org/protocol/connectionmanager#errors"));
        sendErrorPacket(iq,PacketError.Condition.bad_request,extraError);
      }
 else       if ("session".equals(child.getName())) {
        if (child.element("create") != null) {
          multiplexerManager.createClientSession(connectionManagerDomain,streamID);
          sendResultPacket(iq);
        }
 else {
          ClientSession session=multiplexerManager.getClientSession(connectionManagerDomain,streamID);
          if (session == null) {
            sendErrorPacket(iq,PacketError.Condition.item_not_found,null);
          }
 else           if (child.element("close") != null) {
            multiplexerManager.closeClientSession(connectionManagerDomain,streamID);
            sendResultPacket(iq);
          }
 else           if (child.element("failed") != null) {
            List wrappedElements=child.element("failed").elements();
            if (wrappedElements.size() != 1) {
              Element extraError=DocumentHelper.createElement(QName.get("invalid-payload","http://jabber.org/protocol/connectionmanager#errors"));
              sendErrorPacket(iq,PacketError.Condition.bad_request,extraError);
            }
 else {
              Element wrappedElement=(Element)wrappedElements.get(0);
              String tag=wrappedElement.getName();
              if ("message".equals(tag)) {
                XMPPServer.getInstance().getOfflineMessageStrategy().storeOffline(new Message(wrappedElement));
                sendResultPacket(iq);
              }
 else {
                Element extraError=DocumentHelper.createElement(QName.get("unknown-stanza","http://jabber.org/protocol/connectionmanager#errors"));
                sendErrorPacket(iq,PacketError.Condition.bad_request,extraError);
              }
            }
          }
 else {
            sendErrorPacket(iq,PacketError.Condition.bad_request,null);
          }
        }
      }
 else {
        sendErrorPacket(iq,PacketError.Condition.bad_request,null);
      }
    }
 else {
      sendErrorPacket(iq,PacketError.Condition.bad_request,null);
    }
  }
}
