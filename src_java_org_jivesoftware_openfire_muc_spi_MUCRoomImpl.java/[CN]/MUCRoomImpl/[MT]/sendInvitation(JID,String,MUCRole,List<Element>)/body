{
  if (!isMembersOnly() || canOccupantsInvite() || MUCRole.Affiliation.admin == senderRole.getAffiliation() || MUCRole.Affiliation.owner == senderRole.getAffiliation()) {
    Message message=new Message();
    message.setFrom(role.getRoleAddress());
    message.setTo(to);
    if (extensions != null) {
      for (      Element element : extensions) {
        element.setParent(null);
        message.getElement().add(element);
      }
    }
    Element frag=message.addChildElement("x","http://jabber.org/protocol/muc#user");
    if (senderRole.getChatUser() != null) {
      frag.addElement("invite").addAttribute("from",senderRole.getChatUser().getAddress().toBareJID());
    }
    if (reason != null && reason.length() > 0) {
      Element invite=frag.element("invite");
      if (invite == null) {
        invite.addElement("invite");
      }
      invite.addElement("reason").setText(reason);
    }
    if (isPasswordProtected()) {
      frag.addElement("password").setText(getPassword());
    }
    frag=message.addChildElement("x","jabber:x:conference");
    frag.addAttribute("jid",role.getRoleAddress().toBareJID());
    router.route(message);
  }
 else {
    throw new ForbiddenException();
  }
}
