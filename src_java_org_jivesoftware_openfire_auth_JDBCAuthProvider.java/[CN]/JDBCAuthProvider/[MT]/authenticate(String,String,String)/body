{
  if (passwordTypes.size() != 1 || passwordTypes.get(0) != PasswordType.plain) {
    throw new UnsupportedOperationException("Digest authentication not supported for " + "password type " + passwordTypes.get(0));
  }
  if (username == null || token == null || digest == null) {
    throw new UnauthorizedException();
  }
  username=username.trim().toLowerCase();
  if (username.contains("@")) {
    int index=username.indexOf("@");
    String domain=username.substring(index + 1);
    if (domain.equals(XMPPServer.getInstance().getServerInfo().getXMPPDomain())) {
      username=username.substring(0,index);
    }
 else {
      throw new UnauthorizedException();
    }
  }
  String password;
  try {
    password=getPasswordValue(username);
  }
 catch (  UserNotFoundException unfe) {
    throw new UnauthorizedException();
  }
  String anticipatedDigest=AuthFactory.createDigest(token,password);
  if (!digest.equalsIgnoreCase(anticipatedDigest)) {
    throw new UnauthorizedException();
  }
  createUser(username);
}
