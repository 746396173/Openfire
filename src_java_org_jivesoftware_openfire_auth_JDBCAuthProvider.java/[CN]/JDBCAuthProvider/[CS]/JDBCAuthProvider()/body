{
  JiveGlobals.migrateProperty("jdbcProvider.driver");
  JiveGlobals.migrateProperty("jdbcProvider.connectionString");
  JiveGlobals.migrateProperty("jdbcAuthProvider.passwordSQL");
  JiveGlobals.migrateProperty("jdbcAuthProvider.passwordType");
  JiveGlobals.migrateProperty("jdbcAuthProvider.setPasswordSQL");
  JiveGlobals.migrateProperty("jdbcAuthProvider.allowUpdate");
  useConnectionProvider=JiveGlobals.getBooleanProperty("jdbcAuthProvider.useConnectionProvider");
  if (!useConnectionProvider) {
    String jdbcDriver=JiveGlobals.getProperty("jdbcProvider.driver");
    try {
      Class.forName(jdbcDriver).newInstance();
    }
 catch (    Exception e) {
      Log.error("Unable to load JDBC driver: " + jdbcDriver,e);
      return;
    }
    connectionString=JiveGlobals.getProperty("jdbcProvider.connectionString");
  }
  passwordSQL=JiveGlobals.getProperty("jdbcAuthProvider.passwordSQL");
  setPasswordSQL=JiveGlobals.getProperty("jdbcAuthProvider.setPasswordSQL");
  allowUpdate=JiveGlobals.getBooleanProperty("jdbcAuthProvider.allowUpdate",false);
  passwordType=PasswordType.plain;
  try {
    passwordType=PasswordType.valueOf(JiveGlobals.getProperty("jdbcAuthProvider.passwordType","plain"));
  }
 catch (  IllegalArgumentException iae) {
    Log.error(iae.getMessage(),iae);
  }
}
