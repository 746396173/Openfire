{
  List<User> userList=new ArrayList<User>();
  boolean isUnsupported=false;
  int totalMatchedUserCount=0;
  for (  UserProvider provider : userproviders) {
    Set<String> validFields=provider.getSearchFields();
    for (    String field : fields) {
      if (!validFields.contains(field)) {
        continue;
      }
    }
    try {
      Collection<User> providerResults=provider.findUsers(fields,query);
      totalMatchedUserCount+=providerResults.size();
      if (startIndex >= totalMatchedUserCount) {
        continue;
      }
      int providerStartIndex=Math.max(0,startIndex - totalMatchedUserCount);
      int providerResultMax=numResults - userList.size();
      List<User> providerList=providerResults instanceof List<?> ? (List<User>)providerResults : new ArrayList<User>(providerResults);
      userList.addAll(providerList.subList(providerStartIndex,providerResultMax));
      if (userList.size() >= numResults) {
        break;
      }
    }
 catch (    UnsupportedOperationException uoe) {
      Log.warn("UserProvider.findUsers is not supported by this UserProvider: " + provider.getClass().getName());
      isUnsupported=true;
    }
  }
  if (isUnsupported && userList.size() == 0) {
    throw new UnsupportedOperationException();
  }
  return userList;
}
