{
  if (presence.getTo() == null && server.isLocal(presence.getFrom())) {
    String username=presence.getFrom().getNode();
    if (username == null || !userManager.isRegisteredUser(username)) {
      return;
    }
    if (sessionManager.getActiveSessionCount(username) > 0) {
      return;
    }
    String offlinePresence=null;
    if (!presence.getElement().elements().isEmpty()) {
      offlinePresence=presence.toXML();
    }
    java.util.Date offlinePresenceDate=new java.util.Date();
    boolean addedToCache;
    if (offlinePresence == null) {
      addedToCache=!NULL_STRING.equals(offlinePresenceCache.put(username,NULL_STRING));
    }
 else {
      addedToCache=!offlinePresence.equals(offlinePresenceCache.put(username,offlinePresence));
    }
    if (!addedToCache) {
      return;
    }
    lastActivityCache.put(username,offlinePresenceDate.getTime());
    deleteOfflinePresenceFromDB(username);
    Connection con=null;
    PreparedStatement pstmt=null;
    try {
      con=DbConnectionManager.getConnection();
      pstmt=con.prepareStatement(INSERT_OFFLINE_PRESENCE);
      pstmt.setString(1,username);
      if (offlinePresence != null) {
        DbConnectionManager.setLargeTextField(pstmt,2,offlinePresence);
      }
 else {
        pstmt.setNull(2,Types.VARCHAR);
      }
      pstmt.setString(3,StringUtils.dateToMillis(offlinePresenceDate));
      pstmt.execute();
    }
 catch (    SQLException sqle) {
      Log.error("Error storing offline presence of user: " + username,sqle);
    }
 finally {
      DbConnectionManager.closeConnection(pstmt,con);
    }
  }
}
