{
  try {
    if (server.isLocal(probee)) {
      Collection<JID> proberFullJIDs=new ArrayList<JID>();
      if (prober.getResource() == null && server.isLocal(prober)) {
        for (        ClientSession session : sessionManager.getSessions(prober.getNode())) {
          proberFullJIDs.add(session.getAddress());
        }
      }
 else {
        proberFullJIDs.add(prober);
      }
      Collection<ClientSession> sessions=sessionManager.getSessions(probee.getNode());
      if (sessions.isEmpty()) {
        String presenceXML=offlinePresenceCache.get(probee.getNode());
        if (presenceXML == null) {
          loadOfflinePresence(probee.getNode());
        }
        presenceXML=offlinePresenceCache.get(probee.getNode());
        if (presenceXML != null && !NULL_STRING.equals(presenceXML)) {
          try {
            Document element=DocumentHelper.parseText(presenceXML);
            Presence presencePacket=new Presence(element.getRootElement());
            presencePacket.setFrom(probee.toBareJID());
            PrivacyList list=PrivacyListManager.getInstance().getDefaultPrivacyList(probee.getNode());
            for (            JID receipient : proberFullJIDs) {
              presencePacket.setTo(receipient);
              if (list == null || !list.shouldBlockPacket(presencePacket)) {
                deliverer.deliver(presencePacket);
              }
            }
          }
 catch (          Exception e) {
            Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
          }
        }
      }
 else {
        for (        ClientSession session : sessions) {
          Presence presencePacket=session.getPresence().createCopy();
          presencePacket.setFrom(session.getAddress());
          PrivacyList list=session.getActiveList();
          list=list == null ? session.getDefaultList() : list;
          for (          JID receipient : proberFullJIDs) {
            presencePacket.setTo(receipient);
            if (list != null) {
              if (list.shouldBlockPacket(presencePacket)) {
                continue;
              }
            }
            try {
              deliverer.deliver(presencePacket);
            }
 catch (            Exception e) {
              Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
            }
          }
        }
      }
    }
 else {
      if (routingTable.hasComponentRoute(probee)) {
        Presence presence=new Presence();
        presence.setType(Presence.Type.probe);
        presence.setFrom(prober);
        presence.setTo(probee);
        routingTable.routePacket(probee,presence,true);
      }
 else {
        if (server.isRemote(probee)) {
          Presence probePresence=new Presence();
          probePresence.setType(Presence.Type.probe);
          probePresence.setFrom(prober);
          probePresence.setTo(probee.toBareJID());
          deliverer.deliver(probePresence);
        }
 else {
          componentManager.addPresenceRequest(prober,probee);
        }
      }
    }
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
  }
}
