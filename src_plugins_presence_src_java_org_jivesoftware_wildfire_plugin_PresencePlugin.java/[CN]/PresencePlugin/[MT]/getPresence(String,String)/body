{
  JID targetJID=new JID(jid);
  if (targetJID.getDomain() == null || XMPPServer.getInstance().isRemote(targetJID)) {
    throw new UserNotFoundException("Domain does not matches local server domain");
  }
  if (!hostname.equals(targetJID.getDomain())) {
    presenceManager.probePresence(new JID("presence." + hostname),targetJID);
    int count=0;
    while (!probedPresence.containsKey(jid)) {
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
      }
      count++;
      if (count > 300) {
        throw new UserNotFoundException("Request for user presence has timed-out.");
      }
    }
    Presence presence=probedPresence.get(jid);
    probedPresence.remove(jid);
    return presence;
  }
  if (targetJID.getNode() == null || !UserManager.getInstance().isRegisteredUser(targetJID.getNode())) {
    throw new UserNotFoundException("Username is null");
  }
  if (!isPresencePublic()) {
    if (sender == null) {
      throw new UserNotFoundException("Sender is null");
    }
 else     if (!presenceManager.canProbePresence(new JID(sender),targetJID.getNode())) {
      throw new UserNotFoundException("Sender is not allowed to probe this user");
    }
  }
  User user=userManager.getUser(targetJID.getNode());
  return presenceManager.getPresence(user);
}
