{
  Connection con=null;
  PreparedStatement pstmt=null;
  ResultSet rs=null;
  Map<String,Node> nodes=new HashMap<String,Node>();
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(LOAD_NODES);
    pstmt.setString(1,service.getServiceID());
    rs=pstmt.executeQuery();
    Map<String,String> parentMappings=new HashMap<String,String>();
    while (rs.next()) {
      loadNode(service,nodes,parentMappings,rs);
    }
    DbConnectionManager.fastcloseStmt(rs,pstmt);
    if (nodes.size() == 0) {
      log.info("No nodes found in pubsub");
      return;
    }
    for (    Map.Entry<String,String> entry : parentMappings.entrySet()) {
      Node child=nodes.get(entry.getKey());
      CollectionNode parent=(CollectionNode)nodes.get(entry.getValue());
      if (parent == null) {
        log.error("Could not find parent node " + entry.getValue() + " for node "+ entry.getKey());
      }
 else {
        child.changeParent(parent);
      }
    }
    pstmt=con.prepareStatement(LOAD_NODES_JIDS);
    pstmt.setString(1,service.getServiceID());
    rs=pstmt.executeQuery();
    while (rs.next()) {
      loadAssociatedJIDs(nodes,rs);
    }
    DbConnectionManager.fastcloseStmt(rs,pstmt);
    pstmt=con.prepareStatement(LOAD_NODES_GROUPS);
    pstmt.setString(1,service.getServiceID());
    rs=pstmt.executeQuery();
    while (rs.next()) {
      loadAssociatedGroups(nodes,rs);
    }
    DbConnectionManager.fastcloseStmt(rs,pstmt);
    pstmt=con.prepareStatement(LOAD_AFFILIATIONS);
    pstmt.setString(1,service.getServiceID());
    rs=pstmt.executeQuery();
    while (rs.next()) {
      loadAffiliations(nodes,rs);
    }
    DbConnectionManager.fastcloseStmt(rs,pstmt);
    pstmt=con.prepareStatement(LOAD_SUBSCRIPTIONS);
    pstmt.setString(1,service.getServiceID());
    rs=pstmt.executeQuery();
    while (rs.next()) {
      loadSubscriptions(service,nodes,rs);
    }
    DbConnectionManager.fastcloseStmt(rs,pstmt);
  }
 catch (  SQLException sqle) {
    log.error(sqle.getMessage(),sqle);
  }
 finally {
    DbConnectionManager.closeConnection(rs,pstmt,con);
  }
  for (  Node node : nodes.values()) {
    node.setSavedToDB(true);
    service.addNode(node);
  }
}
