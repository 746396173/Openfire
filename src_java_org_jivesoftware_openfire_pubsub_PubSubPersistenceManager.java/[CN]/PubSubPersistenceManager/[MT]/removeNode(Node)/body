{
  Connection con=null;
  PreparedStatement pstmt=null;
  boolean abortTransaction=false;
  try {
    con=DbConnectionManager.getTransactionConnection();
    pstmt=con.prepareStatement(DELETE_NODE);
    pstmt.setString(1,node.getService().getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    DbConnectionManager.fastcloseStmt(pstmt);
    pstmt=con.prepareStatement(DELETE_NODE_JIDS);
    pstmt.setString(1,node.getService().getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    DbConnectionManager.fastcloseStmt(pstmt);
    pstmt=con.prepareStatement(DELETE_NODE_GROUPS);
    pstmt.setString(1,node.getService().getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    DbConnectionManager.fastcloseStmt(pstmt);
    if (node instanceof LeafNode) {
      purgeNode((LeafNode)node);
    }
    pstmt=con.prepareStatement(DELETE_AFFILIATIONS);
    pstmt.setString(1,node.getService().getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    DbConnectionManager.fastcloseStmt(pstmt);
    pstmt=con.prepareStatement(DELETE_SUBSCRIPTIONS);
    pstmt.setString(1,node.getService().getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
  }
 catch (  SQLException sqle) {
    log.error(sqle.getMessage(),sqle);
    abortTransaction=true;
  }
 finally {
    DbConnectionManager.closeStatement(pstmt);
    DbConnectionManager.closeTransactionConnection(con,abortTransaction);
  }
  return !abortTransaction;
}
