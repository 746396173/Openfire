{
  Log.debug("Flushing items to database");
  System.out.println("Flushing " + publishedItemSize + " items to database");
  LinkedList addList=null;
  LinkedList delList=null;
synchronized (itemLock) {
    addList=itemsToAdd;
    delList=itemsToDelete;
    itemsToAdd=new LinkedList();
    delList=new LinkedList();
    itemMap.clear();
    publishedItemSize=0;
  }
  Connection con=null;
  PreparedStatement pstmt=null;
  try {
    con=DbConnectionManager.getTransactionConnection();
    LinkedListNode itemNode=addList.getFirst();
    while (itemNode != null) {
      PublishedItem item=(PublishedItem)itemNode.object;
      pstmt=con.prepareStatement(ADD_ITEM);
      pstmt.setString(1,item.getNode().getService().getServiceID());
      pstmt.setString(2,encodeNodeID(item.getNode().getNodeID()));
      pstmt.setString(3,item.getID());
      pstmt.setString(4,item.getPublisher().toString());
      pstmt.setString(5,StringUtils.dateToMillis(item.getCreationDate()));
      pstmt.setString(6,item.getPayloadXML());
      pstmt.executeUpdate();
      itemNode=itemNode.next;
    }
    itemNode=delList.getFirst();
    while (itemNode != null) {
      PublishedItem item=(PublishedItem)itemNode.object;
      pstmt=con.prepareStatement(DELETE_ITEM);
      pstmt.setString(1,item.getNode().getService().getServiceID());
      pstmt.setString(2,encodeNodeID(item.getNode().getNodeID()));
      pstmt.setString(3,item.getID());
      pstmt.executeUpdate();
      itemNode=itemNode.next;
    }
    con.commit();
  }
 catch (  SQLException sqle) {
    Log.error(sqle.getMessage(),sqle);
  }
 finally {
    DbConnectionManager.closeConnection(pstmt,con);
  }
}
