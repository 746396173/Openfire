{
  Connection con=null;
  PreparedStatement pstmt=null;
  boolean abortTransaction=false;
  try {
    con=DbConnectionManager.getTransactionConnection();
    pstmt=con.prepareStatement(DELETE_NODE);
    pstmt.setString(1,service.getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    pstmt.close();
    pstmt=con.prepareStatement(DELETE_NODE_JIDS);
    pstmt.setString(1,service.getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    pstmt.close();
    pstmt=con.prepareStatement(DELETE_NODE_GROUPS);
    pstmt.setString(1,service.getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    pstmt.close();
    pstmt=con.prepareStatement(DELETE_ITEMS);
    pstmt.setString(1,service.getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    pstmt.close();
    pstmt=con.prepareStatement(DELETE_AFFILIATIONS);
    pstmt.setString(1,service.getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
    pstmt.close();
    pstmt=con.prepareStatement(DELETE_SUBSCRIPTIONS);
    pstmt.setString(1,service.getServiceID());
    pstmt.setString(2,encodeNodeID(node.getNodeID()));
    pstmt.executeUpdate();
  }
 catch (  SQLException sqle) {
    Log.error(sqle.getMessage(),sqle);
    abortTransaction=true;
  }
 finally {
    try {
      if (pstmt != null) {
        pstmt.close();
      }
    }
 catch (    Exception e) {
      Log.error(e.getMessage(),e);
    }
    DbConnectionManager.closeTransactionConnection(con,abortTransaction);
  }
  return !abortTransaction;
}
