{
  final ConversationInfo info=new ConversationInfo();
  Collection<JID> col=conversation.getParticipants();
  if (conversation.getRoom() == null) {
    JID user1=(JID)col.toArray()[0];
    info.setParticipant1(formatJID(formatParticipants,user1));
    JID user2=(JID)col.toArray()[1];
    info.setParticipant2(formatJID(formatParticipants,user2));
  }
 else {
    info.setConversationID(conversation.getConversationID());
    JID[] occupants=col.toArray(new JID[col.size()]);
    String[] jids=new String[col.size()];
    for (int i=0; i < occupants.length; i++) {
      jids[i]=formatJID(formatParticipants,occupants[i]);
    }
    info.setAllParticipants(jids);
  }
  Map<String,String> cssLabels=new HashMap<String,String>();
  int count=0;
  for (  JID jid : col) {
    if (!cssLabels.containsKey(jid.toString())) {
      if (conversation.getRoom() == null) {
        if (count % 2 == 0) {
          cssLabels.put(jid.toBareJID(),"conversation-label2");
        }
 else {
          cssLabels.put(jid.toBareJID(),"conversation-label1");
        }
        count++;
      }
 else {
        cssLabels.put(jid.toString(),"conversation-label4");
      }
    }
  }
  info.setDate(JiveGlobals.formatDateTime(conversation.getStartDate()));
  info.setLastActivity(JiveGlobals.formatTime(conversation.getLastActivity()));
  final StringBuilder builder=new StringBuilder();
  builder.append("<table width=100%>");
  for (  ArchivedMessage message : conversation.getMessages()) {
    String time=JiveGlobals.formatTime(message.getSentDate());
    String from=message.getFromJID().getNode();
    if (conversation.getRoom() != null) {
      from=message.getToJID().getResource();
    }
    from=StringUtils.escapeHTMLTags(from);
    String cssLabel=cssLabels.get(message.getFromJID().toBareJID());
    String body=StringUtils.escapeHTMLTags(message.getBody());
    builder.append("<tr valign=top>");
    if (!message.isRoomEvent()) {
      builder.append("<td width=1% nowrap class=" + cssLabel + ">").append("[").append(time).append("]").append("</td>");
      builder.append("<td width=1% class=" + cssLabel + ">").append(from).append(": ").append("</td>");
      builder.append("<td class=conversation-body>").append(body).append("</td");
    }
 else {
      builder.append("<td width=1% nowrap class=conversation-label3>").append("[").append(time).append("]").append("</td>");
      builder.append("<td colspan=2 class=conversation-label3><i>").append(body).append("</i></td");
    }
    builder.append("</tr>");
  }
  if (conversation.getMessages().size() == 0) {
    builder.append("<span class=small-description>" + LocaleUtils.getLocalizedString("archive.search.results.archive_disabled",MonitoringConstants.NAME) + "</a>");
  }
  info.setBody(builder.toString());
  info.setMessageCount(conversation.getMessageCount());
  long duration=(conversation.getLastActivity().getTime() - conversation.getStartDate().getTime());
  info.setDuration(duration);
  return info;
}
