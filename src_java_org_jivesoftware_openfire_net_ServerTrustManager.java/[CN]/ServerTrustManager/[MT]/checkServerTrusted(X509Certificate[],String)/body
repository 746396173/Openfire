{
  boolean verify=JiveGlobals.getBooleanProperty("xmpp.server.certificate.verify",true);
  if (verify) {
    int nSize=x509Certificates.length;
    List<String> peerIdentities=CertificateManager.getPeerIdentities(x509Certificates[0]);
    if (JiveGlobals.getBooleanProperty("xmpp.server.certificate.verify.chain",true)) {
      Principal principalLast=null;
      for (int i=nSize - 1; i >= 0; i--) {
        X509Certificate x509certificate=x509Certificates[i];
        Principal principalIssuer=x509certificate.getIssuerDN();
        Principal principalSubject=x509certificate.getSubjectDN();
        if (principalLast != null) {
          if (principalIssuer.equals(principalLast)) {
            try {
              PublicKey publickey=x509Certificates[i + 1].getPublicKey();
              x509Certificates[i].verify(publickey);
            }
 catch (            GeneralSecurityException generalsecurityexception) {
              throw new CertificateException("signature verification failed of " + peerIdentities);
            }
          }
 else {
            throw new CertificateException("subject/issuer verification failed of " + peerIdentities);
          }
        }
        principalLast=principalSubject;
      }
    }
    if (JiveGlobals.getBooleanProperty("xmpp.server.certificate.verify.root",true)) {
      boolean trusted=false;
      try {
        trusted=trustStore.getCertificateAlias(x509Certificates[nSize - 1]) != null;
        if (!trusted && nSize == 1 && JiveGlobals.getBooleanProperty("xmpp.server.certificate.accept-selfsigned",false)) {
          Log.warn("Accepting self-signed certificate of remote server: " + peerIdentities);
          trusted=true;
        }
      }
 catch (      KeyStoreException e) {
        Log.error(e);
      }
      if (!trusted) {
        throw new CertificateException("root certificate not trusted of " + peerIdentities);
      }
    }
    Boolean found=false;
    for (    String identity : peerIdentities) {
      if (identity.startsWith("*.")) {
        identity=identity.replace("*.",".");
        if (server.endsWith(identity)) {
          found=true;
          break;
        }
      }
 else {
        if (server.equals(identity)) {
          found=true;
          break;
        }
      }
    }
    if (!found) {
      throw new CertificateException("target verification failed of " + peerIdentities);
    }
    if (JiveGlobals.getBooleanProperty("xmpp.server.certificate.verify.validity",true)) {
      Date date=new Date();
      for (int i=0; i < nSize; i++) {
        try {
          x509Certificates[i].checkValidity(date);
        }
 catch (        GeneralSecurityException generalsecurityexception) {
          throw new CertificateException("invalid date of " + peerIdentities);
        }
      }
    }
  }
}
