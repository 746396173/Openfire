{
  if (isComplete()) {
    throw new IllegalStateException("Authentication exchange already completed.");
  }
  complete=true;
  final Connection connection=session.getConnection();
  if (connection.getPeerCertificates().length < 1) {
    throw new SaslException("No peer certificates.");
  }
  final KeyStore keyStore=connection.getConfiguration().getIdentityStore().getStore();
  final KeyStore trustStore=connection.getConfiguration().getTrustStore().getStore();
  final X509Certificate trusted=CertificateManager.getEndEntityCertificate(connection.getPeerCertificates(),keyStore,trustStore);
  if (trusted == null) {
    throw new SaslException("Certificate chain of peer is not trusted.");
  }
  final ArrayList<String> principals=new ArrayList<>();
  principals.addAll(CertificateManager.getClientIdentities(trusted));
  String principal;
switch (principals.size()) {
case 0:
    principal="";
  break;
default :
Log.debug("More than one principal found, using the first one.");
case 1:
principal=principals.get(0);
break;
}
String username;
if (response != null && response.length > 0) {
username=new String(response,StandardCharsets.UTF_8);
}
 else {
username=null;
}
if (username == null || username.length() == 0) {
for (String princ : principals) {
final String mappedUsername=AuthorizationManager.map(princ);
if (!mappedUsername.equals(princ)) {
username=mappedUsername;
principal=princ;
break;
}
}
if (username == null || username.length() == 0) {
username=principal;
}
Log.debug("No username requested, using: {}",username);
}
if (AuthorizationManager.authorize(username,principal)) {
Log.debug("Principal {} authorized to username {}",principal,username);
authorizationID=username;
return null;
}
throw new SaslException();
}
