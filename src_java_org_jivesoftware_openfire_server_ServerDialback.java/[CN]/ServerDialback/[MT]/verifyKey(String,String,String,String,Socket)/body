{
  final Logger log=LoggerFactory.getLogger(Log.getName() + "[Verify key with AS: " + remoteDomain+ " for: "+ recipient+ " (id "+ streamID+ ")]");
  log.debug("Verifying key ...");
  XMPPPacketReader reader;
  Writer writer=null;
  socket.setSoTimeout(RemoteServerManager.getSocketTimeout());
  VerifyResult result=VerifyResult.error;
  try {
    reader=new XMPPPacketReader();
    reader.setXPPFactory(FACTORY);
    reader.getXPPParser().setInput(new InputStreamReader(socket.getInputStream(),CHARSET));
    writer=new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(),CHARSET));
    result=sendVerifyKey(key,streamID,recipient,remoteDomain,writer,reader,socket);
  }
  finally {
    try {
      StringBuilder sb=new StringBuilder();
      sb.append("</stream:stream>");
      writer.write(sb.toString());
      writer.flush();
      socket.close();
    }
 catch (    IOException ioe) {
    }
  }
switch (result) {
case valid:
    log.debug("Successfully verified key!");
  break;
case invalid:
log.debug("Unable to verify key: AS reports that the key is invalid.");
break;
default :
case decline:
case error:
log.debug("Unable to verify key: An error occurred.");
break;
}
return result;
}
