{
  String verifyFROM=doc.attributeValue("from");
  String verifyTO=doc.attributeValue("to");
  String key=doc.getTextTrim();
  StreamID streamID=BasicStreamIDFactory.createStreamID(doc.attributeValue("id"));
  final Logger log=LoggerFactory.getLogger(Log.getName() + "[Acting as Authoritative Server: Verify key sent by RS: " + verifyFROM+ " (id "+ streamID+ ")]");
  log.debug("Verifying key... ");
  String expectedKey=AuthFactory.createDigest(streamID.getID(),getSecretkey());
  boolean verified=expectedKey.equals(key);
  StringBuilder sb=new StringBuilder();
  sb.append("<db:verify");
  sb.append(" from=\"").append(verifyTO).append("\"");
  sb.append(" to=\"").append(verifyFROM).append("\"");
  sb.append(" type=\"");
  sb.append(verified ? "valid" : "invalid");
  sb.append("\" id=\"").append(streamID.getID()).append("\"/>");
  connection.deliverRawText(sb.toString());
  log.debug("Verification successful! Key was: " + (verified ? "VALID" : "INVALID"));
  return verified;
}
