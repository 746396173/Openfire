{
  boolean debug=Log.isDebugEnabled();
  if (debug) {
    Log.debug("LdapManager: Creating a DirContext in LdapManager.getContext()...");
    if (!sslEnabled && !startTlsEnabled) {
      Log.debug("LdapManager: Warning: Using unencrypted connection to LDAP service!");
    }
  }
  Hashtable<String,Object> env=new Hashtable<>();
  env.put(Context.INITIAL_CONTEXT_FACTORY,initialContextFactory);
  env.put(Context.PROVIDER_URL,getProviderURL(baseDN));
  if (sslEnabled) {
    env.put(Context.SECURITY_PROTOCOL,"ssl");
  }
  if (adminDN != null) {
    if (!(startTlsEnabled && !sslEnabled)) {
      env.put(Context.SECURITY_AUTHENTICATION,"simple");
      env.put(Context.SECURITY_PRINCIPAL,adminDN);
      if (adminPassword != null) {
        env.put(Context.SECURITY_CREDENTIALS,adminPassword);
      }
    }
  }
 else {
    env.put(Context.SECURITY_AUTHENTICATION,"none");
  }
  if (ldapDebugEnabled) {
    env.put("com.sun.jndi.ldap.trace.ber",System.err);
  }
  if (connectionPoolEnabled) {
    if (!startTlsEnabled) {
      env.put("com.sun.jndi.ldap.connect.pool","true");
      System.setProperty("com.sun.jndi.ldap.connect.pool.protocol","plain ssl");
    }
 else {
      if (debug) {
        Log.debug("LdapManager: connection pooling was requested but has been disabled because of StartTLS.");
      }
      env.put("com.sun.jndi.ldap.connect.pool","false");
    }
  }
 else {
    env.put("com.sun.jndi.ldap.connect.pool","false");
  }
  if (followReferrals) {
    env.put(Context.REFERRAL,"follow");
  }
  if (!followAliasReferrals) {
    env.put("java.naming.ldap.derefAliases","never");
  }
  if (debug) {
    Log.debug("LdapManager: Created hashtable with context values, attempting to create context...");
  }
  JiveInitialLdapContext context=new JiveInitialLdapContext(env,null);
  if (startTlsEnabled && !sslEnabled) {
    if (debug) {
      Log.debug("LdapManager: ... StartTlsRequest");
    }
    if (followReferrals) {
      Log.warn("\tConnections to referrals are unencrypted! If you do not want this, please turn off ldap.autoFollowReferrals");
    }
    StartTlsResponse tls=(StartTlsResponse)context.extendedOperation(new StartTlsRequest());
    try {
      SSLSession session=tls.negotiate();
      context.setTlsResponse(tls);
      context.setSslSession(session);
      if (debug) {
        Log.debug("LdapManager: ... peer host: " + session.getPeerHost() + ", CipherSuite: "+ session.getCipherSuite());
      }
      if (adminDN != null) {
        context.addToEnvironment(Context.SECURITY_AUTHENTICATION,"simple");
        context.addToEnvironment(Context.SECURITY_PRINCIPAL,adminDN);
        if (adminPassword != null) {
          context.addToEnvironment(Context.SECURITY_CREDENTIALS,adminPassword);
        }
      }
    }
 catch (    java.io.IOException ex) {
      Log.error(ex.getMessage(),ex);
    }
  }
  if (debug) {
    Log.debug("LdapManager: ... context created successfully, returning.");
  }
  return context;
}
