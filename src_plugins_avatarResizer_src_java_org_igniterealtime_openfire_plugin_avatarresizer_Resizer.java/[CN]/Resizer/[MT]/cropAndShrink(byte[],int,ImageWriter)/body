{
  Log.debug("Original image size: {} bytes.",bytes.length);
  BufferedImage avatar;
  try (final ByteArrayInputStream stream=new ByteArrayInputStream(bytes)){
    avatar=ImageIO.read(stream);
    if (avatar.getWidth() <= targetDimension && avatar.getHeight() <= targetDimension) {
      Log.debug("Original image dimension ({}x{}) is within acceptable bounds ({}x{}). No need to resize.",avatar.getWidth(),avatar.getHeight(),targetDimension,targetDimension);
      return null;
    }
  }
 catch (  IOException|RuntimeException ex) {
    Log.warn("Failed to resize avatar. An unexpected exception occurred while reading the original image.",ex);
    return null;
  }
  Log.debug("Original image is " + avatar.getWidth() + "x"+ avatar.getHeight()+ " pixels");
  final int targetWidth, targetHeight;
  if (avatar.getHeight() == avatar.getWidth()) {
    Log.debug("Original image is already square ({}x{})",avatar.getWidth(),avatar.getHeight());
    targetWidth=targetHeight=avatar.getWidth();
  }
 else {
    final int x, y;
    if (avatar.getHeight() > avatar.getWidth()) {
      Log.debug("Original image is taller ({}) than wide ({}).",avatar.getHeight(),avatar.getWidth());
      x=0;
      y=(avatar.getHeight() - avatar.getWidth()) / 2;
      targetWidth=targetHeight=avatar.getWidth();
    }
 else {
      Log.debug("Original image is wider ({}) than tall ({}).",avatar.getWidth(),avatar.getHeight());
      x=(avatar.getWidth() - avatar.getHeight()) / 2;
      y=0;
      targetWidth=targetHeight=avatar.getHeight();
    }
    avatar=avatar.getSubimage(x,y,targetWidth,targetHeight);
  }
  final BufferedImage resizedAvatar=new BufferedImage(targetDimension,targetDimension,avatar.getType());
  final AffineTransform scale=AffineTransform.getScaleInstance((double)targetDimension / (double)targetWidth,(double)targetDimension / (double)targetHeight);
  final Graphics2D g=resizedAvatar.createGraphics();
  g.drawRenderedImage(avatar,scale);
  Log.debug("Resized image is {}x{}.",resizedAvatar.getWidth(),resizedAvatar.getHeight());
  try (final ByteArrayOutputStream bostream=new ByteArrayOutputStream();final ImageOutputStream iostream=new MemoryCacheImageOutputStream(bostream)){
    iw.setOutput(iostream);
    iw.write(resizedAvatar);
    final byte[] data=bostream.toByteArray();
    Log.debug("Resized image size: {} bytes.",data.length);
    return data;
  }
 catch (  IOException|RuntimeException ex) {
    Log.warn("Failed to resize avatar. An unexpected exception occurred while writing the resized image.",ex);
    return null;
  }
}
