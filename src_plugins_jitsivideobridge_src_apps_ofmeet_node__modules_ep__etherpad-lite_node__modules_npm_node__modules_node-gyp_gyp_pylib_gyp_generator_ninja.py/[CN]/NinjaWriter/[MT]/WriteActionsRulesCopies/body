def WriteActionsRulesCopies(self, spec, extra_sources, prebuild, mac_bundle_depends):
    'Write out the Actions, Rules, and Copies steps.  Return a path\n    representing the outputs of these steps.'
    outputs = []
    if self.is_mac_bundle:
        mac_bundle_resources = spec.get('mac_bundle_resources', [])[:]
    else:
        mac_bundle_resources = []
    extra_mac_bundle_resources = []
    if ('actions' in spec):
        outputs += self.WriteActions(spec['actions'], extra_sources, prebuild, extra_mac_bundle_resources)
    if ('rules' in spec):
        outputs += self.WriteRules(spec['rules'], extra_sources, prebuild, mac_bundle_resources, extra_mac_bundle_resources)
    if ('copies' in spec):
        outputs += self.WriteCopies(spec['copies'], prebuild, mac_bundle_depends)
    if (('sources' in spec) and (self.flavor == 'win')):
        outputs += self.WriteWinIdlFiles(spec, prebuild)
    stamp = self.WriteCollapsedDependencies('actions_rules_copies', outputs)
    if self.is_mac_bundle:
        self.WriteMacBundleResources((extra_mac_bundle_resources + mac_bundle_resources), mac_bundle_depends)
        self.WriteMacInfoPlist(mac_bundle_depends)
    return stamp
