def WriteMacBundle(self, spec, mac_bundle_depends, is_empty):
    assert self.is_mac_bundle
    package_framework = (spec['type'] in ('shared_library', 'loadable_module'))
    output = self.ComputeMacBundleOutput()
    if is_empty:
        output += '.stamp'
    variables = []
    self.AppendPostbuildVariable(variables, spec, output, self.target.binary, is_command_start=(not package_framework))
    if (package_framework and (not is_empty)):
        variables.append(('version', self.xcode_settings.GetFrameworkVersion()))
        self.ninja.build(output, 'package_framework', mac_bundle_depends, variables=variables)
    else:
        self.ninja.build(output, 'stamp', mac_bundle_depends, variables=variables)
    self.target.bundle = output
    return output
