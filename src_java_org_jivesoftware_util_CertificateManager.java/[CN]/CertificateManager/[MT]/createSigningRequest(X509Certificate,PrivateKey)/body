{
  StringBuilder sb=new StringBuilder();
  String subject=cert.getSubjectDN().getName();
  X509Name xname=new X509Name(subject);
  PublicKey pubKey=cert.getPublicKey();
  String signatureAlgorithm="DSA".equals(pubKey.getAlgorithm()) ? "SHA1withDSA" : "MD5withRSA";
  PKCS10CertificationRequest csr=new PKCS10CertificationRequest(signatureAlgorithm,xname,pubKey,null,privKey);
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  DEROutputStream deros=new DEROutputStream(baos);
  deros.writeObject(csr.getDERObject());
  String sTmp=new String(org.bouncycastle.util.encoders.Base64.encode(baos.toByteArray()));
  sb.append("-----BEGIN NEW CERTIFICATE REQUEST-----\n");
  for (int iCnt=0; iCnt < sTmp.length(); iCnt+=CERT_REQ_LINE_LENGTH) {
    int iLineLength;
    if ((iCnt + CERT_REQ_LINE_LENGTH) > sTmp.length()) {
      iLineLength=sTmp.length() - iCnt;
    }
 else {
      iLineLength=CERT_REQ_LINE_LENGTH;
    }
    sb.append(sTmp.substring(iCnt,iCnt + iLineLength)).append("\n");
  }
  sb.append("-----END NEW CERTIFICATE REQUEST-----\n");
  return sb.toString();
}
