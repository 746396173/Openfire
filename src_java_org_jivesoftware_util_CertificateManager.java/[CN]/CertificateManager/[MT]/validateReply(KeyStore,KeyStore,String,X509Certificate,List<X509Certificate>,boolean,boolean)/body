{
  int i;
  PublicKey userPubKey=userCert.getPublicKey();
  for (i=0; i < replyCerts.size(); i++) {
    if (userPubKey.equals(replyCerts.get(i).getPublicKey())) {
      break;
    }
  }
  if (i == replyCerts.size()) {
    throw new Exception("Certificate reply does not contain public key for <alias>: " + alias);
  }
  X509Certificate tmpCert=replyCerts.get(0);
  replyCerts.set(0,replyCerts.get(i));
  replyCerts.set(i,tmpCert);
  Principal issuer=replyCerts.get(0).getIssuerDN();
  for (i=1; i < replyCerts.size() - 1; i++) {
    int j;
    for (j=i; j < replyCerts.size(); j++) {
      Principal subject=replyCerts.get(j).getSubjectDN();
      if (subject.equals(issuer)) {
        tmpCert=replyCerts.get(i);
        replyCerts.set(i,replyCerts.get(j));
        replyCerts.set(j,tmpCert);
        issuer=replyCerts.get(i).getIssuerDN();
        break;
      }
    }
    if (j == replyCerts.size()) {
      throw new Exception("Incomplete certificate chain in reply");
    }
  }
  for (i=0; i < replyCerts.size() - 1; i++) {
    PublicKey pubKey=replyCerts.get(i + 1).getPublicKey();
    try {
      replyCerts.get(i).verify(pubKey);
    }
 catch (    Exception e) {
      throw new Exception("Certificate chain in reply does not verify: " + e.getMessage());
    }
  }
  if (!verifyRoot) {
    return replyCerts;
  }
  X509Certificate topCert=replyCerts.get(replyCerts.size() - 1);
  boolean foundInKeyStore=keyStore.getCertificateAlias(topCert) != null;
  boolean foundInCAStore=trustCACerts && (trustStore.getCertificateAlias(topCert) != null);
  if (!foundInKeyStore && !foundInCAStore) {
    boolean verified=false;
    X509Certificate rootCert=null;
    if (trustCACerts) {
      for (Enumeration<String> aliases=trustStore.aliases(); aliases.hasMoreElements(); ) {
        String name=aliases.nextElement();
        rootCert=(X509Certificate)trustStore.getCertificate(name);
        if (rootCert != null) {
          try {
            topCert.verify(rootCert.getPublicKey());
            verified=true;
            break;
          }
 catch (          Exception e) {
          }
        }
      }
    }
    if (!verified) {
      return null;
    }
 else {
      if (!topCert.getSubjectDN().equals(topCert.getIssuerDN())) {
        replyCerts.add(rootCert);
      }
    }
  }
  return replyCerts;
}
