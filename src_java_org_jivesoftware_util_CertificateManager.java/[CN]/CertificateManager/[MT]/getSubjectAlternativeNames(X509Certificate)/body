{
  List<String> identities=new ArrayList<String>();
  try {
    Collection<List<?>> altNames=certificate.getSubjectAlternativeNames();
    if (altNames == null) {
      return Collections.emptyList();
    }
    for (    List<?> item : altNames) {
      Integer type=(Integer)item.get(0);
      if (type == 0) {
        try {
          ASN1InputStream decoder=new ASN1InputStream((byte[])item.get(1));
          Object object=decoder.readObject();
          ASN1Sequence otherNameSeq=null;
          if (object != null && object instanceof ASN1Sequence) {
            otherNameSeq=(ASN1Sequence)object;
          }
 else {
            continue;
          }
          ASN1ObjectIdentifier objectId=(ASN1ObjectIdentifier)otherNameSeq.getObjectAt(0);
          Log.debug("Parsing otherName for subject alternative names: " + objectId.toString());
          if (!OTHERNAME_XMPP_OID.equals(objectId.getId())) {
            Log.debug("Ignoring non-XMPP otherName, " + objectId.getId());
            continue;
          }
          try {
            final String identity;
            ASN1Encodable o=otherNameSeq.getObjectAt(1);
            if (o instanceof DERTaggedObject) {
              ASN1TaggedObject ato=DERTaggedObject.getInstance(o);
              Log.debug("... processing DERTaggedObject: " + ato.toString());
              identity=ato.toString().substring(ato.toString().lastIndexOf(']') + 1).trim();
            }
 else {
              DERUTF8String derStr=DERUTF8String.getInstance(o);
              identity=derStr.getString();
            }
            if (identity != null && identity.length() > 0) {
              identities.add(identity);
            }
            decoder.close();
          }
 catch (          IllegalArgumentException ex) {
            Log.debug("Cannot parse altName, likely because of unknown record format.",ex);
          }
        }
 catch (        UnsupportedEncodingException e) {
        }
catch (        IOException e) {
        }
catch (        Exception e) {
          Log.error("Error decoding subjectAltName",e);
        }
      }
    }
  }
 catch (  CertificateParsingException e) {
    Log.error("Error parsing SubjectAltName in certificate: " + certificate.getSubjectDN(),e);
  }
  return identities;
}
