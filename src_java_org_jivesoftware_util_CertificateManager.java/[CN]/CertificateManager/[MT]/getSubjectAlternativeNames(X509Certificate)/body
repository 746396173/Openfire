{
  List<String> identities=new ArrayList<String>();
  try {
    Collection<List<?>> altNames=certificate.getSubjectAlternativeNames();
    if (altNames == null) {
      return Collections.emptyList();
    }
    for (    List item : altNames) {
      Integer type=(Integer)item.get(0);
      if (type == 0) {
        try {
          ASN1InputStream decoder=new ASN1InputStream((byte[])item.get(1));
          DERSequence otherNameSeq=(DERSequence)decoder.readObject();
          DERObjectIdentifier objectId=(DERObjectIdentifier)otherNameSeq.getObjectAt(0);
          if (!OTHERNAME_XMPP_OID.equals(objectId.getId())) {
            Log.debug("CertificateManager: Ignoring non-XMPP otherName, " + objectId.getId());
            continue;
          }
          try {
            DERUTF8String derStr=DERUTF8String.getInstance(otherNameSeq.getObjectAt(1));
            String identity=derStr.getString();
            if (identity != null && identity.length() > 0) {
              identities.add(identity);
            }
          }
 catch (          IllegalArgumentException ex) {
            Log.debug("Cannot parse altName, likely because of unknown record format.",ex);
          }
        }
 catch (        UnsupportedEncodingException e) {
        }
catch (        IOException e) {
        }
catch (        Exception e) {
          Log.error("CertificateManager: Error decoding subjectAltName",e);
        }
      }
    }
  }
 catch (  CertificateParsingException e) {
    Log.error("CertificateManager: Error parsing SubjectAltName in certificate: " + certificate.getSubjectDN(),e);
  }
  return identities;
}
