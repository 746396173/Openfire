{
  X509Certificate certificate=(X509Certificate)keyStore.getCertificate(alias);
  if (certificate != null) {
    Log.warn("Certificate already exists for alias: " + alias);
    return false;
  }
  PasswordFinder passwordFinder=new PasswordFinder(){
    public char[] getPassword(){
      return passPhrase != null ? passPhrase.toCharArray() : new char[]{};
    }
  }
;
  PEMReader pemReader=new PEMReader(new InputStreamReader(pkInputStream),passwordFinder);
  KeyPair kp=(KeyPair)pemReader.readObject();
  PrivateKey privKey=kp.getPrivate();
  List<X509Certificate> certs=new ArrayList<X509Certificate>();
  for (  Certificate cert : CertificateFactory.getInstance("X509").generateCertificates(inputStream)) {
    certs.add((X509Certificate)cert);
  }
  if (certs.isEmpty()) {
    throw new Exception("No certificates were found");
  }
  List<X509Certificate> newCerts;
  if (certs.size() == 1) {
    newCerts=establishCertChain(keyStore,trustStore,certificate,certs.get(0),trustCACerts);
  }
 else {
    newCerts=validateReply(keyStore,trustStore,alias,certificate,certs,trustCACerts,validateRoot);
  }
  if (newCerts != null) {
    keyStore.setKeyEntry(alias,privKey,keyPassword.toCharArray(),newCerts.toArray(new X509Certificate[newCerts.size()]));
    for (    CertificateEventListener listener : listeners) {
      try {
        listener.certificateCreated(keyStore,alias,certs.get(0));
        if (newCerts.size() > 1) {
          listener.certificateSigned(keyStore,alias,newCerts);
        }
      }
 catch (      Exception e) {
        Log.error(e);
      }
    }
    return true;
  }
 else {
    return false;
  }
}
