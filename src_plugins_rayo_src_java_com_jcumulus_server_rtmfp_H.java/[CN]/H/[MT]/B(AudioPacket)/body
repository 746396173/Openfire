{
  if (F)   return;
  if (!U && M.K())   A("");
  if (M.N().size() == 0) {
    J.error((new StringBuilder()).append("Session ").append(O).append(" has no any addresses!").toString());
    M.N().add(M.L().toString());
  }
  G.A();
  byte byte0=(byte)(a.L() | 0xfffffff0);
  A=a.E();
  if (byte0 == -3) {
    short word0=com.jcumulus.server.rtmfp.N.A(G.getTime());
    short word1=a.E();
    M.A((short)(word1 <= word0 ? word0 - word1 : 0));
  }
 else   if (byte0 != -7)   J.warn("Packet marker unknown : marker");
  byte byte1=0;
  E e=null;
  int i=0;
  int j=0;
  byte byte2=a.I() <= 0 ? -1 : a.L();
  boolean flag=false;
  do {
    if (byte2 == -1)     break;
    short word2=a.E();
    AudioPacket a1=new AudioPacket(a.G(),word2);
switch (byte2) {
case 112:
      break;
case 12:
    A("failed on client side");
  break;
case 76:
C();
return;
case 1:
if (!M.M()) A("Timeout connection client");
 else A((byte)65,0,null);
case 65:
E=0;
break;
case 94:
int k=a1.J();
com.jcumulus.server.rtmfp.d.H h=(com.jcumulus.server.rtmfp.d.H)C.get(Integer.valueOf(k));
if (h != null) h.D((new StringBuilder()).append("FlowWriter rejected on session ").append(O).toString());
 else J.warn((new StringBuilder()).append("FlowWriter ").append(k).append(" unfound for failed signal on session ").append(O).toString());
break;
case 24:
A("ack negative from server");
break;
case 81:
int l=a1.J();
com.jcumulus.server.rtmfp.d.H h1=(com.jcumulus.server.rtmfp.d.H)C.get(Integer.valueOf(l));
if (h1 != null) h1.A(a1);
 else J.warn((new StringBuilder()).append("FlowWriter ").append(l).append(" unfound for acknowledgment on session").append(O).toString());
break;
case 16:
byte1=a1.L();
int i1=a1.J();
i=a1.J() - 1;
j=a1.J() - 1;
if (U) break;
e=(E)L.get(Integer.valueOf(i1));
if ((byte1 & com.jcumulus.server.rtmfp.d.E.N.intValue()) != 0) {
byte abyte0[]=a1.F(a1.L() & 0xff);
if (e == null) e=A(i1,abyte0);
if (a1.L() > 0) {
if (a1.L() != 10) J.warn((new StringBuilder()).append("Unknown fullduplex header part for the flow '").append(i1).append("'").toString());
 else a1.J();
byte byte3;
for (byte3=a1.L(); byte3 > 0 && a1.I() > 0; byte3=a1.L()) {
J.warn((new StringBuilder()).append("Unknown message part on flow '").append(i1).append("'").toString());
a1.D(byte3);
}
if (byte3 > 0) J.error("Bad header message part, finished before scheduled");
}
}
if (e == null) J.warn((new StringBuilder()).append("Flow ").append(i1).append(" unfound").toString());
case 17:
i++;
j++;
if (byte2 == 17) byte1=a1.L();
if (e == null) break;
e.A(i,j,a1,byte1);
if (!Strings.isNullOrEmpty(e.G()) || M.K()) {
A(e.G());
e=null;
}
break;
default :
J.error((new StringBuilder()).append("Message type '").append(byte2).append("' unknown").toString());
break;
}
a.D(word2);
byte2=a.I() <= 0 ? -1 : a.L();
if (e != null && byte2 != 17) {
e.F();
if (e.B()) L.remove(Integer.valueOf(e.D()));
e=null;
}
}
 while (true);
A((byte)74,true);
}
