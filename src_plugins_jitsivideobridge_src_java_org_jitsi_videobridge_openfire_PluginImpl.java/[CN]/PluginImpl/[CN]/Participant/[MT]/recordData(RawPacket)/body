{
  if (packet != null) {
    final byte[] rtp=packet.getPayload();
    final int sequenceNumber=packet.getSequenceNumber();
    final boolean isMarked=packet.isPacketMarked();
    final long timestamp=packet.getTimestamp();
    try {
synchronized (_accumulator) {
        if (!_sequenceNumberingViolated && _lastSequenceNumber.intValue() > -1 && Vp8Packet.getSequenceNumberDelta(sequenceNumber,_lastSequenceNumber).intValue() > 1)         _sequenceNumberingViolated=true;
        _lastSequenceNumber=sequenceNumber;
        Vp8Packet packet2=Vp8Packet.parseBytes(rtp);
        if (packet2 == null)         return;
        _accumulator.add(packet2);
        byte encodedFrame[]=null;
        if (isMarked) {
          encodedFrame=Vp8Packet.depacketize(_accumulator.getPackets());
          boolean isKeyframe=encodedFrame != null && encodedFrame.length > 0 && (encodedFrame[0] & 1) == 0;
          if (_sequenceNumberingViolated && isKeyframe)           _sequenceNumberingViolated=false;
          _accumulator.reset();
          if (recorder != null && encodedFrame != null && _sequenceNumberingViolated == false) {
            byte[] full=Arrays.copyOf(encodedFrame,encodedFrame.length);
            recorder.write(full,0,full.length,isKeyframe,timestamp,true);
            if (isKeyframe && snapshot < 1) {
              Log.info("recordData " + full + " "+ sequenceNumber+ " "+ timestamp);
              recorder.writeWebPImage(full,0,full.length,timestamp);
              snapshot++;
            }
          }
        }
      }
    }
 catch (    Exception e) {
      Log.error("Error writing video recording",e);
    }
  }
 else {
    Log.error("record video cannot parse packet data " + packet);
  }
}
