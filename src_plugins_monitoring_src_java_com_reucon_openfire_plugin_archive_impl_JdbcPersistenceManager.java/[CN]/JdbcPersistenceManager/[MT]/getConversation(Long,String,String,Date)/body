{
  Conversation conversation=null;
  StringBuilder querySB;
  Connection con=null;
  PreparedStatement pstmt=null;
  ResultSet rs=null;
  querySB=new StringBuilder(SELECT_CONVERSATIONS);
  querySB.append(" WHERE ");
  if (conversationId != null) {
    querySB.append(CONVERSATION_ID).append(" = ? ");
  }
 else {
    querySB.append(CONVERSATION_OWNER_JID).append(" = ?");
    if (withJid != null) {
      querySB.append(" AND ");
      querySB.append(CONVERSATION_WITH_JID);
    }
    if (start != null) {
      querySB.append(" AND ");
      querySB.append(CONVERSATION_START_TIME).append(" = ? ");
    }
  }
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(querySB.toString());
    int i=1;
    if (conversationId != null) {
      pstmt.setLong(1,conversationId);
    }
 else {
      pstmt.setString(i++,ownerJid);
      if (withJid != null) {
        pstmt.setString(i++,withJid);
        pstmt.setString(i++,withJid);
      }
      if (start != null) {
        pstmt.setLong(i++,dateToMillis(start));
      }
    }
    rs=pstmt.executeQuery();
    Log.debug("getConversation: SELECT_CONVERSATIONS: " + pstmt.toString());
    if (rs.next()) {
      conversation=extractConversation(rs);
    }
 else {
      return null;
    }
    rs.close();
    pstmt.close();
    pstmt=con.prepareStatement(SELECT_PARTICIPANTS_BY_CONVERSATION);
    pstmt.setLong(1,conversation.getId());
    rs=pstmt.executeQuery();
    Log.debug("getConversation: SELECT_PARTICIPANTS_BY_CONVERSATION: " + pstmt.toString());
    while (rs.next()) {
      for (      Participant participant : extractParticipant(rs)) {
        conversation.addParticipant(participant);
      }
    }
    rs.close();
    pstmt.close();
    pstmt=con.prepareStatement(SELECT_MESSAGES_BY_CONVERSATION);
    pstmt.setLong(1,conversation.getId());
    pstmt.setString(2,conversation.getOwnerJid());
    rs=pstmt.executeQuery();
    Log.debug("getConversation: SELECT_MESSAGES_BY_CONVERSATION: " + pstmt.toString());
    while (rs.next()) {
      ArchivedMessage message;
      message=extractMessage(rs);
      message.setConversation(conversation);
      conversation.addMessage(message);
    }
  }
 catch (  SQLException sqle) {
    Log.error("Error selecting conversation",sqle);
  }
 finally {
    DbConnectionManager.closeConnection(rs,pstmt,con);
  }
  return conversation;
}
