{
  final List<Conversation> conversations;
  final StringBuilder querySB;
  conversations=new ArrayList<Conversation>();
  if (conversationIds.isEmpty()) {
    return conversations;
  }
  querySB=new StringBuilder(SELECT_CONVERSATIONS);
  querySB.append(" WHERE ");
  querySB.append(CONVERSATION_ID);
  querySB.append(" IN ( ");
  for (int i=0; i < conversationIds.size(); i++) {
    if (i == 0) {
      querySB.append("?");
    }
 else {
      querySB.append(",?");
    }
  }
  querySB.append(" )");
  querySB.append(" ORDER BY ").append(CONVERSATION_END_TIME);
  Connection con=null;
  PreparedStatement pstmt=null;
  ResultSet rs=null;
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(querySB.toString());
    int i=0;
    for (    Long id : conversationIds) {
      pstmt.setLong(++i,id);
    }
    rs=pstmt.executeQuery();
    while (rs.next()) {
      conversations.add(extractConversation(rs));
    }
  }
 catch (  SQLException sqle) {
    Log.error("Error selecting conversations",sqle);
  }
 finally {
    DbConnectionManager.closeConnection(rs,pstmt,con);
  }
  return conversations;
}
