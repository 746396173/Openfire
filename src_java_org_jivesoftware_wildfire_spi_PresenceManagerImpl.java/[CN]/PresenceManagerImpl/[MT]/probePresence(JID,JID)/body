{
  try {
    if (server.isLocal(probee)) {
      Collection<ClientSession> sessions=sessionManager.getSessions(probee.getNode());
      if (sessions.isEmpty()) {
        String presenceXML=userManager.getUserProperty(probee.getNode(),LAST_PRESENCE_PROP);
        if (presenceXML != null) {
          try {
            Document element=DocumentHelper.parseText(presenceXML);
            Presence presencePacket=new Presence(element.getRootElement());
            presencePacket.setFrom(probee.toBareJID());
            presencePacket.setTo(prober);
            PrivacyList list=PrivacyListManager.getInstance().getDefaultPrivacyList(probee.getNode());
            if (list == null || !list.shouldBlockPacket(presencePacket)) {
              deliverer.deliver(presencePacket);
            }
          }
 catch (          Exception e) {
            Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
          }
        }
      }
 else {
        for (        ClientSession session : sessions) {
          Presence presencePacket=session.getPresence().createCopy();
          presencePacket.setFrom(session.getAddress());
          presencePacket.setTo(prober);
          PrivacyList list=session.getActiveList();
          list=list == null ? session.getDefaultList() : list;
          if (list != null) {
            if (list.shouldBlockPacket(presencePacket)) {
              continue;
            }
          }
          try {
            deliverer.deliver(presencePacket);
          }
 catch (          Exception e) {
            Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
          }
        }
      }
    }
 else {
      Component component=getPresenceComponent(probee);
      if (component != null) {
        Presence presence=new Presence();
        presence.setType(Presence.Type.probe);
        presence.setFrom(prober);
        presence.setTo(probee);
        component.processPacket(presence);
      }
 else {
        if (server.isRemote(probee)) {
          Presence probePresence=new Presence();
          probePresence.setType(Presence.Type.probe);
          probePresence.setFrom(prober);
          probePresence.setTo(probee.toBareJID());
          deliverer.deliver(probePresence);
        }
 else {
          componentManager.addPresenceRequest(prober,probee);
        }
      }
    }
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
  }
}
