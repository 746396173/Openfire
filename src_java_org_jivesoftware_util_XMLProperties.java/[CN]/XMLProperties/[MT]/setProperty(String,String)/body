{
  if (!StringEscapeUtils.escapeXml(name).equals(name)) {
    throw new IllegalArgumentException("Property name cannot contain XML entities.");
  }
  if (name == null) {
    return;
  }
  if (value == null) {
    value="";
  }
  propertyCache.put(name,value);
  String[] propName=parsePropertyName(name);
  Element element=document.getRootElement();
  for (  String aPropName : propName) {
    if (element.element(aPropName) == null) {
      element.addElement(aPropName);
    }
    element=element.element(aPropName);
  }
  if (value.startsWith("<![CDATA[")) {
    Iterator it=element.nodeIterator();
    while (it.hasNext()) {
      Node node=(Node)it.next();
      if (node instanceof CDATA) {
        element.remove(node);
        break;
      }
    }
    element.addCDATA(value.substring(9,value.length() - 3));
  }
 else {
    String propValue=StringEscapeUtils.escapeXml(value);
    if (JiveGlobals.isPropertyEncrypted(name)) {
      propValue=JiveGlobals.getPropertyEncryptor().encrypt(propValue);
      element.addAttribute(ENCRYPTED_ATTRIBUTE,"true");
    }
    element.setText(propValue);
  }
  saveProperties();
  Map<String,Object> params=new HashMap<String,Object>();
  params.put("value",value);
  PropertyEventDispatcher.dispatchEvent(name,PropertyEventDispatcher.EventType.xml_property_set,params);
}
