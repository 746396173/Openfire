{
  HashMap<String,ArrayList<String>> userToGroups=new HashMap<String,ArrayList<String>>();
  for (  YahooGroup group : yahooSession.getGroups()) {
    for (Enumeration e=group.getMembers().elements(); e.hasMoreElements(); ) {
      YahooUser user=(YahooUser)e.nextElement();
      ArrayList<String> groups;
      if (userToGroups.containsKey(user.getId())) {
        groups=userToGroups.get(user.getId());
      }
 else {
        groups=new ArrayList<String>();
      }
      if (!groups.contains(group.getName())) {
        groups.add(group.getName());
      }
      userToGroups.put(user.getId(),groups);
    }
  }
  List<TransportBuddy> legacyusers=new ArrayList<TransportBuddy>();
  for (  Object userObj : yahooSession.getUsers().values()) {
    YahooUser user=(YahooUser)userObj;
    PseudoRosterItem rosterItem=pseudoRoster.getItem(user.getId());
    String nickname=null;
    if (rosterItem != null) {
      nickname=rosterItem.getNickname();
    }
    if (nickname == null) {
      nickname=user.getId();
    }
    if (userToGroups.containsKey(user.getId())) {
      legacyusers.add(new TransportBuddy(user.getId(),nickname,userToGroups.get(user.getId()).get(0)));
    }
 else {
      legacyusers.add(new TransportBuddy(user.getId(),nickname,null));
    }
  }
  try {
    getTransport().syncLegacyRoster(getJID(),legacyusers);
  }
 catch (  UserNotFoundException e) {
    Log.error("Unable to sync yahoo contact list for " + getJID());
  }
  for (  Object userObj : yahooSession.getUsers().values()) {
    YahooUser user=(YahooUser)userObj;
    Presence p=new Presence();
    p.setTo(getJID());
    p.setFrom(getTransport().convertIDToJID(user.getId()));
    String custommsg=user.getCustomStatusMessage();
    if (custommsg != null) {
      p.setStatus(custommsg);
    }
    ((YahooTransport)getTransport()).setUpPresencePacket(p,user.getStatus());
    getTransport().sendPacket(p);
  }
}
