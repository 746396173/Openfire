{
  Integer startIndex=Integer.valueOf(0);
  ArrayList list=new ArrayList();
  Byte firstByte=super.getFirstByte();
  for (Integer i=Integer.valueOf(0); i.intValue() < firstByte.byteValue(); ) {
    list.add(BitAssistant.toLongFromIntegerNetwork(super.getPayload(),startIndex));
    startIndex=Integer.valueOf(startIndex.intValue() + 4);
    Integer integer=i;
    Integer integer1=i=Integer.valueOf(i.intValue() + 1);
    Integer _tmp=integer;
  }
  setSynchronizationAndContributingSources((Long[])list.toArray(new Long[0]));
  if (startIndex.intValue() < ArrayExtensions.getLength(super.getPayload()).intValue()) {
    Short count=BitAssistant.toShortNetwork(new Byte[]{Byte.valueOf((byte)0),super.getPayload()[startIndex.intValue()]},Integer.valueOf(0));
    setReasonForLeaving(Encoding.getUTF8().getString(super.getPayload(),startIndex.intValue() + 1,count.shortValue()));
  }
}
