{
  IQ reply=IQ.createResultIQ(packet);
  if (IQ.Type.set == packet.getType()) {
    reply.setChildElement(packet.getChildElement().createCopy());
    reply.setError(PacketError.Condition.feature_not_implemented);
    return reply;
  }
  DiscoItemsProvider itemsProvider=getProvider(packet.getTo() == null ? XMPPServer.getInstance().getServerInfo().getXMPPDomain() : packet.getTo().getDomain());
  if (itemsProvider != null) {
    String name=packet.getTo() == null ? null : packet.getTo().getNode();
    if (name == null || name.trim().length() == 0) {
      name=null;
    }
    Element iq=packet.getChildElement();
    String node=iq.attributeValue("node");
    Iterator<DiscoItem> itemsItr=itemsProvider.getItems(name,node,packet.getFrom());
    if (itemsItr != null) {
      reply.setChildElement(iq.createCopy());
      Element queryElement=reply.getChildElement();
      final Element rsmElement=packet.getChildElement().element(QName.get("set",ResultSet.NAMESPACE_RESULT_SET_MANAGEMENT));
      final boolean applyRSM=rsmElement != null && itemsItr.hasNext();
      if (applyRSM) {
        if (!ResultSet.isValidRSMRequest(rsmElement)) {
          reply.setError(PacketError.Condition.bad_request);
          return reply;
        }
        final List<DiscoItem> rsmResults;
        final List<DiscoItem> allItems=new ArrayList<DiscoItem>();
        while (itemsItr.hasNext()) {
          allItems.add(itemsItr.next());
        }
        final ResultSet<DiscoItem> rs=new ResultSetImpl<DiscoItem>(allItems);
        try {
          rsmResults=rs.applyRSMDirectives(rsmElement);
        }
 catch (        NullPointerException e) {
          final IQ itemNotFound=IQ.createResultIQ(packet);
          itemNotFound.setError(PacketError.Condition.item_not_found);
          return itemNotFound;
        }
        for (        DiscoItem item : rsmResults) {
          final Element resultElement=item.getElement();
          resultElement.setQName(new QName(resultElement.getName(),queryElement.getNamespace()));
          queryElement.add(resultElement.createCopy());
        }
        queryElement.remove(queryElement.element(QName.get("set",ResultSet.NAMESPACE_RESULT_SET_MANAGEMENT)));
        queryElement.add(rs.generateSetElementFromResults(rsmResults));
      }
 else {
        Element item;
        while (itemsItr.hasNext()) {
          item=itemsItr.next().getElement();
          item.setQName(new QName(item.getName(),queryElement.getNamespace()));
          queryElement.add(item.createCopy());
        }
      }
    }
 else {
      reply.setChildElement(packet.getChildElement().createCopy());
      reply.setError(PacketError.Condition.item_not_found);
    }
  }
 else {
    reply.setChildElement(packet.getChildElement().createCopy());
    reply.setError(PacketError.Condition.item_not_found);
  }
  return reply;
}
