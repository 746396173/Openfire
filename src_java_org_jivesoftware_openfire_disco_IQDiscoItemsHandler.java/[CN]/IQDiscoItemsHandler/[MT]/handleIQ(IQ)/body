{
  IQ reply=IQ.createResultIQ(packet);
  if (IQ.Type.set == packet.getType()) {
    reply.setChildElement(packet.getChildElement().createCopy());
    reply.setError(PacketError.Condition.feature_not_implemented);
    return reply;
  }
  DiscoItemsProvider itemsProvider=getProvider(packet.getTo() == null ? XMPPServer.getInstance().getServerInfo().getName() : packet.getTo().getDomain());
  if (itemsProvider != null) {
    String name=packet.getTo() == null ? null : packet.getTo().getNode();
    if (name == null || name.trim().length() == 0) {
      name=null;
    }
    Element iq=packet.getChildElement();
    String node=iq.attributeValue("node");
    Iterator<Element> itemsItr=itemsProvider.getItems(name,node,packet.getFrom());
    if (itemsItr != null) {
      reply.setChildElement(iq.createCopy());
      Element queryElement=reply.getChildElement();
      Element item;
      while (itemsItr.hasNext()) {
        item=itemsItr.next();
        item.setQName(new QName(item.getName(),queryElement.getNamespace()));
        queryElement.add(item.createCopy());
      }
    }
 else {
      reply.setChildElement(packet.getChildElement().createCopy());
      reply.setError(PacketError.Condition.item_not_found);
    }
  }
 else {
    reply.setChildElement(packet.getChildElement().createCopy());
    reply.setError(PacketError.Condition.item_not_found);
  }
  return reply;
}
