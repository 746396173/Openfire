{
  if (message == null) {
    return;
  }
  if (message.getBody() == null || message.getBody().length() == 0) {
    if (message.getChildElement("event","http://jabber.org/protocol/pubsub#event") == null) {
      return;
    }
  }
  JID recipient=message.getTo();
  String username=recipient.getNode();
  if (username == null || !UserManager.getInstance().isRegisteredUser(recipient)) {
    return;
  }
 else   if (!XMPPServer.getInstance().getServerInfo().getXMPPDomain().equals(recipient.getDomain())) {
    return;
  }
  long messageID=SequenceManager.nextID(JiveConstants.OFFLINE);
  String msgXML=message.getElement().asXML();
  Connection con=null;
  PreparedStatement pstmt=null;
  try {
    con=DbConnectionManager.getConnection();
    pstmt=con.prepareStatement(INSERT_OFFLINE);
    pstmt.setString(1,username);
    pstmt.setLong(2,messageID);
    pstmt.setString(3,StringUtils.dateToMillis(new java.util.Date()));
    pstmt.setInt(4,msgXML.length());
    pstmt.setString(5,msgXML);
    pstmt.executeUpdate();
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error"),e);
  }
 finally {
    DbConnectionManager.closeConnection(pstmt,con);
  }
  if (sizeCache.containsKey(username)) {
    int size=sizeCache.get(username);
    size+=msgXML.length();
    sizeCache.put(username,size);
  }
}
