{
  boolean wasPresenceBased=isPresenceBasedDelivery();
  if (DataForm.Type.cancel.equals(completedForm.getType())) {
  }
 else   if (DataForm.Type.submit.equals(completedForm.getType())) {
    List<String> values;
    String booleanValue;
    FormField ownerField=completedForm.getField("pubsub#owner");
    boolean ownersSent=ownerField != null;
    List<JID> owners=new ArrayList<JID>();
    if (ownersSent) {
      for (      String value : ownerField.getValues()) {
        try {
          owners.add(new JID(value));
        }
 catch (        Exception e) {
        }
      }
    }
    if (ownersSent && owners.isEmpty()) {
      throw new NotAcceptableException();
    }
    for (    FormField field : completedForm.getFields()) {
      if ("FORM_TYPE".equals(field.getVariable())) {
      }
 else       if ("pubsub#deliver_payloads".equals(field.getVariable())) {
        values=field.getValues();
        booleanValue=(values.size() > 0 ? values.get(0) : "1");
        deliverPayloads="1".equals(booleanValue);
      }
 else       if ("pubsub#notify_config".equals(field.getVariable())) {
        values=field.getValues();
        booleanValue=(values.size() > 0 ? values.get(0) : "1");
        notifyConfigChanges="1".equals(booleanValue);
      }
 else       if ("pubsub#notify_delete".equals(field.getVariable())) {
        values=field.getValues();
        booleanValue=(values.size() > 0 ? values.get(0) : "1");
        notifyDelete="1".equals(booleanValue);
      }
 else       if ("pubsub#notify_retract".equals(field.getVariable())) {
        values=field.getValues();
        booleanValue=(values.size() > 0 ? values.get(0) : "1");
        notifyRetract="1".equals(booleanValue);
      }
 else       if ("pubsub#presence_based_delivery".equals(field.getVariable())) {
        values=field.getValues();
        booleanValue=(values.size() > 0 ? values.get(0) : "1");
        presenceBasedDelivery="1".equals(booleanValue);
      }
 else       if ("pubsub#subscribe".equals(field.getVariable())) {
        values=field.getValues();
        booleanValue=(values.size() > 0 ? values.get(0) : "1");
        subscriptionEnabled="1".equals(booleanValue);
      }
 else       if ("pubsub#subscription_required".equals(field.getVariable())) {
        values=field.getValues();
        booleanValue=(values.size() > 0 ? values.get(0) : "1");
        subscriptionConfigurationRequired="1".equals(booleanValue);
      }
 else       if ("pubsub#type".equals(field.getVariable())) {
        values=field.getValues();
        payloadType=values.size() > 0 ? values.get(0) : " ";
      }
 else       if ("pubsub#body_xslt".equals(field.getVariable())) {
        values=field.getValues();
        bodyXSLT=values.size() > 0 ? values.get(0) : " ";
      }
 else       if ("pubsub#dataform_xslt".equals(field.getVariable())) {
        values=field.getValues();
        dataformXSLT=values.size() > 0 ? values.get(0) : " ";
      }
 else       if ("pubsub#access_model".equals(field.getVariable())) {
        values=field.getValues();
        if (values.size() > 0) {
          accessModel=AccessModel.valueOf(values.get(0));
        }
      }
 else       if ("pubsub#publish_model".equals(field.getVariable())) {
        values=field.getValues();
        if (values.size() > 0) {
          publisherModel=PublisherModel.valueOf(values.get(0));
        }
      }
 else       if ("pubsub#roster_groups_allowed".equals(field.getVariable())) {
        rosterGroupsAllowed=new ArrayList<String>();
        for (        String value : field.getValues()) {
          rosterGroupsAllowed.add(value);
        }
      }
 else       if ("pubsub#contact".equals(field.getVariable())) {
        contacts=new ArrayList<JID>();
        for (        String value : field.getValues()) {
          try {
            contacts.add(new JID(value));
          }
 catch (          Exception e) {
          }
        }
      }
 else       if ("pubsub#description".equals(field.getVariable())) {
        values=field.getValues();
        description=values.size() > 0 ? values.get(0) : " ";
      }
 else       if ("pubsub#language".equals(field.getVariable())) {
        values=field.getValues();
        language=values.size() > 0 ? values.get(0) : " ";
      }
 else       if ("pubsub#title".equals(field.getVariable())) {
        values=field.getValues();
        name=values.size() > 0 ? values.get(0) : " ";
      }
 else       if ("pubsub#itemreply".equals(field.getVariable())) {
        values=field.getValues();
        if (values.size() > 0) {
          replyPolicy=ItemReplyPolicy.valueOf(values.get(0));
        }
      }
 else       if ("pubsub#replyroom".equals(field.getVariable())) {
        replyRooms=new ArrayList<JID>();
        for (        String value : field.getValues()) {
          try {
            replyRooms.add(new JID(value));
          }
 catch (          Exception e) {
          }
        }
      }
 else       if ("pubsub#replyto".equals(field.getVariable())) {
        replyTo=new ArrayList<JID>();
        for (        String value : field.getValues()) {
          try {
            replyTo.add(new JID(value));
          }
 catch (          Exception e) {
          }
        }
      }
 else {
        configure(field);
      }
    }
    if (ownersSent) {
      Collection<JID> oldOwners=getOwners();
      oldOwners.removeAll(owners);
      for (      JID jid : oldOwners) {
        removeOwner(jid);
      }
      owners.removeAll(getOwners());
      for (      JID jid : owners) {
        addOwner(jid);
      }
    }
    FormField publisherField=completedForm.getField("pubsub#publisher");
    if (publisherField != null) {
      List<JID> publishers=new ArrayList<JID>();
      for (      String value : publisherField.getValues()) {
        try {
          publishers.add(new JID(value));
        }
 catch (        Exception e) {
        }
      }
      Collection<JID> oldPublishers=getPublishers();
      oldPublishers.removeAll(publishers);
      for (      JID jid : oldPublishers) {
        removePublisher(jid);
      }
      publishers.removeAll(getPublishers());
      for (      JID jid : publishers) {
        addPublisher(jid);
      }
    }
    postConfigure(completedForm);
    modificationDate=new Date();
    nodeConfigurationChanged();
  }
  saveToDB();
  if (wasPresenceBased != isPresenceBasedDelivery()) {
    if (isPresenceBasedDelivery()) {
      addPresenceSubscriptions();
    }
 else {
      cancelPresenceSubscriptions();
    }
  }
}
