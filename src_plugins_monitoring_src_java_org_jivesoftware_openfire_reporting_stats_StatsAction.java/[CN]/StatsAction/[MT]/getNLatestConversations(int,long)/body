{
  List<Map> cons=new ArrayList<Map>();
  MonitoringPlugin plugin=(MonitoringPlugin)XMPPServer.getInstance().getPluginManager().getPlugin("monitoring");
  ConversationManager conversationManager=(ConversationManager)plugin.getModule(ConversationManager.class);
  Collection<Conversation> conversations=conversationManager.getConversations();
  List<Conversation> lConversations=Arrays.asList(conversations.toArray(new Conversation[conversations.size()]));
  Collections.sort(lConversations,conversationComparator);
  int counter=0;
  for (Iterator<Conversation> i=lConversations.iterator(); i.hasNext() && counter < count; ) {
    Conversation con=i.next();
    if (mostRecentConversationID == con.getConversationID()) {
      break;
    }
 else {
      Map mCon=new HashMap();
      mCon.put("conversationid",con.getConversationID());
      String users[];
      int usersIdx=0;
      if (con.getRoom() == null) {
        users=new String[con.getParticipants().size()];
        for (        JID jid : con.getParticipants()) {
          String identifier=jid.toBareJID();
          try {
            identifier=UserNameManager.getUserName(jid,jid.toBareJID());
          }
 catch (          UserNotFoundException e) {
          }
          users[usersIdx++]=StringUtils.abbreviate(identifier,20);
        }
      }
 else {
        users=new String[2];
        users[0]=LocaleUtils.getLocalizedString("dashboard.group_conversation","monitoring");
        try {
          users[1]="(<i>" + LocaleUtils.getLocalizedString("muc.room.summary.room") + ": <a href='../../muc-room-occupants.jsp?roomName="+ URLEncoder.encode(con.getRoom().getNode(),"UTF-8")+ "'>"+ con.getRoom().getNode()+ "</a></i>)";
        }
 catch (        UnsupportedEncodingException e) {
          Log.error(e);
        }
      }
      mCon.put("users",users);
      mCon.put("lastactivity",formatTimeLong(con.getLastActivity()));
      mCon.put("messages",con.getMessageCount());
      cons.add(0,mCon);
      counter++;
    }
  }
  return cons;
}
