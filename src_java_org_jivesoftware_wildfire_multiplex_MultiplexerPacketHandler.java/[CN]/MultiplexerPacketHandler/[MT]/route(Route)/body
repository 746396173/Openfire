{
  String streamID=route.getStreamID();
  if (streamID == null) {
    Element extraError=DocumentHelper.createElement(QName.get("id-required","http://jabber.org/protocol/connectionmanager#errors"));
    sendErrorPacket(route,PacketError.Condition.bad_request,extraError);
  }
  ClientSession session=multiplexerManager.getClientSession(connectionManagerDomain,streamID);
  if (session == null) {
    sendErrorPacket(route,PacketError.Condition.item_not_found,null);
    return;
  }
  Element wrappedElement=route.getChildElement();
  String tag=wrappedElement.getName();
  try {
    if ("auth".equals(tag) || "response".equals(tag)) {
      SASLAuthentication.handle(session,wrappedElement);
    }
 else     if ("iq".equals(tag)) {
      processIQ(session,getIQ(wrappedElement));
    }
 else     if ("message".equals(tag)) {
      processMessage(session,new Message(wrappedElement));
    }
 else     if ("presence".equals(tag)) {
      processPresence(session,new Presence(wrappedElement));
    }
 else {
      Element extraError=DocumentHelper.createElement(QName.get("unknown-stanza","http://jabber.org/protocol/connectionmanager#errors"));
      sendErrorPacket(route,PacketError.Condition.bad_request,extraError);
    }
  }
 catch (  UnsupportedEncodingException e) {
    Log.error("Error processing wrapped packet: " + wrappedElement.asXML(),e);
    sendErrorPacket(route,PacketError.Condition.internal_server_error,null);
  }
}
