{
  if (optimize && item.isOnlyShared() && item.getSubStatus() == RosterItem.SUB_FROM) {
    return;
  }
  List<String> groups=new ArrayList<String>(item.getGroups());
  for (  Group sharedGroup : item.getSharedGroups()) {
    String displayName=sharedGroup.getProperties().get("sharedRoster.displayName");
    if (displayName != null) {
      groups.add(displayName);
    }
  }
  org.xmpp.packet.Roster roster=new org.xmpp.packet.Roster();
  roster.setType(IQ.Type.set);
  roster.addItem(item.getJid(),item.getNickname(),getAskStatus(item.getAskStatus()),org.xmpp.packet.Roster.Subscription.valueOf(item.getSubStatus().getName()),groups);
  broadcast(roster);
}
