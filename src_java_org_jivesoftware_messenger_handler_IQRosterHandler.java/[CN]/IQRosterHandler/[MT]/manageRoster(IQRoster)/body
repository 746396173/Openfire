{
  IQ returnPacket=null;
  Session session=packet.getOriginatingSession();
  XMPPPacket.Type type=packet.getType();
  try {
    User sessionUser=userManager.getUser(session.getUsername());
    CachedRoster cachedRoster=(CachedRoster)sessionUser.getRoster();
    if (IQ.GET == type) {
      returnPacket=cachedRoster.getReset();
      returnPacket.setType(IQ.RESULT);
      returnPacket.setRecipient(session.getAddress());
      returnPacket.setID(packet.getID());
      deliverer.deliver(returnPacket);
      returnPacket=null;
    }
 else     if (IQ.SET == type) {
      Iterator itemIter=packet.getRosterItems();
      while (itemIter.hasNext()) {
        RosterItem item=(RosterItem)itemIter.next();
        if (item.getSubStatus() == RosterItem.SUB_REMOVE) {
          removeItem(cachedRoster,packet.getSender(),item);
        }
 else {
          if (cachedRoster.isRosterItem(item.getJid())) {
            CachedRosterItem cachedItem=(CachedRosterItem)cachedRoster.getRosterItem(item.getJid());
            cachedItem.setAsCopyOf(item);
            cachedRoster.updateRosterItem(cachedItem);
          }
 else {
            cachedRoster.createRosterItem(item);
          }
        }
      }
      returnPacket=packet.createResult();
    }
  }
 catch (  UserNotFoundException e) {
    throw new UnauthorizedException(e);
  }
  return returnPacket;
}
