{
  Response resp=evt.getResponse();
  String method=((CSeqHeader)resp.getHeader(CSeqHeader.NAME)).getMethod();
  int status=resp.getStatusCode();
  Log.info("[[SIP]] Got a response to " + method);
  try {
    SipListener sipListener=findSipListener(evt);
    if (sipListener != null) {
      sipListener.processResponse(evt);
      return;
    }
    if (method.equals(Request.SUBSCRIBE)) {
      if (subscribeEmu) {
        status=500;
      }
      if (status == Response.PROXY_AUTHENTICATION_REQUIRED || status == Response.UNAUTHORIZED) {
        ClientTransaction clientTransaction=evt.getClientTransaction();
        if (SipService.sipAccount != null) {
          try {
            SipService.handleChallenge(resp,clientTransaction,SipService.sipAccount).sendRequest();
          }
 catch (          Exception e) {
            Log.error("Proxy authentification failed",e);
          }
        }
        return;
      }
 else       if (status >= 200 && status < 300) {
        Log.info("[[SIP]] 200 OK to SUBSCRIBE, updating route info");
        String callid=((CallIdHeader)resp.getHeader(CallIdHeader.NAME)).getCallId();
        FromHeader fh=(FromHeader)resp.getHeader("From");
        String user=((SipURI)fh.getAddress().getURI()).getUser();
        SipSubscription sub=SipSubscriptionManager.getSubscriptionByCallID(user,callid);
        if (sub != null) {
          sub.updateSubscription(resp);
        }
      }
 else       if (status >= 400) {
        Log.info("[[SIP]] Subscribe failed");
        FromHeader fh=(FromHeader)resp.getHeader("From");
        String dest=((SipURI)fh.getAddress().getURI()).getUser();
        ToHeader th=(ToHeader)resp.getHeader("To");
        String src=((SipURI)th.getAddress().getURI()).getUser();
        String callid=((CallIdHeader)resp.getHeader(CallIdHeader.NAME)).getCallId();
        if (status != 404) {
          Log.info("[[SIP]] emulating presence");
        }
        @SuppressWarnings("unused") SipSubscription sub=SipSubscriptionManager.removeSubscriptionByCallID(dest,callid);
      }
    }
 else     if (method.equals(Request.INVITE)) {
      if (status >= 200 && status < 300) {
        Dialog d=evt.getDialog();
        if (d == null) {
          Log.error("[[SIP]] Dialog is null");
          return;
        }
        CallSession cs=(CallSession)d.getApplicationData();
        if (cs == null) {
          Log.error("[[SIP]] CallSession is null");
          ClientTransaction ct=evt.getClientTransaction();
          if (ct == null) {
            Log.error("[[SIP]] Client transaction null!!!!");
            return;
          }
 else           if (ct.getApplicationData() == null) {
            Log.error("[[SIP]] Client transaction application data null!!!!");
            return;
          }
          Log.info("[[SIP]] Found CallSession in transaction, re-pairing");
          d.setApplicationData(ct.getApplicationData());
          cs=(CallSession)ct.getApplicationData();
          cs.sipDialog=d;
        }
        d.sendAck(d.createAck(d.getLocalSeqNumber()));
        FromHeader fh=(FromHeader)resp.getHeader("From");
        String dest=((SipURI)fh.getAddress().getURI()).getUser();
        if (!cs.callAccepted) {
          cs.parseSDP(new String(resp.getRawContent()),false);
          cs.callAccepted=true;
        }
      }
 else       if (status == Response.PROXY_AUTHENTICATION_REQUIRED || status == Response.UNAUTHORIZED) {
        ClientTransaction clientTransaction=evt.getClientTransaction();
        if (SipService.sipAccount != null) {
          try {
            SipService.handleChallenge(resp,clientTransaction,SipService.sipAccount).sendRequest();
          }
 catch (          Exception e) {
            Log.error("Proxy authentification failed",e);
          }
        }
        return;
      }
 else       if (status >= 400) {
        Log.info("[[SIP]] Invite failed, ending call");
        Dialog d=evt.getDialog();
        if (d == null) {
          Log.error("[[SIP]] Dialog is null");
          return;
        }
        CallSession cs=(CallSession)d.getApplicationData();
        if (cs != null) {
          cs.sendBye();
        }
      }
    }
 else     if (method.equals(Request.NOTIFY)) {
      if (status == 418) {
        Log.info("[[SIP]] Subcription is no longer known, removing");
        FromHeader fh=(FromHeader)resp.getHeader("From");
        String dest=((SipURI)fh.getAddress().getURI()).getUser();
        String callid=((CallIdHeader)resp.getHeader(CallIdHeader.NAME)).getCallId();
        SipSubscription sub=SipSubscriptionManager.getWatcherByCallID(dest,callid);
        if (sub != null) {
          Log.info("[[SIP]] Watcher removed ok");
          SipSubscriptionManager.removeWatcher(dest,sub);
        }
      }
    }
 else     if (method.equals(Request.MESSAGE)) {
      if (status >= 400) {
        Log.info("[[SIP]] MESSAGE failed with status " + status);
      }
 else       if (status == 200) {
        Log.info("[[SIP]] MESSAGE delivered");
      }
    }
  }
 catch (  Exception e) {
    Log.error("[[SIP]] Error processing sip Response!\n" + resp.toString(),e);
  }
}
