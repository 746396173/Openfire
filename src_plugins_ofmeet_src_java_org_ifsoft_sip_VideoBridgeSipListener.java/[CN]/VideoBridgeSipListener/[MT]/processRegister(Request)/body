{
  DigestServerAuthenticationMethod dsam=null;
  try {
    dsam=new DigestServerAuthenticationMethod(JiveGlobals.getProperty("xmpp.domain","localhost"),new String[]{"MD5"});
  }
 catch (  NoSuchAlgorithmException ex) {
    Log.error("Cannot create authentication method. Some algorithm is not implemented: ",ex);
    return SipService.messageFactory.createResponse(Response.SERVER_INTERNAL_ERROR,request);
  }
  try {
    if (!checkAuthorization(request,dsam)) {
      Log.info("Request rejected ( Unauthorized )");
      Response response=SipService.messageFactory.createResponse(Response.UNAUTHORIZED,request);
      WWWAuthenticateHeader wwwAuthenticateHeader=SipService.headerFactory.createWWWAuthenticateHeader("Digest");
      wwwAuthenticateHeader.setParameter("realm",dsam.getDefaultRealm());
      wwwAuthenticateHeader.setParameter("nonce",dsam.generateNonce(dsam.getPreferredAlgorithm()));
      wwwAuthenticateHeader.setParameter("opaque","");
      wwwAuthenticateHeader.setParameter("stale","FALSE");
      wwwAuthenticateHeader.setParameter("algorithm",dsam.getPreferredAlgorithm());
      response.setHeader(wwwAuthenticateHeader);
      return response;
    }
  }
 catch (  Exception e) {
    Log.error("processRegister failed",e);
    return SipService.messageFactory.createResponse(Response.NOT_FOUND,request);
  }
  ContactHeader cont=(ContactHeader)request.getHeader(ContactHeader.NAME);
  String from=((SipURI)cont.getAddress().getURI()).toString();
  ToHeader th=(ToHeader)request.getHeader("To");
  String to=((SipURI)th.getAddress().getURI()).getUser();
  Log.info("Request accepted ( Authorized ) " + from + " "+ to);
  CallControlComponent.self.registrations.put(to,from);
  return SipService.messageFactory.createResponse(Response.OK,request);
}
