{
  if (workgroups.containsKey(name + "@" + serviceAddress.toBareJID())) {
    throw new UserAlreadyExistsException(name);
  }
  long id=-1;
  Workgroup workgroup=null;
  try {
    id=SequenceManager.nextID(FastpathConstants.WORKGROUP);
    boolean workgroupAdded=addWorkgroup(id,name);
    if (workgroupAdded) {
      workgroupLock.writeLock().lock();
      try {
        workgroup=new Workgroup(id,agentManager);
        workgroups.put(workgroup.getJID().toBareJID(),workgroup);
        workgroupOpenStatus.put(workgroup.getID(),workgroup.getStatus());
      }
  finally {
        workgroupLock.writeLock().unlock();
      }
      workgroup.createGroupChatRoom();
      WorkgroupEventDispatcher.workgroupCreated(workgroup);
    }
 else {
      throw new UnauthorizedException("Could not insert workgroup in database");
    }
  }
 catch (  Exception e) {
    Log.error(e);
    if (id != -1) {
      try {
        if (workgroup != null) {
          workgroups.remove(workgroup.getJID().toBareJID());
          workgroupOpenStatus.remove(workgroup.getID());
          deleteWorkgroup(id);
        }
      }
 catch (      Exception e1) {
        Log.error(e1);
      }
    }
    if (e instanceof UserAlreadyExistsException) {
      throw (UserAlreadyExistsException)e;
    }
 else {
      throw new UnauthorizedException();
    }
  }
  return workgroup;
}
