{
  TaskEngine taskEngine=TaskEngine.getInstance();
  taskEngine.schedule(new TimerTask(){
    public void run(){
      workgroupLock.readLock().lock();
      try {
        for (        Workgroup group : workgroups.values()) {
          Workgroup.Status currentOpen=group.getStatus();
          Workgroup.Status oldOpen=workgroupOpenStatus.get(group.getID());
          if (oldOpen != currentOpen) {
            group.broadcastQueuesStatus();
            workgroupOpenStatus.put(group.getID(),currentOpen);
            if (Workgroup.Status.OPEN != oldOpen && Workgroup.Status.OPEN == currentOpen) {
              group.notifyOpened();
            }
 else             if (Workgroup.Status.OPEN == oldOpen) {
              group.notifyClosed();
            }
          }
        }
      }
  finally {
        workgroupLock.readLock().unlock();
      }
    }
  }
,45000,9000);
  taskEngine.schedule(new TimerTask(){
    public void run(){
      workgroupLock.readLock().lock();
      try {
        for (        Workgroup group : workgroups.values()) {
          group.cleanup();
        }
      }
  finally {
        workgroupLock.readLock().unlock();
      }
    }
  }
,60000,300000);
  taskEngine.schedule(new TimerTask(){
    public void run(){
      workgroupLock.readLock().lock();
      try {
        for (        Workgroup group : workgroups.values()) {
          group.checkRequests();
        }
      }
  finally {
        workgroupLock.readLock().unlock();
      }
    }
  }
,10000,15000);
  taskEngine.schedule(new TimerTask(){
    public void run(){
      workgroupLock.readLock().lock();
      try {
        for (        Workgroup group : workgroups.values()) {
          try {
            ChatSearchManager.getInstanceFor(group).updateIndex(false);
          }
 catch (          IOException e) {
            Log.error(e.getMessage(),e);
          }
        }
      }
  finally {
        workgroupLock.readLock().unlock();
      }
    }
  }
,10000,30000);
}
