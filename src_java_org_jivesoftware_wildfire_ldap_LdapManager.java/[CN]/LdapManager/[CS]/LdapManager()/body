{
  String host=JiveGlobals.getXMLProperty("ldap.host");
  StringTokenizer st=new StringTokenizer(host," ,\t\n\r\f");
  while (st.hasMoreTokens()) {
    hosts.add(st.nextToken());
  }
  this.port=JiveGlobals.getXMLProperty("ldap.port",389);
  this.usernameField=JiveGlobals.getXMLProperty("ldap.usernameField","uid");
  this.baseDN=JiveGlobals.getXMLProperty("ldap.baseDN","");
  this.alternateBaseDN=JiveGlobals.getXMLProperty("ldap.alternateBaseDN",null);
  this.nameField=JiveGlobals.getXMLProperty("ldap.nameField","cn");
  this.emailField=JiveGlobals.getXMLProperty("ldap.emailField","mail");
  this.connectionPoolEnabled=JiveGlobals.getXMLProperty("ldap.connectionPoolEnabled",false);
  this.searchFilter=JiveGlobals.getXMLProperty("ldap.searchFilter");
  this.subTreeSearch=JiveGlobals.getXMLProperty("ldap.subTreeSearch",true);
  this.groupNameField=JiveGlobals.getXMLProperty("ldap.groupNameField","cn");
  this.groupMemberField=JiveGlobals.getXMLProperty("ldap.groupMemberField","member");
  this.groupDescriptionField=JiveGlobals.getXMLProperty("ldap.groupDescriptionField","description");
  this.posixMode=JiveGlobals.getXMLProperty("ldap.posixMode",false);
  this.groupSearchFilter=JiveGlobals.getXMLProperty("ldap.groupSearchFilter");
  this.adminDN=JiveGlobals.getXMLProperty("ldap.adminDN");
  if (adminDN != null && adminDN.trim().equals("")) {
    adminDN=null;
  }
  this.adminPassword=JiveGlobals.getXMLProperty("ldap.adminPassword");
  this.ldapDebugEnabled=JiveGlobals.getXMLProperty("ldap.debugEnabled",false);
  this.sslEnabled=JiveGlobals.getXMLProperty("ldap.sslEnabled",false);
  this.followReferrals=JiveGlobals.getXMLProperty("ldap.autoFollowReferrals",false);
  encloseUserDN=JiveGlobals.getXMLProperty("ldap.encloseUserDN",true);
  userDNPattern=Pattern.compile("(=)([^\\\"][^=]*[^\\\"])(?:,|$)");
  this.initialContextFactory=JiveGlobals.getXMLProperty("ldap.initialContextFactory");
  if (initialContextFactory != null) {
    try {
      Class.forName(initialContextFactory);
    }
 catch (    ClassNotFoundException cnfe) {
      Log.error("Initial context factory class failed to load: " + initialContextFactory + ".  Using default initial context factory class instead.");
      initialContextFactory="com.sun.jndi.ldap.LdapCtxFactory";
    }
  }
 else {
    initialContextFactory="com.sun.jndi.ldap.LdapCtxFactory";
  }
  if (Log.isDebugEnabled()) {
    Log.debug("Created new LdapManager() instance, fields:");
    Log.debug("\t host: " + hosts);
    Log.debug("\t port: " + port);
    Log.debug("\t usernamefield: " + usernameField);
    Log.debug("\t baseDN: " + baseDN);
    Log.debug("\t alternateBaseDN: " + alternateBaseDN);
    Log.debug("\t nameField: " + nameField);
    Log.debug("\t emailField: " + emailField);
    Log.debug("\t adminDN: " + adminDN);
    Log.debug("\t adminPassword: " + adminPassword);
    Log.debug("\t searchFilter: " + searchFilter);
    Log.debug("\t subTreeSearch:" + subTreeSearch);
    Log.debug("\t ldapDebugEnabled: " + ldapDebugEnabled);
    Log.debug("\t sslEnabled: " + sslEnabled);
    Log.debug("\t initialContextFactory: " + initialContextFactory);
    Log.debug("\t connectionPoolEnabled: " + connectionPoolEnabled);
    Log.debug("\t autoFollowReferrals: " + followReferrals);
    Log.debug("\t groupNameField: " + groupNameField);
    Log.debug("\t groupMemberField: " + groupMemberField);
    Log.debug("\t groupDescriptionField: " + groupDescriptionField);
    Log.debug("\t posixMode: " + posixMode);
    Log.debug("\t groupSearchFilter: " + groupSearchFilter);
  }
}
