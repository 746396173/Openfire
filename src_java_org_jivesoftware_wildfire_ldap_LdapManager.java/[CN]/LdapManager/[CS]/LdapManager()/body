{
  String host=JiveGlobals.getXMLProperty("ldap.host");
  StringTokenizer st=new StringTokenizer(host," ,\t\n\r\f");
  while (st.hasMoreTokens()) {
    hosts.add(st.nextToken());
  }
  this.port=JiveGlobals.getXMLProperty("ldap.port",389);
  this.usernameField=JiveGlobals.getXMLProperty("ldap.usernameField","uid");
  this.baseDN=JiveGlobals.getXMLProperty("ldap.baseDN","");
  this.alternateBaseDN=JiveGlobals.getXMLProperty("ldap.alternateBaseDN",null);
  this.nameField=JiveGlobals.getXMLProperty("ldap.nameField","cn");
  this.emailField=JiveGlobals.getXMLProperty("ldap.emailField","mail");
  this.connectionPoolEnabled=JiveGlobals.getXMLProperty("ldap.connectionPoolEnabled",true);
  this.searchFilter=JiveGlobals.getXMLProperty("ldap.searchFilter");
  this.subTreeSearch=JiveGlobals.getXMLProperty("ldap.subTreeSearch",true);
  this.groupNameField=JiveGlobals.getXMLProperty("ldap.groupNameField","cn");
  this.groupMemberField=JiveGlobals.getXMLProperty("ldap.groupMemberField","member");
  this.groupDescriptionField=JiveGlobals.getXMLProperty("ldap.groupDescriptionField","description");
  this.posixMode=JiveGlobals.getXMLProperty("ldap.posixMode",false);
  this.groupSearchFilter=JiveGlobals.getXMLProperty("ldap.groupSearchFilter");
  this.adminDN=JiveGlobals.getXMLProperty("ldap.adminDN");
  if (adminDN != null && adminDN.trim().equals("")) {
    adminDN=null;
  }
  this.adminPassword=JiveGlobals.getXMLProperty("ldap.adminPassword");
  this.ldapDebugEnabled=JiveGlobals.getXMLProperty("ldap.debugEnabled",false);
  this.sslEnabled=JiveGlobals.getXMLProperty("ldap.sslEnabled",false);
  this.followReferrals=JiveGlobals.getXMLProperty("ldap.autoFollowReferrals",false);
  encloseUserDN=JiveGlobals.getXMLProperty("ldap.encloseUserDN",true);
  userDNPattern=Pattern.compile("(=)([^\\\"][^=]*[^\\\"])(?:,|$)");
  this.initialContextFactory=JiveGlobals.getXMLProperty("ldap.initialContextFactory");
  if (initialContextFactory != null) {
    try {
      Class.forName(initialContextFactory);
    }
 catch (    ClassNotFoundException cnfe) {
      Log.error("Initial context factory class failed to load: " + initialContextFactory + ".  Using default initial context factory class instead.");
      initialContextFactory="com.sun.jndi.ldap.LdapCtxFactory";
    }
  }
 else {
    initialContextFactory="com.sun.jndi.ldap.LdapCtxFactory";
  }
  StringBuilder buf=new StringBuilder();
  buf.append("Created new LdapManager() instance, fields:\n");
  buf.append("\t host: ").append(hosts).append("\n");
  buf.append("\t port: ").append(port).append("\n");
  buf.append("\t usernamefield: ").append(usernameField).append("\n");
  buf.append("\t baseDN: ").append(baseDN).append("\n");
  buf.append("\t alternateBaseDN: ").append(alternateBaseDN).append("\n");
  buf.append("\t nameField: ").append(nameField).append("\n");
  buf.append("\t emailField: ").append(emailField).append("\n");
  buf.append("\t adminDN: ").append(adminDN).append("\n");
  buf.append("\t adminPassword: ").append(adminPassword).append("\n");
  buf.append("\t searchFilter: ").append(searchFilter).append("\n");
  buf.append("\t subTreeSearch:").append(subTreeSearch).append("\n");
  buf.append("\t ldapDebugEnabled: ").append(ldapDebugEnabled).append("\n");
  buf.append("\t sslEnabled: ").append(sslEnabled).append("\n");
  buf.append("\t initialContextFactory: ").append(initialContextFactory).append("\n");
  buf.append("\t connectionPoolEnabled: ").append(connectionPoolEnabled).append("\n");
  buf.append("\t autoFollowReferrals: ").append(followReferrals).append("\n");
  buf.append("\t groupNameField: ").append(groupNameField).append("\n");
  buf.append("\t groupMemberField: ").append(groupMemberField).append("\n");
  buf.append("\t groupDescriptionField: ").append(groupDescriptionField).append("\n");
  buf.append("\t posixMode: ").append(posixMode).append("\n");
  buf.append("\t groupSearchFilter: ").append(groupSearchFilter).append("\n");
  if (Log.isDebugEnabled()) {
    Log.debug(buf.toString());
  }
  if (ldapDebugEnabled) {
    System.err.println(buf.toString());
  }
}
