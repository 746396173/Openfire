{
  boolean debug=Log.isDebugEnabled();
  if (debug) {
    Log.debug("In LdapManager.checkAuthentication(userDN, password), userDN is: " + userDN + "...");
  }
  DirContext ctx=null;
  try {
    Hashtable<String,Object> env=new Hashtable<String,Object>();
    env.put(Context.INITIAL_CONTEXT_FACTORY,initialContextFactory);
    env.put(Context.PROVIDER_URL,getProviderURL(baseDN));
    if (sslEnabled) {
      env.put("java.naming.ldap.factory.socket","org.jivesoftware.util.SimpleSSLSocketFactory");
      env.put(Context.SECURITY_PROTOCOL,"ssl");
    }
    env.put(Context.SECURITY_AUTHENTICATION,"simple");
    env.put(Context.SECURITY_PRINCIPAL,userDN + "," + baseDN);
    env.put(Context.SECURITY_CREDENTIALS,password);
    if (!sslEnabled) {
      env.put("com.sun.jndi.ldap.connect.timeout","10000");
    }
    if (ldapDebugEnabled) {
      env.put("com.sun.jndi.ldap.trace.ber",System.err);
    }
    if (connectionPoolEnabled) {
      env.put("com.sun.jndi.ldap.connect.pool","true");
    }
    if (followReferrals) {
      env.put(Context.REFERRAL,"follow");
    }
    if (debug) {
      Log.debug("Created context values, attempting to create context...");
    }
    ctx=new InitialDirContext(env);
    if (debug) {
      Log.debug("... context created successfully, returning.");
    }
  }
 catch (  NamingException ne) {
    if (alternateBaseDN != null) {
      try {
        ctx.close();
      }
 catch (      Exception ignored) {
      }
      try {
        Hashtable<String,Object> env=new Hashtable<String,Object>();
        env.put(Context.INITIAL_CONTEXT_FACTORY,initialContextFactory);
        env.put(Context.PROVIDER_URL,getProviderURL(alternateBaseDN));
        if (sslEnabled) {
          env.put("java.naming.ldap.factory.socket","org.jivesoftware.util.SimpleSSLSocketFactory");
          env.put(Context.SECURITY_PROTOCOL,"ssl");
        }
        env.put(Context.SECURITY_AUTHENTICATION,"simple");
        env.put(Context.SECURITY_PRINCIPAL,userDN + "," + alternateBaseDN);
        env.put(Context.SECURITY_CREDENTIALS,password);
        if (!sslEnabled) {
          env.put("com.sun.jndi.ldap.connect.timeout","10000");
        }
        if (ldapDebugEnabled) {
          env.put("com.sun.jndi.ldap.trace.ber",System.err);
        }
        if (connectionPoolEnabled) {
          env.put("com.sun.jndi.ldap.connect.pool","true");
        }
        if (followReferrals) {
          env.put(Context.REFERRAL,"follow");
        }
        if (debug) {
          Log.debug("Created context values, attempting to create context...");
        }
        ctx=new InitialDirContext(env);
      }
 catch (      NamingException e) {
        if (debug) {
          Log.debug("Caught a naming exception when creating InitialContext",ne);
        }
        return false;
      }
    }
 else {
      if (debug) {
        Log.debug("Caught a naming exception when creating InitialContext",ne);
      }
      return false;
    }
  }
 finally {
    try {
      ctx.close();
    }
 catch (    Exception ignored) {
    }
  }
  return true;
}
