{
  boolean c2sConnection=(remoteServer == null);
  if (debug) {
    System.setProperty("javax.net.debug","all");
  }
  try {
    KeyStore ksKeys=SSLConfig.getKeyStore();
    String keypass=SSLConfig.getKeyPassword();
    KeyStore ksTrust=(c2sConnection ? SSLConfig.getc2sTrustStore() : SSLConfig.gets2sTrustStore());
    String trustpass=(c2sConnection ? SSLConfig.getc2sTrustPassword() : SSLConfig.gets2sTrustPassword());
    KeyManager[] km=SSLJiveKeyManagerFactory.getKeyManagers(ksKeys,keypass);
    TrustManager[] tm=SSLJiveTrustManagerFactory.getTrustManagers(ksTrust,trustpass);
    if (clientMode || needClientAuth) {
      if (c2sConnection) {
        tm=new TrustManager[]{new ClientTrustManager(ksTrust)};
      }
 else {
        tm=new TrustManager[]{new ServerTrustManager(remoteServer,ksTrust)};
      }
    }
    SSLContext tlsContext=SSLContext.getInstance(PROTOCOL);
    tlsContext.init(km,tm,null);
    tlsEngine=tlsContext.createSSLEngine();
    tlsEngine.setUseClientMode(clientMode);
    SSLSession session=tlsEngine.getSession();
    netBuffSize=session.getPacketBufferSize();
    appBuffSize=session.getApplicationBufferSize();
  }
 catch (  KeyManagementException e) {
    Log.error("TLSHandler startup problem.\n" + "  SSLContext initialisation failed.",e);
  }
catch (  NoSuchAlgorithmException e) {
    Log.error("TLSHandler startup problem.\n" + "  The " + PROTOCOL + " does not exist",e);
  }
catch (  IOException e) {
    Log.error("TLSHandler startup problem.\n" + "  the KeyStore or TrustStore does not exist",e);
  }
}
