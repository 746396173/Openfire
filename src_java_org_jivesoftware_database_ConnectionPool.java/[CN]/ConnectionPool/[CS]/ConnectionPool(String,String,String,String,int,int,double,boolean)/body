{
  this.driver=driver;
  this.serverURL=serverURL;
  this.username=username;
  this.password=password;
  this.minCon=minCon;
  this.maxCon=maxCon;
  this.conTimeout=(int)(conTimeout * 1000 * 60* 60* 3);
  this.mysqlUseUnicode=mysqlUseUnicode;
  if (driver == null) {
    Log.error("JDBC driver value is null.");
  }
  try {
    ClassUtils.forName(driver);
    DriverManager.getDriver(serverURL);
  }
 catch (  ClassNotFoundException e) {
    Log.error("Could not load JDBC driver class: " + driver);
  }
catch (  SQLException e) {
    Log.error("Error starting connection pool.",e);
  }
  wrappers=new ConnectionWrapper[maxCon];
  cons=new Connection[maxCon];
  boolean success=false;
  int maxTry=3;
  for (int i=0; i < maxTry; i++) {
    try {
      for (int j=0; j < minCon; j++) {
        createCon(j);
        conCount++;
      }
      success=true;
      break;
    }
 catch (    SQLException e) {
      for (int j=0; j < minCon; j++) {
        if (cons[j] != null) {
          try {
            cons[j].close();
            cons[j]=null;
            wrappers[j]=null;
            conCount--;
          }
 catch (          SQLException e1) {
          }
        }
      }
      Log.error("Failed to create new connections on startup. " + "Attempt " + i + " of "+ maxTry,e);
      try {
        Thread.sleep(10000);
      }
 catch (      InterruptedException e1) {
      }
    }
  }
  if (!success) {
    throw new IOException();
  }
  houseKeeper=new Thread(this);
  houseKeeper.setDaemon(true);
  houseKeeper.start();
}
