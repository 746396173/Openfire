{
  Log.info("Starting instance");
  this.sessionManager=SessionManager.getInstance();
  final int maxClientPoolSize=JiveGlobals.getIntProperty("xmpp.client.processing.threads",8);
  final int maxPoolSize=JiveGlobals.getIntProperty("xmpp.httpbind.worker.threads",maxClientPoolSize);
  final int keepAlive=JiveGlobals.getIntProperty("xmpp.httpbind.worker.timeout",60);
  sendPacketPool=new ThreadPoolExecutor(getCorePoolSize(maxPoolSize),maxPoolSize,keepAlive,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new ThreadFactory(){
    final AtomicInteger counter=new AtomicInteger(1);
    @Override public Thread newThread(    Runnable runnable){
      Thread thread=new Thread(Thread.currentThread().getThreadGroup(),runnable,"httpbind-worker-" + counter.getAndIncrement());
      thread.setDaemon(true);
      return thread;
    }
  }
);
  sendPacketPool.prestartCoreThread();
  inactivityTask=new HttpSessionReaper();
  TaskEngine.getInstance().schedule(inactivityTask,30 * JiveConstants.SECOND,30 * JiveConstants.SECOND);
}
