{
  Element response=DocumentHelper.createElement("body");
  response.addNamespace("","http://jabber.org/protocol/httpbind");
  response.addNamespace("stream","http://etherx.jabber.org/streams");
  response.addAttribute("from",session.getServerName());
  response.addAttribute("authid",session.getStreamID().getID());
  response.addAttribute("sid",session.getStreamID().getID());
  response.addAttribute("secure",Boolean.TRUE.toString());
  response.addAttribute("requests",String.valueOf(session.getMaxRequests()));
  response.addAttribute("inactivity",String.valueOf(session.getInactivityTimeout()));
  response.addAttribute("polling",String.valueOf(session.getMaxPollingInterval()));
  response.addAttribute("wait",String.valueOf(session.getWait()));
  if ((session.getMajorVersion() == 1 && session.getMinorVersion() >= 6) || session.getMajorVersion() > 1) {
    response.addAttribute("hold",String.valueOf(session.getHold()));
    response.addAttribute("ack",String.valueOf(session.getLastAcknowledged()));
    response.addAttribute("maxpause",String.valueOf(session.getMaxPause()));
    response.addAttribute("ver",String.valueOf(session.getMajorVersion()) + "." + String.valueOf(session.getMinorVersion()));
  }
  Element features=response.addElement("stream:features");
  for (  Element feature : session.getAvailableStreamFeaturesElements()) {
    features.add(feature);
  }
  return response.asXML();
}
