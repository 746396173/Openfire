{
  String response=null;
  try {
    Logger.println("getAuthorization " + proxyCredentials.getAuthUserName());
    response=MessageDigestAlgorithm.calculateResponse(authHeader.getAlgorithm(),proxyCredentials.getAuthUserName(),authHeader.getRealm(),new String(proxyCredentials.getPassword()),authHeader.getNonce(),null,null,method,uri,requestBody,authHeader.getQop());
  }
 catch (  NullPointerException exc) {
    throw new SecurityException("The authenticate header was malformatted");
  }
  AuthorizationHeader authorization=null;
  try {
    if (authHeader instanceof ProxyAuthenticateHeader) {
      authorization=headerFactory.createProxyAuthorizationHeader(authHeader.getScheme());
    }
 else {
      authorization=headerFactory.createAuthorizationHeader(authHeader.getScheme());
    }
    authorization.setUsername(proxyCredentials.getAuthUserName());
    authorization.setRealm(authHeader.getRealm());
    authorization.setNonce(authHeader.getNonce());
    authorization.setParameter("uri",uri);
    authorization.setResponse(response);
    if (authHeader.getAlgorithm() != null)     authorization.setAlgorithm(authHeader.getAlgorithm());
    if (authHeader.getOpaque() != null)     authorization.setOpaque(authHeader.getOpaque());
    authorization.setResponse(response);
  }
 catch (  ParseException ex) {
    throw new SecurityException("Failed to create an authorization header!");
  }
  return authorization;
}
