{
  IQ reply=IQ.createResultIQ(packet);
  Element lastActivity=reply.setChildElement("query","jabber:iq:last");
  String sender=packet.getFrom().getNode();
  String username=packet.getTo() == null ? null : packet.getTo().getNode();
  if (sender == null || username == null) {
    reply.setError(PacketError.Condition.forbidden);
    return reply;
  }
  try {
    User user=UserManager.getInstance().getUser(username);
    RosterItem item=user.getRoster().getRosterItem(packet.getFrom());
    if (item.getSubStatus() == RosterItem.SUB_FROM || item.getSubStatus() == RosterItem.SUB_BOTH) {
      if (sessionManager.getSessions(username).isEmpty()) {
        long lastActivityTime=presenceManager.getLastActivity(user);
        lastActivity.addAttribute("seconds",String.valueOf(lastActivityTime));
        String lastStatus=presenceManager.getLastPresenceStatus(user);
        if (lastStatus != null && lastStatus.length() > 0) {
          lastActivity.setText(lastStatus);
        }
      }
 else {
        lastActivity.addAttribute("seconds","0");
      }
    }
 else {
      reply.setError(PacketError.Condition.forbidden);
    }
  }
 catch (  UserNotFoundException e) {
    reply.setError(PacketError.Condition.forbidden);
  }
  return reply;
}
