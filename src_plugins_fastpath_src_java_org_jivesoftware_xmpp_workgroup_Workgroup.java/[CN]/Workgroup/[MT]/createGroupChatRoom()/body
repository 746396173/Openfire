{
  String roomJID=getGroupChatRoomName() + "/workgroup";
  JoinRoom joinRoom=new JoinRoom(getFullJID().toString(),roomJID);
  send(joinRoom);
  Map<String,Collection<String>> fields=new HashMap<String,Collection<String>>();
  List<String> values=new ArrayList<String>();
  values.add("0");
  fields.put("muc#roomconfig_publicroom",values);
  values=new ArrayList<String>();
  values.add("Workgroup " + getJID().getNode() + " Chat Room");
  fields.put("muc#roomconfig_roomname",values);
  values=new ArrayList<String>();
  values.add("Workgroup Chat Room");
  fields.put("muc#roomconfig_roomdesc",values);
  values=new ArrayList<String>();
  values.add("0");
  fields.put("muc#roomconfig_maxusers",values);
  values=new ArrayList<String>();
  values.add("1");
  fields.put("muc#roomconfig_changesubject",values);
  values=new ArrayList<String>();
  values.add("1");
  fields.put("muc#roomconfig_persistentroom",values);
  values=new ArrayList<String>();
  values.add("0");
  fields.put("muc#roomconfig_moderatedroom",values);
  values=new ArrayList<String>();
  values.add("0");
  fields.put("muc#roomconfig_membersonly",values);
  values=new ArrayList<String>();
  values.add("1");
  fields.put("muc#roomconfig_allowinvites",values);
  values=new ArrayList<String>();
  values.add("0");
  fields.put("muc#roomconfig_passwordprotectedroom",values);
  values=new ArrayList<String>();
  values.add("1");
  fields.put("muc#roomconfig_enablelogging",values);
  values=new ArrayList<String>();
  values.add("moderators");
  fields.put("muc#roomconfig_whois",values);
  values=new ArrayList<String>();
  values.add("moderator");
  values.add("participant");
  values.add("visitor");
  fields.put("muc#roomconfig_presencebroadcast",values);
  RoomConfiguration conf=new RoomConfiguration(fields);
  conf.setTo(getGroupChatRoomName());
  conf.setFrom(getFullJID());
  send(conf);
  Message message=new Message();
  message.setType(Message.Type.groupchat);
  message.setSubject("This is a private discussion room for members of this workgroup.");
  message.setFrom(getFullJID());
  message.setTo(getGroupChatRoomName());
  send(message);
  LeaveRoom leaveRoom=new LeaveRoom(getFullJID().toString(),roomJID);
  send(leaveRoom);
}
