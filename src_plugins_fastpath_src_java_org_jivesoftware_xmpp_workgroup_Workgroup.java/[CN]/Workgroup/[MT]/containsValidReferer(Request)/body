{
  try {
    final DbProperties props=getProperties();
    String validDomains=props.getProperty("validDomains");
    if (ModelUtil.hasLength(validDomains)) {
      Map<String,List<String>> metadata=request.getMetaData();
      List<String> list=metadata.get("referer");
      if (metadata.containsKey("referer")) {
        metadata.remove("referer");
      }
      if (list != null && list.size() > 0) {
        String referer=list.get(0);
        URL refererURL=new URL(referer);
        String domain=refererURL.getHost().toLowerCase();
        StringTokenizer tkn=new StringTokenizer(validDomains,",");
        boolean match=false;
        while (tkn.hasMoreTokens()) {
          String token=tkn.nextToken().trim().toLowerCase();
          if (domain.endsWith(token)) {
            match=true;
            break;
          }
        }
        return match;
      }
 else {
        return false;
      }
    }
  }
 catch (  Exception e) {
    Log.error(e.getMessage(),e);
  }
  return true;
}
