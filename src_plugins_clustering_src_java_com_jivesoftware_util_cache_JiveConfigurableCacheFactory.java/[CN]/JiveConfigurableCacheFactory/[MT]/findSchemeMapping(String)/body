{
  CacheInfo mapping=null;
  try {
    mapping=super.findSchemeMapping(cacheName);
    if (CacheFactory.getCacheTypeProperty(cacheName) != null) {
      String cacheType=CacheFactory.getCacheTypeProperty(cacheName);
      mapping=new CacheInfo(cacheName,cacheType,mapping.getAttributes());
    }
    if (CacheFactory.hasMaxSizeFromProperty(cacheName)) {
      long maxCacheSize=CacheFactory.getMaxCacheSize(cacheName);
      if (maxCacheSize == -1l) {
        maxCacheSize=0;
      }
      mapping.getAttributes().put("back-size-high",Long.toString(maxCacheSize));
    }
    if (CacheFactory.hasMaxLifetimeFromProperty(cacheName)) {
      long maxLifetime=CacheFactory.getMaxCacheLifetime(cacheName);
      if (maxLifetime == -1l) {
        maxLifetime=0;
      }
      mapping.getAttributes().put("back-expiry",Long.toString(maxLifetime));
    }
  }
 catch (  IllegalArgumentException iae) {
  }
  if (mapping == null) {
    String typeProperty=CacheFactory.getCacheTypeProperty(cacheName);
    long maxCacheSize=CacheFactory.getMaxCacheSize(cacheName);
    long minCacheSize=CacheFactory.getMinCacheSize(cacheName);
    long maxLifetime=CacheFactory.getMaxCacheLifetime(cacheName);
    if (typeProperty != null) {
      Map<String,String> attributes=new HashMap<String,String>();
      if (maxCacheSize == -1l) {
        maxCacheSize=0;
      }
      attributes.put("back-size-high",Long.toString(maxCacheSize));
      if (maxLifetime == -1l) {
        maxLifetime=0;
      }
      attributes.put("back-expiry",Long.toString(maxLifetime));
      if (minCacheSize == -1l) {
        minCacheSize=0;
      }
      attributes.put("back-size-low",Long.toString(minCacheSize));
      mapping=new CacheInfo(cacheName,typeProperty,attributes);
    }
  }
  if (mapping == null) {
    throw new IllegalArgumentException("No scheme for cache: " + cacheName);
  }
  return mapping;
}
