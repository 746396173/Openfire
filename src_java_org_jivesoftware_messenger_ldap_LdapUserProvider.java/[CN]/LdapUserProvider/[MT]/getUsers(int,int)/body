{
  List<String> usernames=new ArrayList<String>();
  LdapContext ctx=null;
  try {
    ctx=manager.getContext();
    Control[] searchControl=new Control[]{new SortControl(new String[]{manager.getUsernameField()},Control.NONCRITICAL)};
    ctx.setRequestControls(searchControl);
    SearchControls constraints=new SearchControls();
    constraints.setSearchScope(SearchControls.SUBTREE_SCOPE);
    constraints.setReturningAttributes(new String[]{manager.getUsernameField()});
    if (!Boolean.valueOf(JiveGlobals.getXMLProperty("ldap.clientSideSorting")).booleanValue()) {
      constraints.setCountLimit(startIndex + numResults);
    }
    String filter=MessageFormat.format(manager.getSearchFilter(),"*");
    NamingEnumeration answer=ctx.search("",filter,constraints);
    if (Boolean.valueOf(JiveGlobals.getXMLProperty("ldap.clientSideSorting")).booleanValue()) {
      while (answer.hasMoreElements()) {
        usernames.add((String)((SearchResult)answer.next()).getAttributes().get(manager.getUsernameField()).get());
      }
      Collections.sort(usernames);
      usernames=usernames.subList(startIndex,startIndex + numResults);
    }
 else {
      for (int i=0; i < startIndex; i++) {
        if (answer.hasMoreElements()) {
          answer.next();
        }
 else {
          return Collections.emptyList();
        }
      }
      for (int i=0; i < numResults; i++) {
        if (answer.hasMoreElements()) {
          usernames.add((String)((SearchResult)answer.next()).getAttributes().get(manager.getUsernameField()).get());
        }
 else {
          break;
        }
      }
    }
  }
 catch (  Exception e) {
    Log.error(e);
  }
 finally {
    try {
      if (ctx != null) {
        ctx.setRequestControls(null);
        ctx.close();
      }
    }
 catch (    Exception ignored) {
    }
  }
  return new UserCollection((String[])usernames.toArray(new String[usernames.size()]));
}
