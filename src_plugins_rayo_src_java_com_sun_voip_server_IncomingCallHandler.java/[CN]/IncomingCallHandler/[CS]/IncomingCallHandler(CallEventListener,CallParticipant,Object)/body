{
  System.out.println("IncomingCallHandler " + cp);
  if (CallHandler.enablePSTNCalls() == false) {
    Logger.println("Ignoring incoming call " + cp.getToPhoneNumber());
    return;
  }
  if (listener != null) {
    addCallEventListener(listener);
  }
  this.cp=cp;
  this.requestEvent=requestEvent;
  addCallEventListener(this);
  if (cp.getConferenceId() == null || cp.getConferenceId().length() == 0) {
    if (directConferencing) {
      System.out.println("Don't have conf, using default....");
      cp.setConferenceId(defaultIncomingConferenceId);
    }
 else {
      System.out.println("Incoming SIP, call " + cp);
      Collection<ClientSession> sessions=SessionManager.getInstance().getSessions();
      boolean foundUser=false;
      for (      ClientSession session : sessions) {
        try {
          String userId=session.getAddress().getNode();
          if (cp.getToPhoneNumber().equals(userId)) {
            System.out.println("Incoming SIP, call route to user " + userId);
            foundUser=true;
            break;
          }
        }
 catch (        Exception e) {
        }
      }
      if (foundUser) {
        String sid="incoming-" + String.valueOf(System.currentTimeMillis());
        cp.setConferenceId(sid);
        haveIncomingConferenceId=true;
        CallEvent callEvent=new CallEvent(CallEvent.STATE_CHANGED);
        callEvent.setCallState(new CallState(CallState.INCOMING));
        callEvent.setInfo(cp.getPhoneNumber());
        callEvent.setCallId(sid);
        sendCallEventNotification(callEvent);
      }
 else {
        if (Config.getInstance().getConferenceExten().equals(cp.getToPhoneNumber())) {
          incomingConferenceHandler=new IncomingConferenceHandler(this,cp.getToPhoneNumber());
        }
 else         if (Config.getInstance().getConferenceByPhone(cp.getToPhoneNumber()) != null) {
          incomingConferenceHandler=new IncomingConferenceHandler(this,cp.getToPhoneNumber());
        }
 else {
          cancelRequest(cp.getToPhoneNumber() + " is not a valid endpoint");
        }
      }
    }
  }
 else {
    Logger.println("Have conf " + cp.getConferenceId());
    haveIncomingConferenceId=true;
  }
  start();
}
