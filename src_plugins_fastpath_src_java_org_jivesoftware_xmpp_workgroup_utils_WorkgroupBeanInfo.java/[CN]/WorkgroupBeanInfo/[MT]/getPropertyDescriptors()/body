{
  Class beanClass=getBeanClass();
  String[] properties=getPropertyNames();
  PropertyDescriptor[] descriptors=new PropertyDescriptor[properties.length];
  try {
    for (int i=0; i < descriptors.length; i++) {
      PropertyDescriptor newDescriptor=new PropertyDescriptor(properties[i],beanClass);
      if (bundle != null) {
        try {
          newDescriptor.setDisplayName(bundle.getString(properties[i] + ".displayName"));
        }
 catch (        MissingResourceException ignored) {
        }
        try {
          newDescriptor.setShortDescription(bundle.getString(properties[i] + ".shortDescription"));
        }
 catch (        MissingResourceException ignored) {
        }
        try {
          String largeText=bundle.getString(properties[i] + ".useLargeTextField");
          if ("true".equals(largeText)) {
            newDescriptor.setValue("useLargeTextField","true");
          }
        }
 catch (        MissingResourceException ignored) {
        }
      }
      descriptors[i]=newDescriptor;
    }
    return descriptors;
  }
 catch (  IntrospectionException ie) {
    Log.error(ie);
    throw new Error(ie.toString());
  }
}
