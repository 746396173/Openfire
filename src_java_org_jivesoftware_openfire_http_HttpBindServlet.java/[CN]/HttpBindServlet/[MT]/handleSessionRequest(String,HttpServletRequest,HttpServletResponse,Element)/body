{
  if (JiveGlobals.getBooleanProperty("log.httpbind.enabled",false)) {
    System.out.println(new Date() + ": HTTP RECV(" + sid+ "): "+ rootNode.asXML());
  }
  long rid=getLongAttribue(rootNode.attributeValue("rid"),-1);
  if (rid <= 0) {
    response.sendError(HttpServletResponse.SC_BAD_REQUEST,"Body missing RID (Request ID)");
    return;
  }
  HttpSession session=sessionManager.getSession(sid);
  if (session == null) {
    Log.warn("Client provided invalid session: " + sid + ". ["+ request.getRemoteAddr()+ "]");
    response.sendError(HttpServletResponse.SC_NOT_FOUND,"Invalid SID.");
    return;
  }
synchronized (session) {
    HttpConnection connection;
    try {
      connection=sessionManager.forwardRequest(rid,session,request.isSecure(),rootNode);
    }
 catch (    HttpBindException e) {
      sendError(request,response,e.getBindingError(),session);
      return;
    }
catch (    HttpConnectionClosedException nc) {
      Log.error("Error sending packet to client.",nc);
      return;
    }
    String type=rootNode.attributeValue("type");
    if ("terminate".equals(type)) {
      session.close();
      respond(session,response,createEmptyBody(),request.getMethod());
    }
 else {
      connection.setContinuation(ContinuationSupport.getContinuation(request,connection));
      request.setAttribute("request-session",connection.getSession());
      request.setAttribute("request",connection.getRequestId());
      try {
        respond(session,response,session.getResponse(connection.getRequestId()),request.getMethod());
      }
 catch (      HttpBindException e) {
        sendError(request,response,e.getBindingError(),session);
      }
    }
  }
}
