{
  super.initialize(server);
  serviceName=JiveGlobals.getProperty("xmpp.pubsub.service");
  if (serviceName == null) {
    serviceName="pubsub";
  }
  String property=JiveGlobals.getProperty("xmpp.pubsub.sysadmin.jid");
  String[] jids;
  if (property != null) {
    jids=property.split(",");
    for (    String jid : jids) {
      sysadmins.add(jid.trim().toLowerCase());
    }
  }
  nodeCreationRestricted=JiveGlobals.getBooleanProperty("xmpp.pubsub.create.anyone",false);
  property=JiveGlobals.getProperty("xmpp.pubsub.create.jid");
  if (property != null) {
    jids=property.split(",");
    for (    String jid : jids) {
      allowedToCreate.add(jid.trim().toLowerCase());
    }
  }
  multipleSubscriptionsEnabled=JiveGlobals.getBooleanProperty("xmpp.pubsub.multiple-subscriptions",true);
  routingTable=server.getRoutingTable();
  router=server.getPacketRouter();
  engine=new PubSubEngine(this,server.getPacketRouter());
  leafDefaultConfiguration=PubSubPersistenceManager.loadDefaultConfiguration(this,true);
  if (leafDefaultConfiguration == null) {
    leafDefaultConfiguration=new DefaultNodeConfiguration(true);
    leafDefaultConfiguration.setAccessModel(AccessModel.open);
    leafDefaultConfiguration.setPublisherModel(PublisherModel.publishers);
    leafDefaultConfiguration.setDeliverPayloads(true);
    leafDefaultConfiguration.setLanguage("English");
    leafDefaultConfiguration.setMaxPayloadSize(5120);
    leafDefaultConfiguration.setNotifyConfigChanges(true);
    leafDefaultConfiguration.setNotifyDelete(true);
    leafDefaultConfiguration.setNotifyRetract(true);
    leafDefaultConfiguration.setPersistPublishedItems(false);
    leafDefaultConfiguration.setMaxPublishedItems(-1);
    leafDefaultConfiguration.setPresenceBasedDelivery(false);
    leafDefaultConfiguration.setSendItemSubscribe(true);
    leafDefaultConfiguration.setSubscriptionEnabled(true);
    leafDefaultConfiguration.setReplyPolicy(null);
    PubSubPersistenceManager.createDefaultConfiguration(this,leafDefaultConfiguration);
  }
  collectionDefaultConfiguration=PubSubPersistenceManager.loadDefaultConfiguration(this,false);
  if (collectionDefaultConfiguration == null) {
    collectionDefaultConfiguration=new DefaultNodeConfiguration(false);
    collectionDefaultConfiguration.setAccessModel(AccessModel.open);
    collectionDefaultConfiguration.setPublisherModel(PublisherModel.publishers);
    collectionDefaultConfiguration.setDeliverPayloads(false);
    collectionDefaultConfiguration.setLanguage("English");
    collectionDefaultConfiguration.setNotifyConfigChanges(true);
    collectionDefaultConfiguration.setNotifyDelete(true);
    collectionDefaultConfiguration.setNotifyRetract(true);
    collectionDefaultConfiguration.setPresenceBasedDelivery(false);
    collectionDefaultConfiguration.setSubscriptionEnabled(true);
    collectionDefaultConfiguration.setReplyPolicy(null);
    collectionDefaultConfiguration.setAssociationPolicy(CollectionNode.LeafNodeAssociationPolicy.all);
    collectionDefaultConfiguration.setMaxLeafNodes(-1);
    PubSubPersistenceManager.createDefaultConfiguration(this,collectionDefaultConfiguration);
  }
  PubSubPersistenceManager.loadNodes(this);
  String rootNodeID=JiveGlobals.getProperty("xmpp.pubsub.root.nodeID","");
  if (nodes.isEmpty()) {
    String creator=JiveGlobals.getProperty("xmpp.pubsub.root.creator");
    JID creatorJID=creator != null ? new JID(creator) : server.getAdmins().iterator().next();
    rootCollectionNode=new CollectionNode(this,null,rootNodeID,creatorJID);
    rootCollectionNode.addOwner(creatorJID);
    rootCollectionNode.saveToDB();
  }
 else {
    rootCollectionNode=(CollectionNode)getNode(rootNodeID);
  }
  ClusterManager.addListener(this);
}
