{
  Log.info("RayoComponent handleDialCommand " + iq.getFrom());
  final IQ reply=IQ.createResultIQ(iq);
  Map<String,String> headers=command.getHeaders();
  String from=command.getFrom().toString();
  String to=command.getTo().toString();
  boolean fromPhone=from.indexOf("sip:") == 0 || from.indexOf("tel:") == 0;
  boolean toPhone=to.indexOf("sip:") == 0 || to.indexOf("tel:") == 0;
  boolean toHandset=to.indexOf("handset:") == 0;
  boolean fromHandset=from.indexOf("handset:") == 0;
  String mixer=null;
  String callerId=headers.get("caller-id");
  String calledId=headers.get("called-id");
  String callerName=headers.get("caller-name");
  String calledName=headers.get("called-name");
  JoinCommand join=command.getJoin();
  if (join != null && join.getTo() != null) {
    if (join.getType() == JoinDestinationType.CALL) {
    }
 else {
      mixer=join.getTo();
    }
  }
  if (callerId == null)   callerId="ray-caller-" + System.currentTimeMillis();
  if (calledId == null)   calledId="ray-called-" + System.currentTimeMillis();
  CallParticipant cp=new CallParticipant();
  cp.setConferenceId(mixer);
  cp.setMediaPreference("PCMU/8000/1");
  cp.setProtocol("SIP");
  cp.setVoiceDetection(true);
  cp.setCallOwner(iq.getFrom().toString());
  if (fromPhone && toPhone) {
    cp.setCallId(calledId);
    cp.setPhoneNumber(to.substring(4));
    cp.setName(calledName == null ? cp.getPhoneNumber() : calledName);
    cp.setSecondPartyCallId(callerId);
    cp.setSecondPartyNumber(from.substring(4));
    cp.setSecondPartyName(callerName == null ? cp.getSecondPartyNumber() : callerName);
    if (mixer == null) {
      DirectCallHandler callHandler=new DirectCallHandler(cp,this);
      callHandler.start();
    }
 else {
      TwoPartyCallHandler callHandler=new TwoPartyCallHandler(this,cp);
      callHandler.start();
    }
    final Element childElement=reply.setChildElement("ref","urn:xmpp:rayo:1");
    childElement.addAttribute(URI,(String)"xmpp:" + calledId + "@rayo."+ getDomain());
  }
 else   if (fromPhone && !toPhone) {
    cp.setCallId(callerId);
    cp.setPhoneNumber(from.substring(4));
    cp.setName(callerName == null ? cp.getPhoneNumber() : callerName);
    if (toHandset) {
      doPhonePcCall(new JID(to.substring(8)),cp,reply,mixer);
    }
 else {
    }
  }
 else   if (!fromPhone && toPhone) {
    cp.setCallId(calledId);
    cp.setPhoneNumber(to.substring(4));
    cp.setName(calledName == null ? cp.getPhoneNumber() : calledName);
    if (fromHandset) {
      doPhonePcCall(new JID(from.substring(8)),cp,reply,mixer);
    }
 else {
    }
  }
 else   if (!fromPhone && !toPhone) {
    if (fromHandset && toHandset) {
    }
 else {
      if (toHandset) {
      }
 else {
      }
    }
  }
  return reply;
}
