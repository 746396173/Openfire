{
  Log.info("RayoComponent handleIQGet \n" + iq.toString());
  final Element element=iq.getChildElement();
  final String namespace=element.getNamespaceURI();
  try {
    if (RAYO_HANDSET.equals(namespace)) {
      IQ reply=null;
      Object object=handsetProvider.fromXML(element);
      if (object instanceof OnHookCommand) {
        OnHookCommand command=(OnHookCommand)object;
        reply=handleOnOffHookCommand(command,iq);
      }
 else       if (object instanceof OffHookCommand) {
        OffHookCommand command=(OffHookCommand)object;
        reply=handleOnOffHookCommand(command,iq);
      }
 else       if (object instanceof MuteCommand) {
        reply=handleMuteCommand((MuteCommand)object,iq);
      }
 else       if (object instanceof UnmuteCommand) {
        reply=handleMuteCommand((UnmuteCommand)object,iq);
      }
 else       if (object instanceof HoldCommand) {
        reply=handleHoldCommand((HoldCommand)object,iq);
      }
 else       if (object instanceof PrivateCommand) {
        reply=handlePrivateCommand(object,iq);
      }
 else       if (object instanceof PublicCommand) {
        reply=handlePrivateCommand(object,iq);
      }
 else       if (object instanceof CreateSpeakerCommand) {
        reply=handleCreateSpeakerCommand(object,iq);
      }
 else       if (object instanceof DestroySpeakerCommand) {
        reply=handleDestroySpeakerCommand(object,iq);
      }
 else       if (object instanceof PutOnSpeakerCommand) {
        reply=handleOnOffSpeakerCommand(object,iq,true);
      }
 else       if (object instanceof TakeOffSpeakerCommand) {
        reply=handleOnOffSpeakerCommand(object,iq,false);
      }
 else       if (object instanceof TalkCommand) {
        reply=handleOnOffTalkCommand(object,iq,false);
      }
 else       if (object instanceof UntalkCommand) {
        reply=handleOnOffTalkCommand(object,iq,true);
      }
      return reply;
    }
    if (RAYO_RECORD.equals(namespace)) {
      IQ reply=null;
      Object object=recordProvider.fromXML(element);
      if (object instanceof Record) {
        reply=handleRecord((Record)object,iq);
      }
 else       if (object instanceof PauseCommand) {
        reply=handlePauseRecordCommand(true,iq);
      }
 else       if (object instanceof ResumeCommand) {
        reply=handlePauseRecordCommand(false,iq);
      }
      return reply;
    }
    if (RAYO_SAY.equals(namespace)) {
      IQ reply=null;
      Object object=sayProvider.fromXML(element);
      if (object instanceof Say) {
        reply=handleSay((Say)object,iq);
      }
 else       if (object instanceof PauseCommand) {
        reply=handlePauseSayCommand(true,iq);
      }
 else       if (object instanceof ResumeCommand) {
        reply=handlePauseSayCommand(false,iq);
      }
      return reply;
    }
    if (RAYO_CORE.equals(namespace)) {
      IQ reply=null;
      Object object=rayoProvider.fromXML(element);
      if (object instanceof JoinCommand) {
        reply=handleJoinCommand((JoinCommand)object,iq);
      }
 else       if (object instanceof UnjoinCommand) {
        reply=handleUnjoinCommand((UnjoinCommand)object,iq);
      }
 else       if (object instanceof AcceptCommand) {
        reply=handleAcceptCommand((AcceptCommand)object,iq);
      }
 else       if (object instanceof AnswerCommand) {
        reply=handleAnswerCommand((AnswerCommand)object,iq);
      }
 else       if (object instanceof HangupCommand) {
        reply=handleHangupCommand(iq);
      }
 else       if (object instanceof RejectCommand) {
      }
 else       if (object instanceof RedirectCommand) {
        RedirectCommand redirect=(RedirectCommand)object;
        DialCommand dial=new DialCommand();
        dial.setTo(redirect.getTo());
        dial.setFrom(new URI("xmpp:" + iq.getFrom()));
        dial.setHeaders(redirect.getHeaders());
        reply=handleDialCommand((DialCommand)dial,iq,true);
      }
 else       if (object instanceof DialCommand) {
        reply=handleDialCommand((DialCommand)object,iq,false);
      }
 else       if (object instanceof StopCommand) {
      }
 else       if (object instanceof DtmfCommand) {
        reply=handleDtmfCommand((DtmfCommand)object,iq);
      }
 else       if (object instanceof DestroyMixerCommand) {
      }
      return reply;
    }
    return null;
  }
 catch (  Exception e) {
    e.printStackTrace();
    final IQ reply=IQ.createResultIQ(iq);
    reply.setError(PacketError.Condition.internal_server_error);
    return reply;
  }
}
