{
  Log.info("RayoComponent handleSay " + iq.getFrom());
  IQ reply=IQ.createResultIQ(iq);
  final String entityId=iq.getTo().getNode();
  final String treatmentId=command.getPrompt().getText();
  CallHandler callHandler=CallHandler.findCall(entityId);
  if (callHandler != null) {
    try {
      callHandler.playTreatmentToCall(treatmentId,this);
      final Element childElement=reply.setChildElement("ref",RAYO_CORE);
      childElement.addAttribute(ID,treatmentId);
      childElement.addAttribute(URI,(String)"xmpp:" + entityId + "@"+ getDomain()+ "/"+ treatmentId);
    }
 catch (    Exception e1) {
      e1.printStackTrace();
      reply.setError(PacketError.Condition.not_allowed);
    }
  }
 else {
    try {
      ConferenceManager conferenceManager=ConferenceManager.findConferenceManager(entityId);
      try {
        conferenceManager.addTreatment(treatmentId);
        final Element childElement=reply.setChildElement("ref",RAYO_CORE);
        childElement.addAttribute(ID,treatmentId);
        childElement.addAttribute(URI,(String)"xmpp:" + entityId + "@"+ getDomain()+ "/"+ treatmentId);
      }
 catch (      Exception e2) {
        e2.printStackTrace();
        reply.setError(PacketError.Condition.not_allowed);
      }
    }
 catch (    ParseException e1) {
      reply.setError(PacketError.Condition.item_not_found);
    }
  }
  return reply;
}
