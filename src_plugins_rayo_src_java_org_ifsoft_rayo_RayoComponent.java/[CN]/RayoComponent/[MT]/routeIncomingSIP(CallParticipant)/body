{
  boolean canRoute=false;
  Group group=null;
  JID foundUser=findUser(cp.getToPhoneNumber());
  if (foundUser != null)   canRoute=true;
 else {
    try {
      group=GroupManager.getInstance().getGroup(cp.getToPhoneNumber());
      canRoute=true;
    }
 catch (    GroupNotFoundException e) {
    }
  }
  Log.info("Incoming SIP, call route to entity " + cp.getToPhoneNumber() + " "+ canRoute);
  if (canRoute) {
    String callId="rayo-incoming-" + System.currentTimeMillis();
    cp.setCallId(callId);
    cp.setConferenceId(callId);
    if (cp.getMediaPreference() == null)     cp.setMediaPreference("PCMU/8000/1");
    ConferenceManager conferenceManager=ConferenceManager.getConference(callId,cp.getMediaPreference(),cp.getToPhoneNumber(),false);
    conferenceManager.setCallId(callId);
    Map<String,String> headers=cp.getHeaders();
    headers.put("mixer_name",callId);
    headers.put("call_protocol","SIP");
    headers.put("codec_name","PCM/48000/2".equals(cp.getMediaPreference()) ? "OPUS" : "PCMU");
    headers.put("group_name",cp.getToPhoneNumber());
    if (foundUser != null) {
      cp.setCallOwner(foundUser.toString());
      routeSIPCall(foundUser,cp,callId,headers);
    }
 else {
      conferenceManager.setGroupName(cp.getToPhoneNumber());
      for (      JID memberJID : group.getMembers()) {
        Collection<ClientSession> sessions=SessionManager.getInstance().getSessions(memberJID.getNode());
        for (        ClientSession session : sessions) {
          routeSIPCall(session.getAddress(),cp,callId,headers);
        }
      }
    }
  }
  return canRoute;
}
