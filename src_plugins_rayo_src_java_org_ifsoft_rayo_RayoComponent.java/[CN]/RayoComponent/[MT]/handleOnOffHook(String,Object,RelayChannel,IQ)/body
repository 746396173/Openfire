{
  final boolean flag=object instanceof OnHookCommand;
  Log.info("RayoComponent handleOnOffHook " + flag);
  try {
    CallHandler handler=CallHandler.findCall(handsetId);
    if (handler != null) {
      handler.cancelRequest("Reseting handset to " + (flag ? "on" : "off") + "hook");
      handler=null;
    }
    if (!flag) {
      Handset handset=((OffHookCommand)object).getHandset();
      String mediaPreference="PCMU/8000/1";
      if (handset.codec == null || "OPUS".equals(handset.codec))       mediaPreference="PCM/48000/2";
      CallParticipant cp=new CallParticipant();
      cp.setCallId(handsetId);
      cp.setConferenceId(handset.mixer);
      cp.setDisplayName("rayo-handset-" + System.currentTimeMillis());
      cp.setName(cp.getDisplayName());
      cp.setVoiceDetection(true);
      cp.setCallOwner(JID.unescapeNode(handsetId));
      String label=(new JID(cp.getCallOwner())).getNode();
      if (handset.group != null && !"".equals(handset.group)) {
        label=handset.group;
      }
      ConferenceManager cm=ConferenceManager.getConference(handset.mixer,mediaPreference,label,false);
      if (handset.callId != null && "".equals(handset.callId) == false) {
        cm.setCallId(handset.callId);
      }
      if (handset.group != null && !"".equals(handset.group)) {
        cm.setGroupName(handset.group);
      }
      if (cm.isPrivateCall() == false || cm.getMemberList().size() < 2) {
        if (channel == null) {
          cp.setMediaPreference("PCMU/8000/1");
          cp.setPhoneNumber(handset.sipuri);
          cp.setAutoAnswer(true);
          cp.setProtocol("SIP");
        }
 else {
          cp.setMediaPreference(mediaPreference);
          cp.setRelayChannel(channel);
          cp.setProtocol("WebRtc");
        }
        OutgoingCallHandler callHandler=new OutgoingCallHandler(this,cp);
        callHandler.start();
        if (channel != null) {
          channel.setCallHandler(callHandler);
        }
      }
 else {
        reply.setError(PacketError.Condition.not_allowed);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
