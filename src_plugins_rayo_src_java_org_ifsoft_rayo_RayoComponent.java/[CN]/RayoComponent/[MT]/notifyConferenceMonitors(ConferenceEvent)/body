{
  Log.info("RayoComponent notifyConferenceMonitors " + conferenceEvent.toString());
  try {
    if (conferenceEvent.equals(ConferenceEvent.MEMBER_LEFT) || conferenceEvent.equals(ConferenceEvent.MEMBER_JOINED)) {
      Log.info("RayoComponent notifyConferenceMonitors looking for call " + conferenceEvent.getCallId() + " "+ conferenceEvent.getMemberCount());
      ConferenceManager conferenceManager=ConferenceManager.findConferenceManager(conferenceEvent.getConferenceId());
      String groupName=conferenceManager.getDisplayName();
      String callId=conferenceManager.getCallId();
      if (callId == null)       callId=conferenceEvent.getConferenceId();
      CallHandler farParty=CallHandler.findCall(callId);
      CallHandler callHandler=CallHandler.findCall(conferenceEvent.getCallId());
      if (callHandler != null) {
        Log.info("RayoComponent notifyConferenceMonitors found call handler " + callHandler + " "+ farParty);
        CallParticipant callParticipant=callHandler.getCallParticipant();
        if (callParticipant != null) {
          ArrayList memberList=conferenceManager.getMemberList();
          if (conferenceEvent.equals(ConferenceEvent.MEMBER_LEFT)) {
            CallParticipant hp=callParticipant.getHandset();
            if (hp != null) {
synchronized (memberList) {
                for (int i=0; i < memberList.size(); i++) {
                  CallHandler participant=((ConferenceMember)memberList.get(i)).getCallHandler();
                  participant.cancelRequest("Far Party has left");
                }
              }
            }
          }
          int memberCount=memberList.size();
          Log.info("RayoComponent notifyConferenceMonitors found owner " + callParticipant.getCallOwner() + " "+ memberCount);
          if (groupName == null) {
            routeJoinEvent(callParticipant.getCallOwner(),callParticipant,conferenceEvent,memberCount,groupName,callId,farParty);
          }
 else {
            Group group=GroupManager.getInstance().getGroup(groupName);
            for (            JID memberJID : group.getMembers()) {
              Collection<ClientSession> sessions=SessionManager.getInstance().getSessions(memberJID.getNode());
              for (              ClientSession session : sessions) {
                routeJoinEvent(session.getAddress().toString(),callParticipant,conferenceEvent,memberCount,groupName,callId,farParty);
              }
            }
          }
        }
      }
      if (conferenceManager.getMemberList().size() == 0) {
        conferenceManager.recordConference(false,null,null);
        conferenceManager.endConference(conferenceEvent.getConferenceId());
      }
    }
  }
 catch (  Exception e) {
    Log.error("RayoComponent Error in notifyConferenceMonitors " + e);
    e.printStackTrace();
  }
}
