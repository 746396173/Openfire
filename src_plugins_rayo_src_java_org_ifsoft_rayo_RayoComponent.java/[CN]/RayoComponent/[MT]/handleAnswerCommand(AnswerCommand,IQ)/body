{
  String callId=iq.getTo().getNode();
  Log.info("RayoComponent AnswerCommand " + iq.getFrom() + " "+ callId);
  IQ reply=IQ.createResultIQ(iq);
  JID callJID=getJID(callId);
  Map<String,String> headers=command.getHeaders();
  CallHandler callHandler=null;
  if (callJID != null) {
    headers.put("call_protocol","XMPP");
    headers.put("call_owner",callJID.toString());
    headers.put("call_action","join");
    try {
      Presence presence1=new Presence();
      presence1.setFrom(iq.getTo());
      presence1.setTo(callJID);
      presence1.getElement().add(rayoProvider.toXML(new AnsweredEvent(null,headers)));
      sendPacket(presence1);
      callHandler=CallHandler.findCall(callId);
    }
 catch (    Exception e) {
      reply.setError(PacketError.Condition.item_not_found);
      e.printStackTrace();
    }
  }
 else {
    callHandler=CallHandler.findCall(callId);
  }
  if (callHandler != null) {
    Log.info("RayoComponent handleAnswerCommand found call handler " + callHandler);
    CallHandler handsetHandler=CallHandler.findCall(JID.escapeNode(iq.getFrom().toString()));
    if (handsetHandler != null) {
      Log.info("RayoComponent handleAnswerCommand found handset handler " + handsetHandler);
      try {
        CallParticipant cp=callHandler.getCallParticipant();
        CallParticipant hp=handsetHandler.getCallParticipant();
        hp.setFarParty(cp);
        cp.setHandset(hp);
        cp.setStartTimestamp(System.currentTimeMillis());
        cp.setHeaders(headers);
        String recording=cp.getConferenceId() + "-" + cp.getStartTimestamp()+ ".au";
        ConferenceManager.recordConference(cp.getConferenceId(),true,recording,"au");
        String destination=iq.getFrom().getNode();
        String source=cp.getName();
        if (callJID != null) {
          source=callJID.getNode();
          Config.createCallRecord(source,recording,"xmpp:" + iq.getFrom(),cp.getStartTimestamp(),0,"dialed");
          Config.createCallRecord(destination,recording,"xmpp:" + callJID,cp.getStartTimestamp(),0,"received");
        }
 else {
          Config.createCallRecord(destination,recording,"sip:" + cp.getPhoneNumber(),cp.getStartTimestamp(),0,"received");
        }
      }
 catch (      ParseException e1) {
        reply.setError(PacketError.Condition.internal_server_error);
      }
    }
 else     reply.setError(PacketError.Condition.item_not_found);
  }
 else   reply.setError(PacketError.Condition.item_not_found);
  return reply;
}
