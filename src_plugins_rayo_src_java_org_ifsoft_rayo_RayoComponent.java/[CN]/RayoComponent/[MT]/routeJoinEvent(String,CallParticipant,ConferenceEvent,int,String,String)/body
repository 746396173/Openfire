{
  Log.info("RayoComponent routeJoinEvent " + callee + " "+ callId+ " "+ groupName);
  Presence presence=new Presence();
  presence.setFrom(callId + "@rayo." + getDomain());
  presence.setTo(callee);
  Map<String,String> headers=callParticipant.getHeaders();
  headers.put("call_owner",callParticipant.getCallOwner());
  headers.put("call_action",conferenceEvent.equals(ConferenceEvent.MEMBER_LEFT) ? "leave" : "join");
  headers.put("call_protocol",callParticipant.getProtocol());
  headers.put("mixer_name",conferenceEvent.getConferenceId());
  headers.put("group_name",groupName);
  if (memberCount > 2) {
    if (conferenceEvent.equals(ConferenceEvent.MEMBER_LEFT)) {
      UnjoinedEvent event=new UnjoinedEvent(null,conferenceEvent.getConferenceId(),JoinDestinationType.MIXER);
      presence.getElement().add(rayoProvider.toXML(event));
    }
 else {
      JoinedEvent event=new JoinedEvent(null,conferenceEvent.getConferenceId(),JoinDestinationType.MIXER);
      presence.getElement().add(rayoProvider.toXML(event));
    }
    sendPacket(presence);
  }
 else {
    if (memberCount == 2) {
      presence.getElement().add(rayoProvider.toXML(new AnsweredEvent(null,headers)));
      sendPacket(presence);
    }
 else {
      if (conferenceEvent.equals(ConferenceEvent.MEMBER_LEFT)) {
        presence.getElement().add(rayoProvider.toXML(new EndEvent(null,EndEvent.Reason.valueOf("HANGUP"),headers)));
        sendPacket(presence);
        finishCallRecord(callParticipant);
      }
    }
  }
}
