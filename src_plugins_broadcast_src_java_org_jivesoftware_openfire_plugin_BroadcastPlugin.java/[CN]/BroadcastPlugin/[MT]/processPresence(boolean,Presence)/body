{
  try {
    if (Presence.Type.subscribe == presence.getType()) {
      Presence reply=new Presence();
      reply.setTo(presence.getFrom());
      reply.setFrom(presence.getTo());
      reply.setType(canProceed ? Presence.Type.subscribed : Presence.Type.unsubscribed);
      componentManager.sendPacket(this,reply);
    }
 else     if (Presence.Type.unsubscribe == presence.getType()) {
      Presence reply=new Presence();
      reply.setTo(presence.getFrom());
      reply.setFrom(presence.getTo());
      reply.setType(Presence.Type.unsubscribed);
      componentManager.sendPacket(this,reply);
      if (!canProceed) {
        reply=new Presence();
        reply.setTo(presence.getFrom());
        reply.setFrom(presence.getTo());
        reply.setType(Presence.Type.unavailable);
        componentManager.sendPacket(this,reply);
      }
    }
 else     if (Presence.Type.probe == presence.getType()) {
      Presence reply=new Presence();
      reply.setTo(presence.getFrom());
      reply.setFrom(presence.getTo());
      if (!canProceed) {
        reply.setError(PacketError.Condition.forbidden);
      }
      componentManager.sendPacket(this,reply);
    }
  }
 catch (  ComponentException e) {
    componentManager.getLog().error(e);
  }
}
