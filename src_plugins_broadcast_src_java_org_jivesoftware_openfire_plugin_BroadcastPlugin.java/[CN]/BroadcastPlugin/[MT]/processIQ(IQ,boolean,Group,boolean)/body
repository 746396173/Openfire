{
  IQ reply=IQ.createResultIQ(iq);
  Element childElement=iq.getChildElement();
  String namespace=childElement.getNamespaceURI();
  Element childElementCopy=iq.getChildElement().createCopy();
  reply.setChildElement(childElementCopy);
  if ("http://jabber.org/protocol/disco#info".equals(namespace)) {
    if (iq.getTo().getNode() == null) {
      Element identity=childElementCopy.addElement("identity");
      identity.addAttribute("category","component");
      identity.addAttribute("type","generic");
      identity.addAttribute("name","Broadcast service");
      childElementCopy.addElement("feature").addAttribute("var","http://jabber.org/protocol/disco#info");
      childElementCopy.addElement("feature").addAttribute("var","http://jabber.org/protocol/disco#items");
    }
 else {
      if (targetAll) {
        Element identity=childElementCopy.addElement("identity");
        identity.addAttribute("category","component");
        identity.addAttribute("type","generic");
        identity.addAttribute("name","Broadcast all connected users");
        childElementCopy.addElement("feature").addAttribute("var","http://jabber.org/protocol/disco#info");
      }
 else       if (group != null && canProceed) {
        Element identity=childElementCopy.addElement("identity");
        identity.addAttribute("category","component");
        identity.addAttribute("type","generic");
        identity.addAttribute("name","Broadcast " + group.getName());
        childElementCopy.addElement("feature").addAttribute("var","http://jabber.org/protocol/disco#info");
      }
 else {
        reply.setError(PacketError.Condition.item_not_found);
      }
    }
  }
 else   if ("http://jabber.org/protocol/disco#items".equals(namespace)) {
    if (iq.getTo().getNode() == null) {
      Collection<Group> groups;
      JID address=new JID(iq.getFrom().toBareJID());
      if (allowedUsers.contains(address)) {
        groups=groupManager.getGroups();
      }
 else {
        groups=groupManager.getGroups(iq.getFrom());
      }
      for (      Group userGroup : groups) {
        try {
          JID groupJID=new JID(userGroup.getName() + "@" + serviceName+ "."+ componentManager.getServerName());
          childElementCopy.addElement("item").addAttribute("jid",groupJID.toString());
        }
 catch (        Exception e) {
        }
      }
      if (allowedUsers.isEmpty() || allowedUsers.contains(address)) {
        childElementCopy.addElement("item").addAttribute("jid","all@" + serviceName + "."+ componentManager.getServerName());
      }
    }
  }
 else {
    reply.setError(PacketError.Condition.service_unavailable);
  }
  try {
    componentManager.sendPacket(this,reply);
  }
 catch (  Exception e) {
    Log.error(e.getMessage(),e);
  }
}
