{
  JID userJID=server.createJID(user.getUsername(),null);
  for (  Group group : getPublicSharedGroups()) {
    Collection<JID> users=new HashSet<JID>(group.getMembers());
    users.addAll(group.getAdmins());
    for (    JID userToUpdate : users) {
      Roster roster=null;
      if (server.isLocal(userToUpdate)) {
        try {
          UserManager.getInstance().getUser(userToUpdate.getNode());
        }
 catch (        UserNotFoundException e) {
          continue;
        }
        roster=rosterCache.get(userToUpdate.getNode());
      }
      if (roster != null) {
        roster.deleteSharedUser(group,userJID);
      }
      if (!server.isLocal(userToUpdate)) {
        sendSubscribeRequest(userJID,userToUpdate,false);
      }
    }
  }
}
