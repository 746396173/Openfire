{
  Element item;
  String affiliation;
  String roleAttribute;
  boolean hasJID=itemsList.get(0).attributeValue("jid") != null;
  boolean hasNick=itemsList.get(0).attributeValue("nick") != null;
  if (!hasJID && !hasNick) {
    for (    Object anItem : itemsList) {
      item=(Element)anItem;
      affiliation=item.attributeValue("affiliation");
      roleAttribute=item.attributeValue("role");
      Element result=reply.setChildElement("query","http://jabber.org/protocol/muc#admin");
      Element metaData;
      if ("outcast".equals(affiliation)) {
        if (MUCRole.Affiliation.admin != senderRole.getAffiliation() && MUCRole.Affiliation.owner != senderRole.getAffiliation()) {
          throw new ForbiddenException();
        }
        for (        JID jid : room.getOutcasts()) {
          metaData=result.addElement("item","http://jabber.org/protocol/muc#admin");
          metaData.addAttribute("affiliation","outcast");
          metaData.addAttribute("jid",jid.toString());
        }
      }
 else       if ("member".equals(affiliation)) {
        if (!room.isMembersOnly() && MUCRole.Affiliation.admin != senderRole.getAffiliation() && MUCRole.Affiliation.owner != senderRole.getAffiliation()) {
          throw new ForbiddenException();
        }
        for (        JID jid : room.getMembers()) {
          metaData=result.addElement("item","http://jabber.org/protocol/muc#admin");
          metaData.addAttribute("affiliation","member");
          metaData.addAttribute("jid",jid.toString());
          try {
            List<MUCRole> roles=room.getOccupantsByBareJID(jid);
            MUCRole role=roles.get(0);
            metaData.addAttribute("role",role.getRole().toString());
            metaData.addAttribute("nick",role.getNickname());
          }
 catch (          UserNotFoundException e) {
          }
        }
      }
 else       if ("moderator".equals(roleAttribute)) {
        if (MUCRole.Affiliation.admin != senderRole.getAffiliation() && MUCRole.Affiliation.owner != senderRole.getAffiliation()) {
          throw new ForbiddenException();
        }
        for (        MUCRole role : room.getModerators()) {
          metaData=result.addElement("item","http://jabber.org/protocol/muc#admin");
          metaData.addAttribute("role","moderator");
          metaData.addAttribute("jid",role.getUserAddress().toString());
          metaData.addAttribute("nick",role.getNickname());
          metaData.addAttribute("affiliation",role.getAffiliation().toString());
        }
      }
 else       if ("participant".equals(roleAttribute)) {
        if (MUCRole.Role.moderator != senderRole.getRole()) {
          throw new ForbiddenException();
        }
        for (        MUCRole role : room.getParticipants()) {
          metaData=result.addElement("item","http://jabber.org/protocol/muc#admin");
          metaData.addAttribute("role","participant");
          metaData.addAttribute("jid",role.getUserAddress().toString());
          metaData.addAttribute("nick",role.getNickname());
          metaData.addAttribute("affiliation",role.getAffiliation().toString());
        }
      }
 else       if ("owner".equals(affiliation)) {
        Element ownerMetaData;
        MUCRole role;
        for (        JID jid : room.getOwners()) {
          ownerMetaData=result.addElement("item","http://jabber.org/protocol/muc#admin");
          ownerMetaData.addAttribute("affiliation","owner");
          ownerMetaData.addAttribute("jid",jid.toBareJID());
          try {
            List<MUCRole> roles=room.getOccupantsByBareJID(jid);
            role=roles.get(0);
            ownerMetaData.addAttribute("role",role.getRole().toString());
            ownerMetaData.addAttribute("nick",role.getNickname());
          }
 catch (          UserNotFoundException e) {
          }
        }
      }
 else       if ("admin".equals(affiliation)) {
        Element adminMetaData;
        MUCRole role;
        for (        JID jid : room.getAdmins()) {
          adminMetaData=result.addElement("item","http://jabber.org/protocol/muc#admin");
          adminMetaData.addAttribute("affiliation","admin");
          adminMetaData.addAttribute("jid",jid.toBareJID());
          try {
            List<MUCRole> roles=room.getOccupantsByBareJID(jid);
            role=roles.get(0);
            adminMetaData.addAttribute("role",role.getRole().toString());
            adminMetaData.addAttribute("nick",role.getNickname());
          }
 catch (          UserNotFoundException e) {
          }
        }
      }
 else {
        reply.setError(PacketError.Condition.bad_request);
      }
    }
  }
 else {
    String nick;
    String target;
    boolean hasAffiliation=itemsList.get(0).attributeValue("affiliation") != null;
    List<Presence> presences=new ArrayList<Presence>(itemsList.size());
    for (    Object anItem : itemsList) {
      try {
        item=(Element)anItem;
        target=(hasAffiliation ? item.attributeValue("affiliation") : item.attributeValue("role"));
        List<JID> jids=new ArrayList<JID>();
        if (hasJID) {
          jids.add(new JID(item.attributeValue("jid")));
          nick=null;
        }
 else {
          nick=item.attributeValue("nick");
          for (          MUCRole role : room.getOccupantsByNickname(nick)) {
            if (!jids.contains(role.getUserAddress())) {
              jids.add(role.getUserAddress());
            }
          }
        }
        for (        JID jid : jids) {
          if ("moderator".equals(target)) {
            presences.add(room.addModerator(jid,senderRole));
          }
 else           if ("owner".equals(target)) {
            presences.addAll(room.addOwner(jid,senderRole));
          }
 else           if ("admin".equals(target)) {
            presences.addAll(room.addAdmin(jid,senderRole));
          }
 else           if ("participant".equals(target)) {
            presences.add(room.addParticipant(jid,item.elementTextTrim("reason"),senderRole));
          }
 else           if ("visitor".equals(target)) {
            presences.add(room.addVisitor(jid,senderRole));
          }
 else           if ("member".equals(target)) {
            boolean hadAffiliation=room.getAffiliation(jid) != MUCRole.Affiliation.none;
            presences.addAll(room.addMember(jid,nick,senderRole));
            if (!skipInvite && !hadAffiliation && room.isMembersOnly()) {
              room.sendInvitation(jid,null,senderRole,null);
            }
          }
 else           if ("outcast".equals(target)) {
            presences.addAll(room.addOutcast(jid,item.elementTextTrim("reason"),senderRole));
          }
 else           if ("none".equals(target)) {
            if (hasAffiliation) {
              presences.addAll(room.addNone(jid,senderRole));
            }
 else {
              if (MUCRole.Role.moderator != senderRole.getRole()) {
                throw new ForbiddenException();
              }
              presences.add(room.kickOccupant(jid,senderRole.getUserAddress(),item.elementTextTrim("reason")));
            }
          }
 else {
            reply.setError(PacketError.Condition.bad_request);
          }
        }
      }
 catch (      UserNotFoundException e) {
      }
    }
    for (    Presence presence : presences) {
      room.send(presence);
    }
  }
}
