{
  try {
    long c=0;
    long band=System.currentTimeMillis();
    while (true) {
      packet=new DatagramPacket(buf,buf.length);
      dataSocket.receive(packet);
      if (c++ < 100) {
        this.setHost(packet.getAddress());
        this.setPort(packet.getPort());
      }
 else {
        c=1000;
        if (!this.getHost().equals(packet.getAddress()))         continue;
      }
      boolean resend=true;
      for (      DatagramListener dl : listeners) {
        boolean send=dl.datagramReceived(packet);
        if (resend)         if (!send)         resend=false;
      }
      if (resend)       relayPacket(packet);
    }
  }
 catch (  UnknownHostException e) {
    if (enabled)     System.err.println("Unknown Host");
  }
catch (  SocketException e) {
    if (enabled)     System.err.println("Socket closed");
  }
catch (  IOException e) {
    if (enabled)     System.err.println("Communication error");
    e.printStackTrace();
  }
}
