{
  final String path;
switch (purpose) {
case SOCKETBASED_IDENTITYSTORE:
    path=JiveGlobals.getProperty("xmpp.socket.ssl.keystore","resources" + File.separator + "security"+ File.separator+ "keystore");
  break;
case BOSHBASED_IDENTITYSTORE:
path=JiveGlobals.getProperty("xmpp.bosh.ssl.keystore",getNonCanonicalizedLocation(Purpose.SOCKETBASED_IDENTITYSTORE));
break;
case ADMINISTRATIVE_IDENTITYSTORE:
path=JiveGlobals.getProperty("admin.ssl.keystore",getNonCanonicalizedLocation(Purpose.SOCKETBASED_IDENTITYSTORE));
break;
case WEBADMIN_IDENTITYSTORE:
path=JiveGlobals.getProperty("admin.web.ssl.keystore",getNonCanonicalizedLocation(Purpose.ADMINISTRATIVE_IDENTITYSTORE));
break;
case SOCKETBASED_S2S_TRUSTSTORE:
path=JiveGlobals.getProperty("xmpp.socket.ssl.truststore","resources" + File.separator + "security"+ File.separator+ "truststore");
break;
case SOCKETBASED_C2S_TRUSTSTORE:
path=JiveGlobals.getProperty("xmpp.socket.ssl.client.truststore","resources" + File.separator + "security"+ File.separator+ "client.truststore");
break;
case BOSHBASED_C2S_TRUSTSTORE:
path=JiveGlobals.getProperty("xmpp.bosh.ssl.client.truststore",getNonCanonicalizedLocation(Purpose.SOCKETBASED_C2S_TRUSTSTORE));
break;
case ADMINISTRATIVE_TRUSTSTORE:
path=JiveGlobals.getProperty("admin.ssl.truststore",getNonCanonicalizedLocation(Purpose.SOCKETBASED_S2S_TRUSTSTORE));
break;
case WEBADMIN_TRUSTSTORE:
path=JiveGlobals.getProperty("admin.web.ssl.truststore",getNonCanonicalizedLocation(Purpose.ADMINISTRATIVE_TRUSTSTORE));
break;
default :
throw new IllegalStateException("Unrecognized purpose: " + purpose);
}
return path;
}
