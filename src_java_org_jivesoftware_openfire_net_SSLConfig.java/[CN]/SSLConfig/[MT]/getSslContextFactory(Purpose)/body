{
  final SslContextFactory sslContextFactory=new SslContextFactory();
  final TrustStoreConfig trustStoreConfig=SSLConfig.getInstance().getTrustStoreConfig(purpose);
  sslContextFactory.setTrustStore(trustStoreConfig.getStore());
  sslContextFactory.setTrustStorePassword(trustStoreConfig.getPassword());
  final IdentityStoreConfig identityStoreConfig=SSLConfig.getInstance().getIdentityStoreConfig(purpose);
  sslContextFactory.setKeyStore(identityStoreConfig.getStore());
  sslContextFactory.setKeyStorePassword(identityStoreConfig.getPassword());
  if (purpose.getProtocolsEnabled() != null) {
    sslContextFactory.setIncludeProtocols(purpose.getProtocolsEnabled().split(","));
  }
  if (purpose.getProtocolsDisabled() != null) {
    sslContextFactory.setExcludeProtocols(purpose.getProtocolsDisabled().split(","));
  }
  if (purpose.getCipherSuitesEnabled() != null) {
    sslContextFactory.setIncludeCipherSuites(purpose.getCipherSuitesEnabled().split(","));
  }
  if (purpose.getCipherSuitesDisabled() != null) {
    sslContextFactory.setExcludeCipherSuites(purpose.getCipherSuitesDisabled().split(","));
  }
  return sslContextFactory;
}
