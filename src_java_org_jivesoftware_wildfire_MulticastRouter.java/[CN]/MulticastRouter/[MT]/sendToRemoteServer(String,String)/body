{
  Collection<Packet> packets=null;
synchronized (domain.intern()) {
    packets=remotePackets.remove(domain);
  }
  if (multicastService != null && multicastService.trim().length() > 0) {
    for (    Packet packet : packets) {
      Element addresses=getAddresses(packet);
      for (Iterator it=addresses.elementIterator("address"); it.hasNext(); ) {
        Element address=(Element)it.next();
        String jid=address.attributeValue("jid");
        if (!jid.contains("@" + domain)) {
          if (Type.bcc.toString().equals(address.attributeValue("type"))) {
            it.remove();
          }
 else {
            address.addAttribute("delivered","true");
          }
        }
      }
      packet.setTo(multicastService);
      packetRouter.route(packet);
    }
  }
 else {
    for (    Packet packet : packets) {
      Element addresses=getAddresses(packet);
      List<String> targets=new ArrayList<String>();
      for (Iterator it=addresses.elementIterator("address"); it.hasNext(); ) {
        Element address=(Element)it.next();
        String jid=address.attributeValue("jid");
        if (jid.contains("@" + domain)) {
          targets.add(jid);
        }
        address.addAttribute("delivered","true");
        if (Type.bcc.toString().equals(address.attributeValue("type"))) {
          it.remove();
        }
      }
      for (      String jid : targets) {
        packet.setTo(jid);
        packetRouter.route(packet);
      }
    }
  }
}
