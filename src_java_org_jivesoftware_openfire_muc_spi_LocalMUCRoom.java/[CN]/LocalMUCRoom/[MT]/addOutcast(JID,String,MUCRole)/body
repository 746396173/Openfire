{
  final JID bareJID=jid.asBareJID();
  lock.writeLock().lock();
  try {
    MUCRole.Affiliation oldAffiliation=MUCRole.Affiliation.none;
    if (MUCRole.Affiliation.admin != senderRole.getAffiliation() && MUCRole.Affiliation.owner != senderRole.getAffiliation()) {
      throw new ForbiddenException();
    }
    if (owners.contains(bareJID) && owners.size() == 1) {
      throw new ConflictException();
    }
    if (outcasts.contains(bareJID)) {
      return Collections.emptyList();
    }
    outcasts.add(bareJID);
    if (removeOwner(bareJID)) {
      oldAffiliation=MUCRole.Affiliation.owner;
    }
 else     if (removeAdmin(bareJID)) {
      oldAffiliation=MUCRole.Affiliation.admin;
    }
 else     if (removeMember(bareJID)) {
      oldAffiliation=MUCRole.Affiliation.member;
    }
    MUCPersistenceManager.saveAffiliationToDB(this,bareJID,null,MUCRole.Affiliation.outcast,oldAffiliation);
  }
  finally {
    lock.writeLock().unlock();
  }
  CacheFactory.doClusterTask(new AddAffiliation(this,jid.toBareJID(),MUCRole.Affiliation.outcast));
  return applyAffiliationChange(senderRole,bareJID,reason);
}
