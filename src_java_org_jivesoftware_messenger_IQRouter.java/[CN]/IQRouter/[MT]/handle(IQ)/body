{
  JID recipientJID=packet.getTo();
  try {
    if (recipientJID != null) {
      try {
        RoutableChannelHandler serviceRoute=routingTable.getRoute(recipientJID);
        if (!(serviceRoute instanceof ClientSession)) {
          serviceRoute.process(packet);
          return;
        }
      }
 catch (      NoSuchRouteException e) {
      }
    }
    if (isLocalServer(recipientJID)) {
      Element childElement=packet.getChildElement();
      String namespace=null;
      if (childElement != null) {
        namespace=childElement.getNamespaceURI();
      }
      if (namespace == null) {
        if (packet.getType() != IQ.Type.result) {
          Log.warn("Unknown packet " + packet);
        }
      }
 else {
        IQHandler handler=getHandler(namespace);
        if (handler == null) {
          IQ reply=IQ.createResultIQ(packet);
          if (recipientJID == null) {
            reply.setChildElement(packet.getChildElement().createCopy());
            reply.setError(PacketError.Condition.service_unavailable);
          }
 else           if (recipientJID.getNode() == null || "".equals(recipientJID.getNode())) {
            reply.setChildElement(packet.getChildElement().createCopy());
            reply.setError(PacketError.Condition.feature_not_implemented);
          }
 else {
            reply.setChildElement(packet.getChildElement().createCopy());
            reply.setError(PacketError.Condition.service_unavailable);
          }
          try {
            routingTable.getRoute(packet.getFrom()).process(reply);
          }
 catch (          NoSuchRouteException e) {
            Session session=sessionManager.getSession(packet.getFrom());
            if (session != null) {
              session.process(reply);
            }
 else {
              Log.warn("Packet could not be delivered " + packet);
            }
          }
        }
 else {
          handler.process(packet);
        }
      }
    }
 else {
      boolean handlerFound=false;
      if (XMPPServer.getInstance().isLocal(recipientJID)) {
        Session session=sessionManager.getBestRoute(recipientJID);
        if (session != null) {
          session.process(packet);
          handlerFound=true;
        }
 else {
          Log.info("Packet sent to unreachable address " + packet);
        }
      }
 else {
        try {
          ChannelHandler route=routingTable.getRoute(recipientJID);
          route.process(packet);
          handlerFound=true;
        }
 catch (        NoSuchRouteException e) {
          Log.info("Packet sent to unreachable address " + packet);
        }
      }
      if (!handlerFound && IQ.Type.result != packet.getType()) {
        IQ reply=IQ.createResultIQ(packet);
        reply.setChildElement(packet.getChildElement().createCopy());
        reply.setError(PacketError.Condition.service_unavailable);
        try {
          routingTable.getRoute(packet.getFrom()).process(reply);
        }
 catch (        NoSuchRouteException e) {
          Session session=sessionManager.getSession(packet.getFrom());
          if (session != null) {
            session.process(reply);
          }
 else {
            Log.warn("Packet could not be delivered " + reply);
          }
        }
      }
    }
  }
 catch (  Exception e) {
    Log.error(LocaleUtils.getLocalizedString("admin.error.routing"),e);
    Session session=sessionManager.getSession(packet.getFrom());
    if (session != null) {
      Connection conn=session.getConnection();
      if (conn != null) {
        conn.close();
      }
    }
  }
}
