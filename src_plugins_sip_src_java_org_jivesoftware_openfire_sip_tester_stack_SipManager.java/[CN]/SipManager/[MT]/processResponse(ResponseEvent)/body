{
  Log.debug("RESPONSE [" + responseReceivedEvent.getResponse().getStatusCode() + "]");
  ClientTransaction clientTransaction=responseReceivedEvent.getClientTransaction();
  if (clientTransaction == null) {
    return;
  }
  Response response=responseReceivedEvent.getResponse();
  String method=((CSeqHeader)response.getHeader(CSeqHeader.NAME)).getMethod();
  if (response.getStatusCode() == Response.OK) {
    if (method.equals(Request.REGISTER)) {
      registerProcessing.processOK(clientTransaction,response);
    }
  }
 else   if (response.getStatusCode() == Response.NOT_FOUND) {
    if (method.equals(Request.REGISTER)) {
      try {
        unregister();
        registrationFailed(RegistrationEvent.Type.NotFound);
      }
 catch (      CommunicationsException e) {
        Log.error("NOT FOUND",e);
      }
      Log.debug("REGISTER NOT FOUND");
    }
  }
 else   if (response.getStatusCode() == Response.NOT_IMPLEMENTED) {
    if (method.equals(Request.REGISTER)) {
      registerProcessing.processNotImplemented(clientTransaction,response);
    }
  }
 else   if (response.getStatusCode() == Response.UNAUTHORIZED || response.getStatusCode() == Response.PROXY_AUTHENTICATION_REQUIRED) {
    if (method.equals(Request.REGISTER)) {
      CSeqHeader cseq=(CSeqHeader)response.getHeader(CSeqHeader.NAME);
      if (cseq.getSequenceNumber() < 2)       registerProcessing.processAuthenticationChallenge(clientTransaction,response);
 else       registrationFailed(RegistrationEvent.Type.WrongPass);
    }
  }
 else   if (response.getStatusCode() == Response.FORBIDDEN) {
    registrationFailed(RegistrationEvent.Type.Forbidden);
  }
}
