{
  Workgroup workgroup=WorkgroupManager.getInstance().getWorkgroup(new JID(workgroupJID));
  int interceptorCount=0;
  String iCount=workgroup.getProperties().getProperty("jive.interceptor." + getPropertySuffix() + ".interceptorCount");
  if (iCount != null) {
    try {
      interceptorCount=Integer.parseInt(iCount);
    }
 catch (    NumberFormatException nfe) {
    }
  }
  List<PacketInterceptor> interceptorList=new ArrayList<PacketInterceptor>(interceptorCount);
  for (int i=0; i < interceptorCount; i++) {
    try {
      String interceptorContext="jive.interceptor." + getPropertySuffix() + ".interceptor"+ i+ ".";
      String className=workgroup.getProperties().getProperty(interceptorContext + "className");
      Class interceptorClass=loadClass(className);
      interceptorList.add((PacketInterceptor)interceptorClass.newInstance());
      Map interceptorProps=new HashMap();
      for (      String key : getChildrenPropertyNames(interceptorContext + "properties",workgroup.getProperties().getPropertyNames())) {
        String value=workgroup.getProperties().getProperty(key);
        interceptorProps.put(key.substring(key.lastIndexOf(".") + 1),value);
      }
      BeanUtils.setProperties(interceptorList.get(i),interceptorProps);
    }
 catch (    Exception e) {
      Log.error("Error loading local interceptor " + i,e);
    }
  }
  localInterceptors.put(workgroupJID,new CopyOnWriteArrayList<PacketInterceptor>(interceptorList));
}
