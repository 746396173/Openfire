{
  if (feedUrl == null) {
    throw new IllegalArgumentException("null is not a valid URL");
  }
  HttpClient client=new HttpClient();
  HttpConnectionManager conManager=client.getHttpConnectionManager();
  conManager.getParams().setParameter("http.connection.timeout",3000);
  conManager.getParams().setParameter("http.socket.timeout",3000);
  if (getCredentialSupplier() != null) {
    client.getState().setAuthenticationPreemptive(true);
    Credentials credentials=getCredentialSupplier().getCredentials(null,feedUrl.getHost());
    if (credentials != null) {
      client.getState().setCredentials(null,feedUrl.getHost(),credentials);
    }
  }
  System.setProperty("httpclient.useragent","Openfire Admin Console: v" + XMPPServer.getInstance().getServerInfo().getVersion().getVersionString());
  String urlStr=feedUrl.toString();
  FeedFetcherCache cache=getFeedInfoCache();
  if (cache != null) {
    HttpMethod method=new GetMethod(urlStr);
    method.addRequestHeader("Accept-Encoding","gzip");
    try {
      if (isUsingDeltaEncoding()) {
        method.setRequestHeader("A-IM","feed");
      }
      SyndFeedInfo syndFeedInfo=cache.getFeedInfo(feedUrl);
      if (syndFeedInfo != null) {
        method.setRequestHeader("If-None-Match",syndFeedInfo.getETag());
        if (syndFeedInfo.getLastModified() instanceof String) {
          method.setRequestHeader("If-Modified-Since",(String)syndFeedInfo.getLastModified());
        }
      }
      method.setFollowRedirects(true);
      int statusCode=client.executeMethod(method);
      fireEvent(FetcherEvent.EVENT_TYPE_FEED_POLLED,urlStr);
      handleErrorCodes(statusCode);
      SyndFeed feed=getFeed(syndFeedInfo,urlStr,method,statusCode);
      syndFeedInfo=buildSyndFeedInfo(feedUrl,urlStr,method,feed,statusCode);
      cache.setFeedInfo(new URL(urlStr),syndFeedInfo);
      feed=syndFeedInfo.getSyndFeed();
      return feed;
    }
  finally {
      method.releaseConnection();
    }
  }
 else {
    HttpMethod method=new GetMethod(urlStr);
    try {
      method.setFollowRedirects(true);
      int statusCode=client.executeMethod(method);
      fireEvent(FetcherEvent.EVENT_TYPE_FEED_POLLED,urlStr);
      handleErrorCodes(statusCode);
      return getFeed(null,urlStr,method,statusCode);
    }
  finally {
      method.releaseConnection();
    }
  }
}
